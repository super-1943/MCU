; .\Text1.SRC generated from: Text1.c
; COMPILER INVOKED BY:
;        C:\Keil\C51\BIN\C51.EXE Text1.c BROWSE DEBUG OBJECTEXTEND SRC(.\Text1.SRC)

$NOMOD51

NAME	TEXT1

P0	DATA	080H
P1	DATA	090H
P2	DATA	0A0H
P3	DATA	0B0H
T0	BIT	0B0H.4
AC	BIT	0D0H.6
T1	BIT	0B0H.5
T2	BIT	090H.0
EA	BIT	0A8H.7
IE	DATA	0A8H
EXF2	BIT	0C8H.6
RD	BIT	0B0H.7
ES	BIT	0A8H.4
IP	DATA	0B8H
RI	BIT	098H.0
INT0	BIT	0B0H.2
CY	BIT	0D0H.7
TI	BIT	098H.1
INT1	BIT	0B0H.3
RCAP2H	DATA	0CBH
PS	BIT	0B8H.4
SP	DATA	081H
T2EX	BIT	090H.1
OV	BIT	0D0H.2
RCAP2L	DATA	0CAH
C_T2	BIT	0C8H.1
WR	BIT	0B0H.6
RCLK	BIT	0C8H.5
TCLK	BIT	0C8H.4
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
TMOD	DATA	089H
TCON	DATA	088H
IE0	BIT	088H.1
IE1	BIT	088H.3
B	DATA	0F0H
CP_RL2	BIT	0C8H.0
ACC	DATA	0E0H
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
ET2	BIT	0A8H.5
TF1	BIT	088H.7
TF2	BIT	0C8H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
TB8	BIT	098H.3
EX1	BIT	0A8H.2
IT1	BIT	088H.2
TH2	DATA	0CDH
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
buz	BIT	090H.3
SM2	BIT	098H.5
TL2	DATA	0CCH
PT0	BIT	0B8H.1
PT1	BIT	0B8H.3
RS0	BIT	0D0H.3
PT2	BIT	0B8H.5
TR0	BIT	088H.4
RS1	BIT	0D0H.4
TR1	BIT	088H.6
TR2	BIT	0C8H.2
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
DPH	DATA	083H
DPL	DATA	082H
EXEN2	BIT	0C8H.3
REN	BIT	098H.4
T2CON	DATA	0C8H
RXD	BIT	0B0H.0
TXD	BIT	0B0H.1
F0	BIT	0D0H.5
PSW	DATA	0D0H
key1	BIT	090H.0
key2	BIT	090H.1
?PR?_delay?TEXT1     SEGMENT CODE 
?PR?shortdelay?TEXT1 SEGMENT CODE 
?PR?_buzzer?TEXT1    SEGMENT CODE 
?PR?_show?TEXT1      SEGMENT CODE 
?DT?_show?TEXT1      SEGMENT DATA OVERLAYABLE 
?PR?myint0?TEXT1     SEGMENT CODE 
?PR?myt1?TEXT1       SEGMENT CODE 
?PR?main?TEXT1       SEGMENT CODE 
?C_INITSEG           SEGMENT CODE 
?DT?TEXT1            SEGMENT DATA 
	EXTRN	CODE (?C?CLDOPTR)
	EXTRN	CODE (?C_STARTUP)
	PUBLIC	buffer
	PUBLIC	tcount
	PUBLIC	table
	PUBLIC	main
	PUBLIC	myt1
	PUBLIC	myint0
	PUBLIC	_show
	PUBLIC	_buzzer
	PUBLIC	shortdelay
	PUBLIC	_delay

	RSEG  ?DT?_show?TEXT1
?_show?BYTE:
        buf?345:   DS   3

	RSEG  ?DT?TEXT1
          table:   DS   17
         tcount:   DS   1
         buffer:   DS   8

	RSEG  ?C_INITSEG
	DB	001H
	DB	tcount
	DB	000H

	DB	011H
	DB	table
	DB	03FH
	DB	006H
	DB	05BH
	DB	04FH
	DB	066H
	DB	06DH
	DB	07DH
	DB	007H
	DB	07FH
	DB	06FH
	DB	077H
	DB	07CH
	DB	039H
	DB	05EH
	DB	079H
	DB	071H
	DB	000H

	DB	008H
	DB	buffer
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H

; /*******************************************************
; 说明：数码管显示
; 一，二数码管显示AD输出（必须按下S4触发int0中断之后）
; 3位显示是否有AD输出
; 4，5位空闲
; 6位显示555的触发频率（0-F）
; 7，8位空闲
; *******************************************************/
; #include <absacc.h>
; #include <reg52.h>
; #include <stdarg.h>
; #include <stdio.h>
; sbit key1=P1^0;
; sbit key2=P1^1;
; sbit buz=P1^3;
; unsigned char tcount=0;
; #define PORTA XBYTE[0x8fff]
; #define PORTB XBYTE[0x9fff]
; #define PORTC XBYTE[0xafff]
; #define CADDR XBYTE[0xbfff]
; #define ADREAD XBYTE[0x00ff]
; unsigned char table[]={
; 0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71,0x00
; };
; unsigned char buffer[8]={0,0,0,0,0,0,0,0};
; void delay(unsigned char j)

	RSEG  ?PR?_delay?TEXT1
_delay:
	USING	0
			; SOURCE LINE # 26
;---- Variable 'j?040' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 27
; 	unsigned char i,k;
; 	for(i=123;i;i--)
			; SOURCE LINE # 29
;---- Variable 'i?041' assigned to Register 'R6' ----
	MOV  	R6,#07BH
?C0001:
; 	for(k=5;k;k--)
			; SOURCE LINE # 30
;---- Variable 'k?042' assigned to Register 'R5' ----
	MOV  	R5,#05H
?C0004:
; 	for(;j;j--);
			; SOURCE LINE # 31
?C0007:
	MOV  	A,R7
	JZ   	?C0006
	DEC  	R7
	SJMP 	?C0007
?C0006:
	DJNZ 	R5,?C0004
?C0003:
	DJNZ 	R6,?C0001
; }
			; SOURCE LINE # 32
?C0010:
	RET  	
; END OF _delay

; void shortdelay(void)

	RSEG  ?PR?shortdelay?TEXT1
shortdelay:
	USING	0
			; SOURCE LINE # 33
; {
			; SOURCE LINE # 34
; 	unsigned char i;
; 	for(i=200;i;i--);
			; SOURCE LINE # 36
;---- Variable 'i?143' assigned to Register 'R7' ----
	MOV  	R7,#0C8H
?C0011:
	DJNZ 	R7,?C0011
; }
			; SOURCE LINE # 37
?C0014:
	RET  	
; END OF shortdelay

; void buzzer(unsigned char i)

	RSEG  ?PR?_buzzer?TEXT1
_buzzer:
	USING	0
			; SOURCE LINE # 38
;---- Variable 'i?244' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 39
; 	buz=0;
			; SOURCE LINE # 40
	CLR  	buz
; 	delay(i);
			; SOURCE LINE # 41
	LCALL	_delay
; 	buz=1;
			; SOURCE LINE # 42
	SETB 	buz
; 	shortdelay();
			; SOURCE LINE # 43
	LJMP 	shortdelay
; END OF _buzzer

; }
; void show(unsigned char *buf)

	RSEG  ?PR?_show?TEXT1
_show:
	USING	0
			; SOURCE LINE # 45
	MOV  	buf?345,R3
	MOV  	buf?345+01H,R2
	MOV  	buf?345+02H,R1
; {
			; SOURCE LINE # 46
; 	unsigned char i;
; 	CADDR=0x80;
			; SOURCE LINE # 48
	MOV  	DPTR,#0BFFFH
	MOV  	A,#080H
	MOVX 	@DPTR,A
; 	PORTC=0xff;
			; SOURCE LINE # 49
	MOV  	DPTR,#0AFFFH
	MOV  	A,#0FFH
	MOVX 	@DPTR,A
; 	PORTB=0xfe;
			; SOURCE LINE # 50
	MOV  	DPTR,#09FFFH
	DEC  	A
	MOVX 	@DPTR,A
; 	PORTA=0x00;
			; SOURCE LINE # 51
	MOV  	DPTR,#08FFFH
	CLR  	A
	MOVX 	@DPTR,A
; 	for(i=0;i<8;i++)
			; SOURCE LINE # 52
;---- Variable 'i?346' assigned to Register 'R4' ----
	MOV  	R4,A
?C0016:
; 	{
			; SOURCE LINE # 53
; 		PORTA=table[buf[i]];
			; SOURCE LINE # 54
	MOV  	R3,buf?345
	MOV  	R2,buf?345+01H
	MOV  	R1,buf?345+02H
	MOV  	DPL,R4
	MOV  	DPH,#00H
	LCALL	?C?CLDOPTR
	ADD  	A,#LOW (table)
	MOV  	R0,A
	MOV  	A,@R0
	MOV  	DPTR,#08FFFH
	MOVX 	@DPTR,A
; 		delay(7);
			; SOURCE LINE # 55
	MOV  	R7,#07H
	LCALL	_delay
; 		PORTB<<=1;
			; SOURCE LINE # 56
	MOV  	DPTR,#09FFFH
	MOVX 	A,@DPTR
	ADD  	A,ACC
	MOVX 	@DPTR,A
; 		PORTB+=1;
			; SOURCE LINE # 57
	MOVX 	A,@DPTR
	INC  	A
	MOVX 	@DPTR,A
; 	}
			; SOURCE LINE # 58
	INC  	R4
	CJNE 	R4,#08H,?C0016
; }
			; SOURCE LINE # 59
?C0019:
	RET  	
; END OF _show

CSEG	AT	00003H
	LJMP	myint0

; void myint0(void)interrupt 0 using 1

	RSEG  ?PR?myint0?TEXT1
	USING	1
myint0:
	PUSH 	ACC
	PUSH 	DPH
	PUSH 	DPL
	PUSH 	PSW
	USING	1
	MOV  	PSW,#08H
			; SOURCE LINE # 60
; {
; 	unsigned char i;
; 	IT1=1;
			; SOURCE LINE # 63
	SETB 	IT1
; 	EX1=1;
			; SOURCE LINE # 64
	SETB 	EX1
; 	ADREAD=0;
			; SOURCE LINE # 65
	MOV  	DPTR,#0FFH
	CLR  	A
	MOVX 	@DPTR,A
; 	for(i=0;i<8;i++)
			; SOURCE LINE # 66
;---- Variable 'i?447' assigned to Register 'R7' ----
?C0020:
; 	{
			; SOURCE LINE # 67
; 		buffer[i]=0;
			; SOURCE LINE # 68
	MOV  	R7,#08H
	MOV  	R0,#LOW (buffer)
	CLR  	A
?C0030:
	MOV  	@R0,A
	INC  	R0
	DJNZ 	R7,?C0030
; 	}
			; SOURCE LINE # 69
?C0021:
; 	buzzer(1);
			; SOURCE LINE # 70
	MOV  	R7,#01H
	LCALL	_buzzer
; }
			; SOURCE LINE # 71
	POP  	PSW
	POP  	DPL
	POP  	DPH
	POP  	ACC
	RETI 	
; END OF myint0

CSEG	AT	0001BH
	LJMP	myt1

; /*
; void int1(void)interrupt 2 using 2
; {
; //	EX1=0;
; 	buffer[2]=1;
; 	buffer[0]=ADREAD/16;
; 	buffer[1]=ADREAD%16;
; }
; */
; #pragma asm
; #pragma endasm
; void myt1(void)interrupt 3 using 2

	RSEG  ?PR?myt1?TEXT1
	USING	2
myt1:
	PUSH 	ACC
	PUSH 	PSW
			; SOURCE LINE # 83
; {
; 	if(tcount==0)
			; SOURCE LINE # 85
	MOV  	A,tcount
	JNZ  	?C0024
; 	{
			; SOURCE LINE # 86
; 		TR0=1;
			; SOURCE LINE # 87
	SETB 	TR0
; 	}
			; SOURCE LINE # 88
?C0024:
; 	TH1=(65536-50000)/256;
			; SOURCE LINE # 89
	MOV  	TH1,#03CH
; 	TL1=(65536-50000)%256;
			; SOURCE LINE # 90
	MOV  	TL1,#0B0H
; 	tcount++;
			; SOURCE LINE # 91
	INC  	tcount
; 	if(tcount==20)
			; SOURCE LINE # 92
	MOV  	A,tcount
	CJNE 	A,#014H,?C0026
; 	{
			; SOURCE LINE # 93
; 		TR0=0;
			; SOURCE LINE # 94
	CLR  	TR0
; 		buffer[5]=TL0;
			; SOURCE LINE # 95
	MOV  	buffer+05H,TL0
; 		TL0=0;
			; SOURCE LINE # 96
	MOV  	TL0,#00H
; 		tcount=0;
			; SOURCE LINE # 97
	MOV  	tcount,#00H
; 	}
			; SOURCE LINE # 98
; }
			; SOURCE LINE # 99
?C0026:
	POP  	PSW
	POP  	ACC
	RETI 	
; END OF myt1

; 
; void main(void)

	RSEG  ?PR?main?TEXT1
main:
	USING	0
			; SOURCE LINE # 101
; {
			; SOURCE LINE # 102
; 	EX0=1;
			; SOURCE LINE # 103
	SETB 	EX0
; 	ET1=1;
			; SOURCE LINE # 104
	SETB 	ET1
; 	TMOD=0x16;
			; SOURCE LINE # 105
	MOV  	TMOD,#016H
; 	TH1=(65536-50000)/256;
			; SOURCE LINE # 106
	MOV  	TH1,#03CH
; 	TL1=(65536-50000)%256;
			; SOURCE LINE # 107
	MOV  	TL1,#0B0H
; 	TR1=1;
			; SOURCE LINE # 108
	SETB 	TR1
?C0027:
; 	while(1)
			; SOURCE LINE # 109
; 	{
			; SOURCE LINE # 110
; 		show(buffer);
			; SOURCE LINE # 111
	MOV  	R3,#00H
	MOV  	R2,#HIGH (buffer)
	MOV  	R1,#LOW (buffer)
	LCALL	_show
; 	}
			; SOURCE LINE # 112
	SJMP 	?C0027
; END OF main

	END
