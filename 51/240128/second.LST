C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE SECOND
OBJECT MODULE PLACED IN second.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE second.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /******************************************************************/ 
   2          //6963c 通用程序 
   3          //8X8 象素 
   4          //RAM 空间：32K，地址：0－7FFF； 
   5          //取模方式：横向取模 
   6           
   7          //对不同得屏，修改下面的参数 
   8          //unsigned int size_lie=128  ;  //LCD象素点的列数目,例如 240128 的屏是240 
   9          //unsigned int size_hang=64 ;  //LCD象素点的行数目,例如 240128 的屏是 128 
  10           
  11          //然后将 unsigned char code sch[]={}里的数据改为新的图片数据，默认的是12864的 
  12          /******************************************************************/ 
  13          #include <reg52.h> 
  14          #include <intrins.h> 
  15          /******************************************************************/ 
  16           
  17          #define CE_0 (P2=0x90)
  18          sbit    d_i=P2^0;        /*  command or data select，H：command  L:data*/ 
  19           
  20          sbit    r_d=P3^7;         /*  rd  EQU P1.4 */ 
  21          sbit    w_r=P3^6;        /*  wr  EQU P1.5 */ 
  22          
  23           
  24          //sbit    sta0_bit=P2^0; 
  25          //sbit    sta1_bit=P2^1; 
  26          //sbit    sta3_bit=P2^3; 
  27          unsigned char *p; 
  28          unsigned char *q; 
  29          unsigned char *r; 
  30          unsigned char *s; 
  31           
  32          //以下的变量比较多，建议用结构体 
  33          unsigned int size_lie=128 ;  //LCD象素点的列数目,例如 240128 的屏是 240 
  34          unsigned int size_hang=64 ;  //LCD象素点的行数目,例如 240128 的屏是 128 
  35          unsigned int    textsize; //LCD text区域空间， 
  36          unsigned int    graphicsize;//LCD graphic区域空间 
  37          unsigned char textsize_h;   //textsize 的高字节 
  38          unsigned char textsize_l;    //低字节 
  39          unsigned char graphicsize_h;//graphic的高字节 
  40          unsigned char graphicsize_l;//graphic的低字节 
  41           
  42           
  43           
  44          unsigned int   text_startaddr;//TEXT区域的起始地址 
  45          unsigned char text_startaddr_h;//高字节， 
  46          unsigned char text_startaddr_l;//低字节 
  47          unsigned int    graphic_startaddr;//graphic 区域的首地址 
  48          unsigned char graphic_startaddr_h; 
  49          unsigned char graphic_startaddr_l; 
  50           
  51           
  52          unsigned char *p;//指针变量 
  53          unsigned char *q; 
  54          unsigned char *r; 
  55          unsigned char *s; 
C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 2   

  56           
  57          unsigned char bdata flag; 
  58           
  59           
  60          #define  nop()      _nop_();       
  61          unsigned char code h8O[3]={0x18,0x28,0x79}; 
  62          unsigned char code graphich8o[24]={ 
  63          0x0e,0x11,0x11,0x0e,0x11,0x11,0x0e,0x00,//字符的编码   
  64          0x11,0x11,0x11,0x1f,0x11,0x11,0x11,0x00,//字符的编码   
  65          0x0a,0x00,0x0e,0x11,0x11,0x11,0x0e,0x00//字符的编码    
  66          }; 
  67           
  68           
  69          unsigned char code sch[1920]={ 
  70          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  71          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  72          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  73          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  74          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  75          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  76          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  77          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  78          0x00,0x01,0x10,0x02,0x08,0x08,0x00,0x40,0x04,0x01,0xBF,0x00,0x20,0x00,0x00,0x00, 
  79          0x00,0x01,0x08,0x02,0x04,0x04,0xF8,0x48,0x05,0x0E,0x21,0x00,0x10,0x00,0x00,0x00, 
  80          0x00,0x03,0xFF,0x12,0xFF,0xC4,0x88,0x44,0x04,0x82,0x21,0x07,0xFF,0xC0,0x00,0x00, 
  81          0x00,0x06,0x10,0x0A,0x91,0x10,0x8A,0x46,0x04,0x82,0x21,0x04,0x00,0x00,0x00,0x00, 
  82          0x00,0x0B,0xFF,0x0B,0x11,0x08,0xAA,0x44,0xFF,0xDF,0xA1,0x04,0xFF,0x00,0x00,0x00, 
  83          0x00,0x02,0x10,0x1F,0xD1,0x0A,0xAA,0x40,0x04,0x02,0x3F,0x04,0x22,0x00,0x00,0x00, 
  84          0x00,0x03,0xFF,0x02,0x2A,0x82,0xAA,0x5C,0x04,0x06,0x00,0x04,0x14,0x00,0x00,0x00, 
  85          0x00,0x02,0x10,0x07,0x44,0x44,0xAA,0x44,0xFC,0x07,0x7F,0x84,0x08,0x00,0x00,0x00, 
  86          0x00,0x03,0xFF,0x86,0x84,0x44,0xAA,0x44,0x24,0x0A,0x88,0x05,0xFF,0xC0,0x00,0x00, 
  87          0x00,0x00,0x20,0x0A,0x04,0x04,0xAA,0x44,0x22,0x0A,0x08,0x04,0x08,0x80,0x00,0x00, 
  88          0x00,0x0F,0xFF,0xCA,0xFF,0xD8,0xAA,0x44,0x22,0x12,0x7F,0x84,0x08,0x00,0x00,0x00, 
  89          0x00,0x00,0x68,0x12,0x04,0x08,0x20,0x44,0x21,0x42,0x08,0x04,0x08,0x00,0x00,0x00, 
  90          0x00,0x00,0xA4,0x02,0x04,0x08,0x50,0x45,0x39,0x42,0x08,0x04,0x08,0x00,0x00,0x00, 
  91          0x00,0x03,0x23,0x82,0x04,0x08,0x48,0x46,0xC0,0xC2,0x08,0x08,0x08,0x00,0x00,0x00, 
  92          0x00,0x0C,0x21,0x02,0x04,0x08,0x89,0x44,0x00,0x42,0xFF,0xC8,0x28,0x00,0x00,0x00, 
  93          0x00,0x00,0x20,0x02,0x04,0x09,0x00,0x80,0x00,0x02,0x00,0x10,0x10,0x00,0x00,0x00, 
  94          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  95          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  96          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  97          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  98          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
  99          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 100          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 101          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 102          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 103          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 104          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 105          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 106          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 107          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 108          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 109          0x6B,0x6B,0x6B,0x00,0x1F,0x1F,0x73,0x80,0x70,0x1F,0x7C,0x00,0x1F,0x1C,0x77,0x00, 
 110          0x49,0x49,0x49,0x00,0x21,0x21,0x21,0x00,0x20,0x21,0x22,0x00,0x21,0x22,0x36,0x00, 
 111          0x49,0x49,0x49,0x00,0x21,0x21,0x21,0x00,0x20,0x21,0x21,0x00,0x21,0x41,0x36,0x00, 
 112          0x49,0x49,0x49,0x00,0x20,0x40,0x21,0x00,0x20,0x40,0x21,0x00,0x40,0x41,0x36,0x00, 
 113          0x49,0x49,0x49,0x00,0x10,0x40,0x21,0x00,0x20,0x40,0x21,0x00,0x40,0x41,0x36,0x00, 
 114          0x55,0x55,0x55,0x00,0x0C,0x40,0x3F,0x3F,0xA0,0x40,0x21,0x00,0x40,0x41,0x2A,0x00, 
 115          0x55,0x55,0x55,0x00,0x02,0x40,0x21,0x00,0x20,0x40,0x21,0x00,0x40,0x41,0x2A,0x00, 
 116          0x36,0x36,0x36,0x00,0x01,0x40,0x21,0x00,0x20,0x40,0x21,0x00,0x40,0x41,0x2A,0x00, 
 117          0x22,0x22,0x22,0x00,0x21,0x21,0x21,0x00,0x20,0x21,0x21,0x00,0x21,0x41,0x2A,0x00, 
C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 3   

 118          0x22,0x22,0x22,0x30,0x21,0x22,0x21,0x00,0x21,0x22,0x22,0x30,0x22,0x22,0x2A,0x00, 
 119          0x22,0x22,0x22,0x30,0x3E,0x1C,0x73,0x80,0x7F,0x1C,0x7C,0x30,0x1C,0x1C,0x6B,0x00, 
 120          0x22,0x22,0x22,0x30,0x3E,0x1C,0x73,0x80,0x7F,0x1C,0x7C,0x30,0x1C,0x1C,0x6B,0x00, 
 121          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 122          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 123          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 124          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 125          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 126          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 127          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 128          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 129          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 130          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 131          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 132          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 133          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 134          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 
 135          }; 
 136          unsigned char code tableindex[48]={//汉字的索引，此方法比较繁琐 
 137          0,0,0,0,0,0,0,1,2,0,0,0,//第一组，24 个      送别 
 138          0,3,4,5,6,7,0,8,6,9,10,11,//下马饮君酒  问君何所之 
 139          0,6,12,13,14,15,0,16,17,18,19,20,//君言不得志  归卧南山陲 
 140          0,21,22,23,24,25,0,26,27,28,29,30};//但去莫复闻  白云无尽时 
 141          //每个字符代码所占的空间=8 字节 
 142          //===============数组:"液晶"16*16=============== 
 143           unsigned char code CGTAB[992]={// 共 30 个汉字,每个 32 字节,共占 960 个字节,字体: 宋体小: -12     
 144               0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 145               0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 146           
 147          /*送*/0x42,0x21,0x21,0x07,0x00,0x00,0xEF,0x20,0x21,0x21,0x22,0x24,0x20,0x50,0x8F,0x00, 
 148                0x20,0x20,0x40,0xF8,0x80,0x80,0xFC,0x80,0x40,0x20,0x10,0x10,0x00,0x00,0xFE,0x00, 
 149          /*别*/0x00,0x3F,0x21,0x21,0x21,0x3F,0x29,0x08,0x7F,0x09,0x11,0x11,0x21,0x27,0x42,0x80, 
 150                0x04,0x04,0x24,0x24,0x24,0x24,0x24,0x24,0x24,0x24,0x24,0x04,0x04,0x04,0x1C,0x08, 
 151          /*下*/0x00,0x7F,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00, 
 152                0x04,0xFE,0x00,0x00,0x00,0xC0,0x60,0x30,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 153          /*马*/0x00,0x3F,0x00,0x08,0x08,0x08,0x08,0x0F,0x00,0x00,0x7F,0x00,0x00,0x00,0x00,0x00, 
 154                0x00,0xE0,0x20,0x20,0x20,0x20,0x20,0xFC,0x04,0x04,0xF4,0x04,0x04,0x34,0x08,0x00, 
 155          /*饮*/0x20,0x20,0x20,0x3D,0x45,0x4A,0x94,0x10,0x10,0x10,0x10,0x11,0x15,0x1A,0x14,0x00, 
 156                0x80,0x80,0x80,0xFE,0x04,0x48,0x40,0x40,0x40,0xA0,0xA0,0x10,0x08,0x0E,0x04,0x00, 
 157          /*君*/0x00,0x3F,0x02,0x02,0xFF,0x04,0x04,0x3F,0x04,0x08,0x1F,0x18,0x28,0x48,0x8F,0x08, 
 158                0x00,0xF8,0x08,0x08,0xFE,0x08,0x08,0xF8,0x08,0x00,0xF8,0x08,0x08,0x08,0xF8,0x08, 
 159          /*酒*/0x40,0x2F,0x21,0x01,0x97,0x55,0x15,0x25,0x25,0x26,0xC4,0x47,0x44,0x47,0x44,0x00, 
 160                0x00,0xFE,0x20,0x20,0xFC,0x24,0x24,0x24,0x24,0x3C,0x04,0xFC,0x04,0xFC,0x04,0x00, 
 161          /*问*/0x10,0x0B,0x08,0x20,0x20,0x27,0x24,0x24,0x24,0x27,0x20,0x20,0x20,0x20,0x20,0x20, 
 162                0x00,0xFC,0x04,0x04,0x04,0xE4,0x24,0x24,0x24,0xE4,0x04,0x04,0x04,0x04,0x14,0x08, 
 163          /*何*/0x08,0x0C,0x1B,0x10,0x30,0x27,0x64,0xA4,0x24,0x27,0x24,0x20,0x20,0x20,0x20,0x00, 
 164                0x00,0x00,0xFE,0x08,0x08,0xC8,0x48,0x48,0x48,0xC8,0x48,0x08,0x08,0x28,0x10,0x00, 
 165          /*所*/0x0E,0x70,0x40,0x40,0x7C,0x44,0x44,0x44,0x7C,0x40,0x41,0x41,0x42,0x42,0x84,0x08, 
 166                0x1E,0xE0,0x80,0x80,0x80,0xFE,0x88,0x88,0x88,0x88,0x08,0x08,0x08,0x08,0x08,0x08, 
 167          /*之*/0x02,0x01,0x00,0x7F,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x18,0x28,0xE7,0x40,0x00, 
 168                0x00,0x00,0x88,0xFC,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x00,0x00,0xFE,0x00, 
 169          /*言*/0x02,0x01,0x7F,0x00,0x00,0x1F,0x00,0x1F,0x00,0x00,0x1F,0x10,0x10,0x10,0x1F,0x10, 
 170                0x00,0x00,0xFE,0x00,0x00,0xF0,0x00,0xF0,0x00,0x00,0xF0,0x10,0x10,0x10,0xF0,0x10, 
 171          /*不*/0x00,0x7F,0x01,0x01,0x01,0x01,0x03,0x05,0x09,0x11,0x21,0x41,0x01,0x01,0x01,0x00, 
 172                0x04,0xFE,0x80,0x00,0x00,0x00,0x60,0x30,0x18,0x0C,0x08,0x00,0x00,0x00,0x00,0x00, 
 173          /*得*/0x13,0x1A,0x23,0x4A,0x8B,0x10,0x13,0x30,0x50,0x97,0x10,0x11,0x11,0x11,0x10,0x10, 
 174                0xF8,0x08,0xF8,0x08,0xF8,0x00,0xFE,0x10,0x10,0xFE,0x10,0x10,0x10,0x10,0x50,0x20, 
 175          /*意*/0x01,0x3F,0x08,0x04,0xFF,0x00,0x1F,0x12,0x11,0x1F,0x00,0x29,0x28,0x68,0x07,0x00, 
 176                0x00,0xFC,0x20,0x40,0xFE,0x00,0xF0,0x10,0x10,0xF0,0x00,0x08,0x84,0x14,0xF0,0x00, 
 177          /*归*/0x08,0x08,0x0B,0x48,0x48,0x48,0x48,0x49,0x48,0x48,0x48,0x08,0x10,0x13,0x20,0x40, 
 178                0x00,0x00,0xFC,0x04,0x04,0x04,0x04,0xFC,0x04,0x04,0x04,0x04,0x04,0xFC,0x00,0x00, 
 179          /*卧*/0x00,0x7F,0x48,0x48,0x48,0x7F,0x41,0x41,0x7F,0x48,0x48,0x48,0x48,0x7F,0x00,0x00, 
C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 4   

 180                0x40,0x40,0x40,0x40,0x40,0x60,0x50,0x4C,0x46,0x42,0x40,0x40,0x40,0x40,0x40,0x00, 
 181          /*南*/0x01,0x01,0xFF,0x01,0x02,0x3F,0x24,0x22,0x2F,0x21,0x3F,0x21,0x21,0x21,0x21,0x00, 
 182                0x00,0x04,0xFE,0x00,0x00,0xFC,0x24,0x44,0xF4,0x04,0xFC,0x04,0x04,0x14,0x08,0x00, 
 183          /*山*/0x01,0x01,0x01,0x01,0x01,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x7F,0x20,0x00, 
 184                0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xFC,0x04,0x00, 
 185          /*陲*/0x78,0x4B,0x50,0x57,0x61,0x51,0x49,0x4F,0x49,0x69,0x51,0x47,0x40,0x40,0x43,0x40, 
 186                0x3C,0xC0,0x40,0xFE,0x50,0x50,0x50,0xFE,0x50,0x50,0x50,0xFE,0x40,0x40,0xFC,0x00, 
 187          /*但*/0x10,0x1B,0x12,0x22,0x22,0x73,0xA2,0x22,0x22,0x23,0x22,0x22,0x20,0x2F,0x20,0x00, 
 188                0x00,0xF8,0x08,0x08,0x08,0xF8,0x08,0x08,0x08,0xF8,0x08,0x00,0x00,0xFE,0x00,0x00, 
 189          /*去*/0x01,0x01,0x01,0x3F,0x01,0x01,0x01,0x01,0x7F,0x02,0x06,0x08,0x10,0x3F,0x10,0x00, 
 190                0x00,0x00,0x00,0xFC,0x00,0x00,0x00,0x00,0xFE,0x00,0x00,0x20,0x10,0xF8,0x10,0x00, 
 191          /*莫*/0x04,0x04,0x7F,0x04,0x1F,0x10,0x1F,0x10,0x1F,0x01,0xFF,0x02,0x04,0x08,0x10,0x60, 
 192                0x20,0x20,0xFE,0x20,0xF0,0x10,0xF0,0x10,0xF0,0x00,0xFE,0x80,0x40,0x20,0x1C,0x08, 
 193          /*复*/0x08,0x0F,0x10,0x2F,0x48,0x0F,0x08,0x0F,0x04,0x07,0x0C,0x12,0x21,0x06,0x18,0x60, 
 194                0x00,0xFC,0x00,0xF8,0x08,0xF8,0x08,0xF8,0x00,0xF8,0x10,0x60,0x80,0x60,0x1E,0x04, 
 195          /*闻*/0x10,0x0B,0x40,0x40,0x5F,0x44,0x47,0x44,0x47,0x44,0x44,0x5F,0x40,0x40,0x40,0x40, 
 196                0x00,0xFC,0x04,0x04,0xF4,0x44,0xC4,0x44,0xC4,0x44,0xF4,0x44,0x44,0x44,0x54,0x08, 
 197          /*白*/0x02,0x02,0x04,0x3F,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x3F,0x20,0x00, 
 198                0x00,0x00,0x00,0xF8,0x08,0x08,0x08,0x08,0xF8,0x08,0x08,0x08,0x08,0xF8,0x08,0x00, 
 199          /*云*/0x00,0x00,0x3F,0x00,0x00,0x00,0xFF,0x03,0x07,0x06,0x0C,0x18,0x31,0x7F,0x20,0x00, 
 200                0x00,0x30,0xF8,0x00,0x00,0x0C,0xFE,0x00,0x00,0x40,0x20,0x10,0xF8,0x0C,0x08,0x00, 
 201          /*无*/0x00,0x3F,0x01,0x01,0x01,0x01,0x7F,0x01,0x02,0x02,0x04,0x08,0x10,0x20,0xC0,0x00, 
 202                0x00,0xFC,0x00,0x00,0x00,0x00,0xFE,0x80,0x80,0x80,0x80,0x80,0x82,0x82,0x7E,0x00, 
 203          /*尽*/0x00,0x1F,0x10,0x10,0x1F,0x10,0x10,0x10,0x26,0x21,0x40,0x84,0x03,0x01,0x00,0x00, 
 204                0x00,0xF8,0x08,0x08,0xF8,0x80,0x80,0x40,0x20,0x98,0x8E,0x04,0x00,0x80,0x80,0x00, 
 205          /*时*/0x00,0x00,0x7C,0x44,0x47,0x44,0x7C,0x45,0x44,0x44,0x7C,0x00,0x00,0x00,0x00,0x00, 
 206                0x10,0x10,0x10,0x10,0xFE,0x10,0x10,0x10,0x90,0x90,0x10,0x10,0x10,0x10,0x50,0x20, 
 207           
 208           
 209           
 210           
 211           
 212          }; 
 213           
 214           
 215           
 216          /*************************************************/ 
 217          //Write Data 
 218          /*************************************************/ 
 219          void wdata(unsigned char com)             //PR14 
 220          { 
 221   1        CE_0;//片选 
 222   1          d_i=0;//数据 
 223   1        r_d=1; 
 224   1        w_r=0;//写数据 
 225   1        nop(); 
 226   1        P2=com;//送出数据 
 227   1        nop(); 
 228   1          w_r=1;  
 229   1      } 
 230          /*************************************************/ 
 231          //写命令 
 232          /*************************************************/ 
 233          void wcom(unsigned char dat)            //wdata 
 234          { 
 235   1         CE_0; 
 236   1         d_i=1;//命令 
 237   1         r_d=1; 
 238   1         w_r=0;//写 
 239   1         nop(); 
 240   1         P2=dat; 
 241   1         nop(); 
C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 5   

 242   1         w_r=1;  
 243   1         } 
 244           
 245           
 246          /*************************************************/ 
 247          //查状态 0和1 位 
 248          /*************************************************/ 
 249          void check_sta01(void) 
 250          {  
 251   1          unsigned char temp; 
 252   1        w_r=1; 
 253   1        d_i=1; 
 254   1        CE_0; 
 255   1          while(1) 
 256   1          { 
 257   2           P2=0XFF; 
 258   2           r_d=0; 
 259   2           nop(); 
 260   2           temp=P2; 
 261   2           nop(); 
 262   2                    r_d=1; 
 263   2           if((temp&0x03)==0x03)//STA0 AND STA1 
 264   2           return; 
 265   2          } 
 266   1      } 
 267          /*************************************************/ 
 268          // check_sta3            
 269          /*************************************************/ 
 270          void check_sta3(void) 
 271          { 
 272   1          unsigned char temp; 
 273   1                w_r=1; 
 274   1        d_i=1;//命令 
 275   1          CE_0;          
 276   1        while(1) 
 277   1        {  
 278   2          P2=0XFF; 
 279   2          r_d=0; 
 280   2          temp=P2; 
 281   2          nop(); 
 282   2          r_d=1;   
 283   2          if((temp&0x08)==0x08) 
 284   2          return; 
 285   2        } 
 286   1      } 
 287           
 288          /*************************************************/ 
 289          //双字节命令                     
 290          /*************************************************/ 
 291          void double_byte_parameter(unsigned char coma,unsigned char comb,unsigned char data_b) 
 292          { 
 293   1        check_sta01(); 
 294   1        wdata(coma); 
 295   1        check_sta01(); 
 296   1        wdata(comb); 
 297   1        check_sta01(); 
 298   1        wcom(data_b); 
 299   1      } 
 300           
 301          /*************************************************/ 
 302          //无参数命令 
 303          /*************************************************/ 
C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 6   

 304          void no_parameter(unsigned char com) 
 305          { 
 306   1        check_sta01(); 
 307   1        wcom(com); 
 308   1      } 
 309           /*************************************************/ 
 310          //清屏或全显 
 311          //state=0,TEXT区，vlaue＝0，清屏，value＝0xff，全显 
 312          /*************************************************/ 
 313          void all_display(unsigned char state,unsigned char vlue) 
 314          { 
 315   1          unsigned int i; 
 316   1        if(state==0) 
 317   1         { 
 318   2         double_byte_parameter(text_startaddr_l,text_startaddr_h,0x24); 
 319   2         no_parameter(0xb0); 
 320   2         for(i=textsize;i>0;i--) 
 321   2         { 
 322   3           check_sta3(); 
 323   3           wdata(vlue); 
 324   3         } 
 325   2         check_sta3(); 
 326   2         wcom(0xb2); 
 327   2       } 
 328   1       else 
 329   1       { 
 330   2         double_byte_parameter(graphic_startaddr_l,graphic_startaddr_h,0x24); 
 331   2         no_parameter(0xb0); 
 332   2         for(i=graphicsize;i>0;i--) 
 333   2         { 
 334   3           check_sta3(); 
 335   3           wdata(vlue); 
 336   3         } 
 337   2         check_sta3(); 
 338   2             wcom(0xb2); 
 339   2        } 
 340   1        
 341   1      } 
 342          /*************************************************/ 
 343          //TEXT模式下，写8X8 字符 
 344          //hang:1-size_hang/8 
 345          //lie:1-size_lie/8 
 346          /*************************************************/ 
 347          void display_ascii(unsigned char *addr,unsigned char hang,unsigned char lie) 
 348          {   
 349   1          unsigned int temp;// 
 350   1          unsigned char low; 
 351   1          unsigned char high; 
 352   1        temp=(size_lie/8)*(hang-1)+(lie-1); 
 353   1        //TEXT模式下，TEXT区域被分为 size_hang/8行、size_lie/8列个8X8 点阵 
 354   1        //行地址为0－（size_hang/8-1),列地址 0  －  （size_lie/8－1） 
 355   1         //注意，本程序的hang  和 lie 都是从1  开始的 
 356   1       low=temp&0x00ff; 
 357   1       high=(temp>>8)&0x00ff; 
 358   1       double_byte_parameter(low,high,0x24); 
 359   1       no_parameter(0xb0);// 
 360   1        check_sta3();         
 361   1       wdata(*addr);//addr：CGRAM OR CGROM中字符的地址 
 362   1         check_sta3(); 
 363   1        wcom(0xb2);// 
 364   1      } 
 365           
C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 7   

 366          /*************************************************/ 
 367          //显示一副图片 
 368          //graphic 模式下，共size_hang行，size_lie/8列 
 369          /*************************************************/ 
 370          void display_map(unsigned char *p) 
 371          {  
 372   1          unsigned char m,n; 
 373   1        double_byte_parameter(graphic_startaddr_l,graphic_startaddr_h,0x24); 
 374   1        no_parameter(0xb0); 
 375   1        for(m=size_hang;m>0;m--)//共size_hang行 
 376   1        { 
 377   2         for(n=(size_lie/8);n>0;n--)//size_lie/8列 
 378   2         { 
 379   3          check_sta3(); 
 380   3          wdata(*p++); 
 381   3         } 
 382   2        } 
 383   1          check_sta3(); 
 384   1        wcom(0xb2); 
 385   1      } 
 386           
 387           
 388          void display8hotext(void)//TEXT模式下写调用 CGROM 中字符 
 389          { 
 390   1          unsigned int hang;// 
 391   1          unsigned int lie;// 
 392   1        for(hang=1;hang<=((size_hang*3/8)/8);hang++)//3/8屏字符8 
 393   1        { 
 394   2         for(lie=1;lie<=(size_lie/8);lie++) 
 395   2            display_ascii(  &h8O,hang,  lie ); 
 396   2        } 
 397   1        for(hang=(((size_hang*3/8)/8)+1);hang<=(((size_hang*3/8)/8)+2);hang++)//2/8屏H 
 398   1        { 
 399   2         for(lie=1;lie<=(size_lie/8);lie++) 
 400   2            display_ascii(  &h8O+1,hang,  lie ); 
 401   2        } 
 402   1        for(hang=(((size_hang*3/8)/8)+3);hang<=(((size_hang*3/8)/8)+5);hang++)//3/8屏 O 
 403   1        { 
 404   2         for(lie=1;lie<=(size_lie/8);lie++) 
 405   2            display_ascii(  &h8O+2,hang,  lie ); 
 406   2              }
 407   1      }
 408          
 409          void displayHZ_at_xyaddr(unsigned char addr,unsigned char hang,unsigned char lie) 
 410          { 
 411   1        unsigned int temp; 
 412   1        unsigned char low; 
 413   1        unsigned char high; 
 414   1       temp=(size_lie/8)*2*(hang-1)+2*(lie-1); 
 415   1       //TEXT模式下，TEXT区域被分为 size_hang/8行、size_lie/8列个8X8 点阵 
 416   1       //行地址为0－（size_hang/8-1),列地址 0  －  （size_lie/8－1） 
 417   1       //注意，本程序的hang  和 lie 都是从 1  开始的，并且是 16X16的 
 418   1       low=temp&0x00ff; 
 419   1       high=(temp>>8)&0x00ff; 
 420   1       double_byte_parameter(low,high,0x24); 
 421   1       no_parameter(0xb0); 
 422   1       check_sta3(); 
 423   1       wdata(addr);//左上 
 424   1       check_sta3(); 
 425   1       wdata(addr+2);//右上     
 426   1       check_sta3(); 
 427   1       wcom(0xb2); 
C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 8   

 428   1      
 429   1       temp=(size_lie/8)*2*(hang-1)+(size_lie/8)+2*(lie-1);// 下半部分比上半部分的地址多(size_lie/8) 
 430   1       low=temp&0x00ff; 
 431   1       high=(temp>>8)&0x00ff; 
 432   1         
 433   1       double_byte_parameter(low,high,0x24); 
 434   1       no_parameter(0xb0); 
 435   1        check_sta3();         
 436   1       wdata(addr+1); 
 437   1        check_sta3();        
 438   1        wdata(addr+3);                
 439   1       check_sta3(); 
 440   1       wcom(0xb2); 
 441   1      } 
 442           /*************************************************/ 
 443          void displayHZ() 
 444          {  
 445   1        unsigned char j; 
 446   1         
 447   1         for(j=1;j<=6;j++) 
 448   1         { 
 449   2          displayHZ_at_xyaddr(0X80+tableindex[j-1+24]*4,2,j); 
 450   2          displayHZ_at_xyaddr(0X80+tableindex[j-1+24+6]*4,3,j); 
 451   2         } 
 452   1       
 453   1       
 454   1      } 
 455          //graphic 格式下显示8HO字符 
 456          void display_8HO(unsigned char *q)//显示字符，三种字符的数量按照 3:2:3的比例显示， 
 457          { 
 458   1          unsigned int count_byte,count_row,count_page,page; 
 459   1        for(count_row=7;count_row>3;count_row--)//共七种字符形式 
 460   1        { 
 461   2          double_byte_parameter(graphic_startaddr_l,graphic_startaddr_h,0x24);// 从GRAPHIC 的首地址开始写 
 462   2          no_parameter(0xb0);//自动写 
 463   2          for(page=1;page<=((size_hang*3/8)/8);page++)// 3/8屏 
 464   2          { 
 465   3          s=q; 
 466   3          for(count_byte=8;count_byte>0;count_byte--)//共 8 行，组成一个 8 X 8 字符 
 467   3                  { 
 468   4          for(count_page=(size_lie/8);count_page>0;count_page--)//写一行，共(size_lie/8)列 
 469   4          { 
 470   5          check_sta3(); 
 471   5          wdata(*s); 
 472   5          } 
 473   4          s++; 
 474   4          } 
 475   3          } 
 476   2       
 477   2          for(page=1;page<=((size_hang*2/8)/8);page++)// 2/8 
 478   2          { 
 479   3            s=q; 
 480   3            s=s+8; 
 481   3            for(count_byte=8;count_byte>0;count_byte--)//每页 8 行，8 X 8 点阵 
 482   3            { 
 483   4             for(count_page=(size_lie/8);count_page>0;count_page--)//30X8列 
 484   4                   { 
 485   5              check_sta3(); 
 486   5              wdata(*s); 
 487   5             } 
 488   4             s++; 
 489   4                       } 
C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 9   

 490   3          } 
 491   2                       
 492   2          for(page=1;page<=((size_hang*3/8)/8);page++)// 3/8 
 493   2          { 
 494   3            s=q; 
 495   3            s=s+16; 
 496   3            for(count_byte=8;count_byte>0;count_byte--)//每页 8 行，8 X 8 点阵 
 497   3            { 
 498   4              for(count_page=(size_lie/8);count_page>0;count_page--)//30X8列 
 499   4              { 
 500   5               check_sta3(); 
 501   5               wdata(*s); 
 502   5              } 
 503   4              s++; 
 504   4            } 
 505   3              }             
 506   2          check_sta3(); 
 507   2          wcom(0xb2);//退出自动写 
 508   2          } 
 509   1      } 
 510               
 511          void CGRAM(void) 
 512          { 
 513   1       unsigned int m=0; 
 514   1        double_byte_parameter(0x07,0x00,0x22);  //设定最高的 1K为 CGRAM 
 515   1        double_byte_parameter(0x00,0x3c,0x24);  // 
 516   1        no_parameter(0xb0); 
 517   1        for(m=0;m<992;m++)  
 518   1           { 
 519   2             check_sta3(); 
 520   2             wdata(CGTAB[m]); 
 521   2           } 
 522   1       check_sta3(); 
 523   1       wcom(0xb2); 
 524   1      } 
 525           
 526          void delay1s(void) 
 527          { 
 528   1        unsigned int i; 
 529   1        unsigned int j; 
 530   1       for(i=0;i<1000;i++) 
 531   1        { 
 532   2            for(j=0;j<100;j++) 
 533   2                      {j=j;} 
 534   2        } 
 535   1      } 
 536            
 537          /*************************************************/ 
 538          void main(void) 
 539          { 
 540   1       //   rst=0; 
 541   1          nop(); 
 542   1          nop(); 
 543   1          nop();         
 544   1      //    rst=1;  
 545   1        textsize=graphicsize=size_lie/8*size_hang;// 
 546   1        textsize_l=textsize;// 
 547   1        textsize_h=textsize>>8;// 
 548   1          
 549   1        graphicsize_h=graphicsize>>8; 
 550   1        graphicsize_l=graphicsize; 
 551   1              
C51 COMPILER V8.02   SECOND                                                                04/15/2009 10:21:52 PAGE 10  

 552   1        text_startaddr=0x0000; 
 553   1        text_startaddr_h=text_startaddr>>8;// 
 554   1        text_startaddr_l=text_startaddr; 
 555   1          
 556   1        graphic_startaddr=text_startaddr+textsize;// 
 557   1        graphic_startaddr_h=graphic_startaddr>>8;// 
 558   1        graphic_startaddr_l=graphic_startaddr; 
 559   1       
 560   1          double_byte_parameter(text_startaddr_l,text_startaddr_h,0x40);//TEXT  
 561   1          double_byte_parameter((size_lie/8),0x00,0x41); 
 562   1          double_byte_parameter(graphic_startaddr_l,graphic_startaddr_h,0x42); 
 563   1          double_byte_parameter((size_lie/8),0x00,0x43); 
 564   1       
 565   1       
 566   1          no_parameter(0x80);//TEXT OR GRAPHIC  
 567   1          no_parameter(0xa3);// 
 568   1          CGRAM(); 
 569   1       
 570   1        while(1) 
 571   1           {         
 572   2        all_display(1,0x00); 
 573   2        no_parameter(0x98);//TEXT OFF ,GRAPHIC ON 
 574   2          display_map(&sch); 
 575   2        delay1s(); 
 576   2        display_8HO(&graphich8o); 
 577   2        delay1s(); 
 578   2            no_parameter(0x94);  //TEXT ON,GRAPHIC OFF 
 579   2        all_display(0,0x00); 
 580   2        displayHZ(); 
 581   2        delay1s(); 
 582   2        all_display(0,0x00); 
 583   2        display8hotext(); 
 584   2        delay1s(); 
 585   2          
 586   2           } 
 587   1      } 
 588           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1813    ----
   CONSTANT SIZE    =   2987    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
