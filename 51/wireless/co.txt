#include <reg51.h>
//-----------------------------------------------------------------
void UART_init();                //串口初始化函数
void COM_send(unsigned char );             //串口发送函数
unsigned char str[]=" <please input r  OR l!> " ;
char j;
unsigned char RECEIVR_buffer,RTX;
//-------------------------------------------------------------------
void main(void)
{
int i;
UART_init();
j=0;        //初始化串口

   COM_send(1);        //首先发送一次数据作为测试用

  while(1)
  {
     
 receive: if(RECEIVR_buffer=='l')

            {P1=0x0f;  COM_send('l') ; }
          else if(RECEIVR_buffer=='r')
           {P1=0xf0;  COM_send('r') ; }
           else
            { for(i=0;str[i]!='\0';i++)
		         COM_send(str[i]);
                while(RECEIVR_buffer!='l'&&RECEIVR_buffer!='r')
                 ;                 //等待正确输入
				goto receive;      //继续等待接收?
             }
  }

}


//-------------------------------------------------------------
//--------------------------------------------------------------------------------------------------
// 函数名称： UART_init()串口初始化函数
// 函数功能： 在系统时钟为11.059MHZ时，设定串口波特率为9600bit/s
//             串口接收中断允许，发送中断禁止
//--------------------------------------------------------------------------------------------------
void UART_init()
{
                         //初始化串行口和波特率发生器
SCON =0x50;              //选择串口工作方式1，打开接收允许 sm0=0,sm1=1,sm2=0,ren=1,tb8,rb8,ti,ri
TMOD =0x20;              //定时器1工作在方式2，定时器0工作在方式1
TH1 =(0xff-5);           //实现波特率9600（系统时钟11.0592MHZ）8位计数器自动重装
PCON = 0x80;             //SMOD=1;
TR1 =1;                  //启动定时器T1
ET1 =0;
ES=1;                    //允许串行口中断
PS=1;                    //设计串行口中断优先级
EA =1;                   //单片机中断允许
}
//------------------------------------------------------------
void COM_send(unsigned char var)
{
                                            
    SBUF= var;
    while(!TI)   //等待发送完毕,发送完毕后置一
	;
    TI=0;        //复位发送中断标志   
    RECEIVR_buffer=0;

}
//--------------------------------------------------------------
//--------------------------------------------------------------------------------------------------
// 函数名称： com_interrup()串口接收中断处理函数
// 函数功能： 接收包括起始位'S'在内的十位数据到数据缓冲区
//--------------------------------------------------------------------------------------------------
void com_interrupt(void) interrupt 4 using 3
{
   
   if(RI)                                   //处理接收中断
   {  
      RECEIVR_buffer=RTX;
      RI=0;                                 //清除中断标志位
      RTX=SBUF;                  //接收串口数据
      
    }

}