C51 COMPILER V8.02   HONGWAI                                                               04/02/2011 21:57:14 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE HONGWAI
OBJECT MODULE PLACED IN hongwai.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE hongwai.c DEBUG OBJECTEXTEND

line level    source

   1                  //本解码程序适用于NEC的upd6121及其兼容芯片的解码，支持大多数遥控器 实验板采用30MHZ晶振
   2          #include<reg52.h>       //包含单片机寄存器的头文件
   3          #include<intrins.h>  //包含_nop_()函数定义的头文件
   4          #include<hongwai.h>
   5          #include<1602.h>
   6          #include<1302.h>
   7          unsigned char keyflag=0;
   8          unsigned char a[4];    //储存用户码、用户反码与键数据码、键数据反码
   9          unsigned int LowTime,HighTime; //储存高、低电平的宽度 
  10          /*****************************************************
  11          函数功能：延时1ms
  12          ***************************************************/
  13          void Hw_delay1ms()
  14          {
  15   1         unsigned char i,j;   
  16   1               for(i=0;i<25;i++)
  17   1                for(j=0;j<33;j++)
  18   1                 ;             
  19   1       }
  20           /*****************************************************
  21          函数功能：延时若干毫秒
  22          入口参数：n
  23          ***************************************************/
  24           void Hw_delay(unsigned char n)
  25           {
  26   1         unsigned char i;
  27   1              for(i=0;i<n;i++)
  28   1                 Hw_delay1ms();
  29   1       }
  30          
  31          
  32          
  33          /*********************************************************/
  34          void Hw_beep()          //蜂鸣器响一声函数
  35          {
  36   1        unsigned char i;
  37   1        for (i=0;i<100;i++)
  38   1         {
  39   2         Hw_delay1ms();
  40   2         BEEP=!BEEP;       //BEEP取反
  41   2         } 
  42   1         BEEP=1;           //关闭蜂鸣器
  43   1         Hw_delay(250);       //延时     
  44   1      }
  45          
  46          /************************************************************
  47          函数功能：对4个字节的用户码和键数据码进行解码
  48          说明：解码正确，返回1，否则返回0
  49          出口参数：dat
  50          *************************************************************/
  51          bit Hw_DeCode(void)        
  52          {
  53   1          
  54   1         unsigned char  i,j;
  55   1              unsigned char temp;    //储存解码出的数据
C51 COMPILER V8.02   HONGWAI                                                               04/02/2011 21:57:14 PAGE 2   

  56   1              for(i=0;i<4;i++)      //连续读取4个用户码和键数据码
  57   1                {
  58   2                       for(j=0;j<8;j++)  //每个码有8位数字
  59   2                               {
  60   3                       temp=temp>>1;  //temp中的各数据位右移一位，因为先读出的是高位数据                                                                      
  61   3                                 TH0=0;         //定时器清0
  62   3                                 TL0=0;         //定时器清0
  63   3                                 TR0=1;         //开启定时器T0
  64   3                            while(IR==0)   //如果是低电平就等待
  65   3                             ;              //低电平计时
  66   3                                 TR0=0;         //关闭定时器T0
  67   3                                 LowTime=TH0*256+TL0;    //保存低电平宽度
  68   3                                 TH0=0;         //定时器清0
  69   3                                 TL0=0;         //定时器清0
  70   3                                 TR0=1;         //开启定时器T0
  71   3                                 while(IR==1)   //如果是高电平就等待
  72   3                                     ;                           
  73   3                                 TR0=0;        //关闭定时器T0
  74   3                                 HighTime=TH0*256+TL0;   //保存高电平宽度
  75   3                                 if((LowTime<1100)||(LowTime>1700))  //对于不同的遥控不同的晶振修改此处即可
  76   3                                                  return 0;        //如果低电平长度不在合理范围，则认为出错，停止解码                 
  77   3                                 if((HighTime>1100)&&(HighTime<1700))   //如果高电平时间在560微秒左右，即计数560／1.085＝516次
  78   3                                         temp=temp&0x7f;       //(520-100=420, 520+100=620)，则该位是0
  79   3                                 if((HighTime>3700)&&(HighTime<4700)) //如果高电平时间在1680微秒左右，即计数1680／1.085＝1548次
  80   3                                         temp=temp|0x80;       //(1550-250=1300,1550+250=1800),则该位是1
  81   3                           }                                      
  82   2                 a[i]=temp;   //将解码出的字节值储存在a[i]                                                                                                                                                                     
  83   2          }                                            
  84   1        if(a[2]=~a[3])  //验证键数据码和其反码是否相等,一般情况下不必验证用户码
  85   1               return 1;     //解码正确，返回1
  86   1      }
  87          
  88          /*------------------二进制码转换为压缩型BCD码,并显示---------------*/
  89          
  90          void Hw_two_2_bcd(unsigned char date)
  91          {
  92   1      
  93   1         unsigned char temp;
  94   1         temp=date;
  95   1         date&=0xf0;
  96   1         date>>=4;                    //右移四位得到高四位码
  97   1         date&=0x0f;                  //与0x0f想与确保高四位为0
  98   1         if(date<=0x09)
  99   1         {                 
 100   2           Lcd_WriteData(0x30+date);            //lcd显示键值高四位
 101   2               Hw_delay(5);
 102   2         }
 103   1         else
 104   1         {
 105   2           date=date-0x09;
 106   2               Lcd_WriteData(0x40+date);
 107   2               Hw_delay(5);
 108   2         }
 109   1         date=temp;
 110   1         date&=0x0f;
 111   1         if(date<=0x09)
 112   1         {
 113   2           Lcd_WriteData(0x30+date);            //lcd显示低四位值
 114   2               Hw_delay(10);
 115   2         }
 116   1         else
 117   1         {
C51 COMPILER V8.02   HONGWAI                                                               04/02/2011 21:57:14 PAGE 3   

 118   2           date=date-0x09;
 119   2               Lcd_WriteData(0x40+date);
 120   2               Hw_delay(5);
 121   2         }
 122   1         Lcd_WriteData(0x48);                 //显示字符'H'
 123   1         Hw_delay(5);
 124   1      } 
 125          /************************************************************
 126          函数功能：1602LCD显示
 127          *************************************************************/
 128          void Hw_Disp(void)
 129          {  
 130   1          Lcd_WriteAddress(0x40);  // 设置显示位置为第一行的第1个字
 131   1            Hw_two_2_bcd(a[0]);
 132   1                Lcd_WriteData(0x20);
 133   1                Hw_delay(5);
 134   1                Hw_two_2_bcd(a[1]);
 135   1                Lcd_WriteData(0x20);
 136   1                Hw_delay(10);
 137   1                Hw_two_2_bcd(a[2]);
 138   1                Lcd_WriteData(0x20);
 139   1                Hw_delay(5);
 140   1                Hw_two_2_bcd(a[3]);
 141   1      }
 142          /************************************************************
 143          函数功能：红外初始化
 144          ************************************************************/
 145          void Hw_Int()
 146          {       
 147   1                 EA=1;        //开启总中断
 148   1             EX0=1;       //开外中断0
 149   1             ET0=1;       //定时器T0中断允许
 150   1             IT0=1;       //外中断的下降沿触发  
 151   1             TMOD=0x01;   //使用定时器T0的模式1       
 152   1                 TR0=0;       //定时器T0关闭
 153   1      }
 154          /************************************************************
 155          函数功能：红外线触发的外中断处理函数
 156          *************************************************************/
 157          void Int0(void) interrupt 0
 158            {       
 159   1           EX0=0;      //关闭外中断0，不再接收二次红外信号的中断，只解码当前红外信号
 160   1                TH0=0;      //定时器T0的高8位清0
 161   1                TL0=0;      //定时器T0的低8位清0
 162   1                TR0=1;            //开启定时器T0       
 163   1                while(!IR&&(TH0&0x80)==0);          //如果是低电平就等待，给引导码低电平计时    注：如果超时则退出，防止
             -出不了中断，导致主函数无法执行
 164   1                TR0=0;                //关闭定时器T0     
 165   1                LowTime=TH0*256+TL0;  //保存低电平时间
 166   1                TH0=0;      //定时器T0的高8位清0
 167   1                TL0=0;      //定时器T0的低8位清0
 168   1                TR0=1;            //开启定时器T0
 169   1                while(IR&&(TH0&0x40)==0);  //如果是高电平就等待，给引导码高电平计时
 170   1                TR0=0;        //关闭定时器T0
 171   1                HighTime=TH0*256+TL0; //保存引导码的高电平长度
 172   1           if((LowTime>21000)&&(LowTime<24000)&&(HighTime>9750)&&(HighTime<12750))
 173   1                       {
 174   2                          //如果是引导码,就开始解码,否则放弃,引导码的低电平计时
 175   2                     //次数＝9000us/1.085=8294, 判断区间:8300－500＝7800，8300＋500＝8800.
 176   2                    if(Hw_DeCode()==1) // 执行遥控解码功能
 177   2                       {
 178   3                         if(a[2]==wl1)
C51 COMPILER V8.02   HONGWAI                                                               04/02/2011 21:57:14 PAGE 4   

 179   3                       {
 180   4                       Lcd_WriteCom(0x01);
 181   4               Lcd_delay(3); 
 182   4                       keyflag+=1;
 183   4                       if(keyflag==3)
 184   4                       keyflag=0;
 185   4                       }      
 186   3                       // Hw_Disp();//调用1602LCD显示函数
 187   3                        Hw_beep();//蜂鸣器响一声 提示解码成功
 188   3                       }
 189   2                       }
 190   1                EX0=1;   //开启外中断EX0
 191   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    589    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
