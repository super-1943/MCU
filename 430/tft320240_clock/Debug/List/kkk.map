################################################################################
#                                                                              #
#      IAR Universal Linker V4.61I/W32                                         #
#                                                                              #
#           Link time     =  13/Jun/2010  14:41:16                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  E:\AllProject\430\tft320240\Debug\List\kkk.map    #
#           Output file 1 =  E:\AllProject\430\tft320240\Debug\Exe\kkk.d43     #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  E:\AllProject\430\tft320240\Debug\Obj\clock.r43   #
#                            E:\AllProject\430\tft320240\Debug\Obj\main.r43    #
#                            E:\AllProject\430\tft320240\Debug\Obj\tft320240.r #
#                            43                                                #
#                            E:\AllProject\430\tft320240\Debug\Obj\ziku.r43    #
#                            -o                                                #
#                            E:\AllProject\430\tft320240\Debug\Exe\kkk.d43     #
#                            -l                                                #
#                            E:\AllProject\430\tft320240\Debug\List\kkk.map    #
#                            -xmsnio                                           #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 5.3 Evaluation\430\LIB\"                        #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.3 Evaluation\430\CONFIG\lnk430F149.xcl"         #
#                            (-cmsp430                                         #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,DATA16_HEAP+_D #
#                            ATA16_HEAP_SIZE=0200-09FF                         #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CODE)INFO=1000-10FF -Z(CODE)INFOA=1080-10FF    #
#                            -Z(CODE)INFOB=1000-107F                           #
#                            -Z(CONST)DATA16_C,DATA16_ID,DIFUNCT=1100-FFDF     #
#                            -Z(CODE)CSTART,ISR_CODE=1100-FFDF                 #
#                            -P(CODE)CODE=1100-FFDF -Z(CODE)INTVEC=FFE0-FFFF   #
#                            -Z(CODE)RESET=FFFE-FFFF) -f                       #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.3 Evaluation\430\config\multiplier.xcl"         #
#                            (-e?Mul8Hw=?Mul8 -e?Mul16Hw=?Mul16                #
#                            -e?Mul16to32uHw=?Mul16to32u                       #
#                            -e?Mul16to32sHw=?Mul16to32s -e?Mul32Hw=?Mul32     #
#                            -e_Mul64iHw=_Mul64i                               #
#                            -e_Mul32u32uto64iHw=_Mul32u32uto64i               #
#                            -e?Mul32fHw=_Mul32f -e_Mul64fHwPtr=_Mul64fPtr)    #
#                            -D_STACK_SIZE=50 -rt                              #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.3 Evaluation\430\LIB\DLIB\dl430fn.r43"          #
#                            -e_PrintfLarge=_Printf -e_ScanfLarge=_Scanf       #
#                            -D_DATA16_HEAP_SIZE=50 -s __program_start         #
#                            -D_DATA20_HEAP_SIZE=50                            #
#                                                                              #
#                        Copyright 1987-2008 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           18CA  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __core                 = 430
  __dlib_file_descriptor = 0
  __double_size          = 32
  __pic                  = no
  __reg_r4               = free
  __reg_r5               = free
  __rt_version           = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       0050 
           _STACK_SIZE             0050 
    *************************************************************************

  FILE NAME : E:\AllProject\430\tft320240\Debug\Obj\clock.r43
  PROGRAM MODULE, NAME : clock

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 206E - 21A7 (0x13a bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           drawclock               206E            main (main)
               calls direct
               CSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 256A - 25A1 (0x38 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           move_second             256A            timera (main)
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 25A2 - 25D9 (0x38 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           move_minute             25A2            timera (main)
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 24D6 - 2529 (0x54 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           move_hour               24D6            timera (main)
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : E:\AllProject\430\tft320240\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0002 - 0002 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IFG1                    0002 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 2.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0160 - 0161 (0x2 bytes), align: 0
  Segment part 3.             Intra module refs:   init_timera
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACTL                   0160 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0162 - 0163 (0x2 bytes), align: 0
  Segment part 4.             Intra module refs:   init_timera
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCTL0                 0162 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0172 - 0173 (0x2 bytes), align: 0
  Segment part 5.             Intra module refs:   init_timera
                                                   timera
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCR0                  0172 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0057 - 0057 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL1                 0057 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0204 - 0206 (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   timera
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           last_time               0204 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 0200 - 0202 (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   timera
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           this_time               0200 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay                   
               not allocated function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 265A - 2675 (0x1c bytes), align: 1
  Segment part 14.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_timera             265A 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 2240 - 22D1 (0x92 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    2240            Segment part 11 (?cstart)
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 1EE2 - 206D (0x18c bytes), align: 1
  Segment part 13.            Intra module refs:   timera::??INTVEC 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timera                  1EE2 
               interrupt function
               calls direct
               CSTACK = 00000000 ( 0000001A )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFED (0xe bytes), align: 1
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timera::??INTVEC 12     FFEC 
    -------------------------------------------------------------------------
CSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 18C6 - 18C8 (0x3 bytes), align: 0
  Segment part 12.            Intra module refs:   this_time
    -------------------------------------------------------------------------
CODE
  Segment part 17. TENTATIVE. Used definition from clock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 18. TENTATIVE. Used definition from clock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 1178 - 1185 (0xe bytes), align: 0
  Segment part 9.             Intra module refs:   main

    *************************************************************************

  FILE NAME : E:\AllProject\430\tft320240\Debug\Obj\tft320240.r43
  PROGRAM MODULE, NAME : tft320240

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0029 - 0029 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   SPFD5408A_CPT24_Initial
                                                   W_COM
                                                   W_DATA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2OUT                   0029 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002A - 002A (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   SPFD5408A_CPT24_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   002A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0019 - 0019 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   SPFD5408A_CPT24_Initial
                                                   W_COM
                                                   W_DATA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3OUT                   0019 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001A - 001A (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   SPFD5408A_CPT24_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3DIR                   001A 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 1100 - 1177 (0x78 bytes), align: 1
  Segment part 6.             Intra module refs:   line_deg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SINTABLE                1100            drawclock (clock)
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           green_dark_heng         
               calls direct
               not allocated function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 1D06 - 1EE1 (0x1dc bytes), align: 1
  Segment part 10.            Intra module refs:   line_deg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           drawline                1D06 
               calls direct
               CSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           juxing                  
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           show_pic                
               calls direct
               not allocated function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 26A8 - 26BB (0x14 bytes), align: 1
  Segment part 17.            Intra module refs:   SPFD5408A_CPT24_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay                   26A8 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 2634 - 2659 (0x26 bytes), align: 1
  Segment part 8.             Intra module refs:   BlockWrite
                                                   SPFD5408A_CPT24_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           W_COM                   2634 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 260E - 2633 (0x26 bytes), align: 1
  Segment part 7.             Intra module refs:   BlockWrite
                                                   SPFD5408A_CPT24_Initial
                                                   Show
                                                   ShowCharWithColor
                                                   ShowHanzi
                                                   circle
                                                   drawline
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           W_DATA                  260E 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 234C - 23B5 (0x6a bytes), align: 1
  Segment part 9.             Intra module refs:   Show
                                                   ShowCharWithColor
                                                   ShowHanzi
                                                   circle
                                                   drawline
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BlockWrite              234C 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 2692 - 26A7 (0x16 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clear                   2692            drawclock (clock)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Full                    
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Red                     
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Green                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Blue                    
               calls direct
               not allocated function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 252A - 2569 (0x40 bytes), align: 1
  Segment part 15.            Intra module refs:   Clear
                                                   ShowString
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Show                    252A 
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 18F2 - 1D05 (0x414 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPFD5408A_CPT24_Initial
                                   18F2            main (main)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 23B6 - 241B (0x66 bytes), align: 1
  Segment part 14.            Intra module refs:   ShowString
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ShowCharWithColor       23B6            drawclock (clock)
                                                   main (main)
                                                   timera (main)
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 247E - 24D5 (0x58 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ShowString              247E            main (main)
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 241C - 247D (0x62 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ShowHanzi               241C            main (main)
               calls direct
               CSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 21A8 - 223F (0x98 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           circle                  21A8            drawclock (clock)
               calls direct
               CSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 22D2 - 234B (0x7a bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           line_deg                22D2            drawclock (clock)
                                                   move_hour (clock)
                                                   move_minute (clock)
                                                   move_second (clock)
               calls direct
               CSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 27. TENTATIVE. Used definition from clock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 28. TENTATIVE. Used definition from clock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : E:\AllProject\430\tft320240\Debug\Obj\ziku.r43
  PROGRAM MODULE, NAME : ziku

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: 1186 - 1785 (0x600 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii_font              1186            ShowCharWithColor (tft320240)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: 1786 - 18C5 (0x140 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hanzi                   1786            ShowHanzi (tft320240)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 4. TENTATIVE. Used definition from clock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 5. TENTATIVE. Used definition from clock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 5.3 Evaluation\430\LIB\DLIB\dl430fn.r43
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 2724 - 2725 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            2724            __exit (?__exit)
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dwrite

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __dwrite                
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 26BC - 26CF (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  26BC            Segment part 5 (?_exit)
                                                   _exit (?_exit)
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__write

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __write                 
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 2718, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   2718            exit (?exit)
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_dtors     
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_closeall       
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 2718 - 271B (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cppinit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors            
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __alloc_record_needed_destruction
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
DATA16_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __record_needed_destruction
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_dtors            
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_vec_cctor      
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 5 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
HEAP
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Relative segment, address: 09B0, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0204, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 0200, align: 1
  Segment part 3.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: 18C6, align: 1
  Segment part 4.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 18CA - 18CD (0x4 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         18CA            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           18CA 
    -------------------------------------------------------------------------
CSTART
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_low_level_init
                                   
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 18CE - 18D9 (0xc bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       18CE            last_time (main)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 18DA - 18E9 (0x10 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       18DA            this_time (main)
    -------------------------------------------------------------------------
DIFUNCT
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_ctors      
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: 18EA - 18F1 (0x8 bytes), align: 1
  Segment part 11.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       18EA 
           ?cstart_end             18F2 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : lowinit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Epilogue

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 26E2 - 26F3 (0x12 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Epilogue3              26EC            ShowCharWithColor (tft320240)
                                                   ShowHanzi (tft320240)
                                                   ShowString (tft320240)
           ?Epilogue4              26EA            Show (tft320240)
                                                   drawclock (clock)
           ?Epilogue5              26E8            line_deg (tft320240)
           ?Epilogue6              26E6 
           ?Epilogue7              26E4            circle (tft320240)
           ?Epilogue8              26E2            drawline (tft320240)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 2720 - 2723 (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    2720            Segment part 11 (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?malloc

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 2676 - 2691 (0x1c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8u               2676            drawclock (clock)
                                                   move_hour (clock)
                                                   timera (main)
           ?DivMod16u              267A            Segment part 0 (?DivMod816s)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 25DA - 260D (0x34 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8s               25DA 
           ?DivMod16s              25DE            drawclock (clock)
                                                   drawline (tft320240)
                                                   line_deg (tft320240)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 26D0 - 26E1 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  26D0            __data16_memcpy (?memzero)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memmove

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memmove                 
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 26F4 - 2705 (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        26F4            ?cstart_init_zero (?cstart)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 271C - 271F (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         271C            ?cstart_init_copy (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memmove        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?setjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setjmp                  
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r5              
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r4              
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_end             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?longjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           longjmp                 
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r5             
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r4             
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_end            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: 2706 - 2717 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  2706            ShowString (tft320240)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xcloseall

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Close_all              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_GetMemChunk    
               not allocated function
    -------------------------------------------------------------------------
DATA16_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_HEAP
  Segment part 4. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_free           
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_Aldata         
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           __data16_findmem        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_malloc         
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA      CONST
------               ----      ----      -----
                    (Rel)  (Rel)  (Abs)  (Rel)
?DivMod816s            52
?DivMod816u            28
?Epilogue              18
?__dbg_break            2
?__exit                20
?_exit                  4
?cstart                40
?exit                   4
?memcpy                18
?memzero               22
?reset_vector           2
?strlen                18
clock                 510
main                  570      6     10     17
  + common             14
tft320240           2 370             4    120
ziku                                     1 856
N/A (command line)            80
----------          -----     --     --  -----
Total:              3 678     86     14  1 993
  + common             14


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000000
  04        W_DATA
            | Stack used (prev) :  00000000
            | + function block  :  00000002
  04        W_DATA
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_DATA
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_DATA
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_DATA
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_DATA
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_COM
            | Stack used (prev) :  00000000
            | + function block  :  00000002
  04        W_COM
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_COM
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_COM
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_COM
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_COM
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  04        W_COM
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  03      BlockWrite
          | Stack used (prev) :  00000002
          | + function block  :  00000006
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  02    ShowCharWithColor
        | Stack used (prev) :  00000008
        | + function block  :  00000008
  05          BlockWrite
              | Stack used (prev) :  00000002
              | + function block  :  00000006
              |  Already listed
  05          BlockWrite
              | Stack used (prev) :  00000002
              | + function block  :  00000006
              |  Already listed
  05          BlockWrite
              | Stack used (prev) :  00000002
              | + function block  :  00000006
              |  Already listed
  05          BlockWrite
              | Stack used (prev) :  00000002
              | + function block  :  00000006
              |  Already listed
  05          BlockWrite
              | Stack used (prev) :  00000002
              | + function block  :  00000006
              |  Already listed
  05          BlockWrite
              | Stack used (prev) :  00000002
              | + function block  :  00000006
              |  Already listed
  05          BlockWrite
              | Stack used (prev) :  00000002
              | + function block  :  00000006
              |  Already listed
  05          BlockWrite
              | Stack used (prev) :  00000002
              | + function block  :  00000006
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  00000000
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  00000000
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  00000000
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  00000000
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  00000000
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  00000000
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  00000000
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  00000000
              | + function block  :  00000002
              |  Already listed
  04        drawline
            | Stack used (prev) :  00000008
            | + function block  :  00000014
  03      line_deg
          | Stack used (prev) :  0000001C
          | + function block  :  0000000E
  02    move_hour
        | Stack used (prev) :  0000002A
        | + function block  :  00000008
  03      line_deg
          | Stack used (prev) :  0000001C
          | + function block  :  0000000E
          |  Already listed
  02    move_minute
        | Stack used (prev) :  0000002A
        | + function block  :  00000006
  03      line_deg
          | Stack used (prev) :  0000001C
          | + function block  :  0000000E
          |  Already listed
  02    move_second
        | Stack used (prev) :  0000002A
        | + function block  :  00000006
  01  timera
      | Stack used (prev) :  00000032
      | + function block  :  0000000E
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000040


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000040
  03      BlockWrite
          | Stack used (prev) :  00000002
          | + function block  :  00000006
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  02    ShowHanzi
        | Stack used (prev) :  00000040
        | + function block  :  00000008
  03      strlen
          | Stack used (prev) :  00000040
          | + function block  :  00000002
  03      ShowCharWithColor
          | Stack used (prev) :  00000008
          | + function block  :  00000008
          |  Already listed
  04        BlockWrite
            | Stack used (prev) :  00000002
            | + function block  :  00000006
            |  Already listed
  04        W_DATA
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  03      Show
          | Stack used (prev) :  00000040
          | + function block  :  0000000A
  02    ShowString
        | Stack used (prev) :  0000004A
        | + function block  :  0000000A
  02    ShowCharWithColor
        | Stack used (prev) :  00000008
        | + function block  :  00000008
        |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  00000040
          | + function block  :  00000002
          |  Already listed
  02    SPFD5408A_CPT24_Initial
        | Stack used (prev) :  00000042
        | + function block  :  00000002
  02    init_timera
        | Stack used (prev) :  00000040
        | + function block  :  00000002
  03      line_deg
          | Stack used (prev) :  0000001C
          | + function block  :  0000000E
          |  Already listed
  04        BlockWrite
            | Stack used (prev) :  00000002
            | + function block  :  00000006
            |  Already listed
  04        W_DATA
            | Stack used (prev) :  00000000
            | + function block  :  00000002
            |  Already listed
  03      circle
          | Stack used (prev) :  00000040
          | + function block  :  00000012
  03      ShowCharWithColor
          | Stack used (prev) :  00000008
          | + function block  :  00000008
          |  Already listed
  04        Show
            | Stack used (prev) :  00000040
            | + function block  :  0000000A
            |  Already listed
  03      Clear
          | Stack used (prev) :  0000004A
          | + function block  :  00000004
  02    drawclock
        | Stack used (prev) :  00000052
        | + function block  :  0000000A
  01  main
      | Stack used (prev) :  0000005C
      | + function block  :  00000006
  <-Sub-tree of type: Function tree
    | Stack used          :  00000062


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000062
  01  exit
      | Stack used (prev) :  00000062
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000064


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000064
  01  __data16_memzero
      | Stack used (prev) :  00000064
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000066


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000066
  02    memcpy
        | Stack used (prev) :  00000066
        | + function block  :  00000002
  01  __data16_memcpy
      | Stack used (prev) :  00000068
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000006A




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0002 - 0002               1   rel    0
                                       0019 - 001A               2 
                                       0029 - 002A               2 
                                       0057 - 0057               1 
                                       0120 - 0121               2 
                                       0160 - 0163               4 
                                       0172 - 0173               2 
DATA16_I                               0200 - 0202               3   rel    1
DATA16_Z                               0204 - 0206               3   rel    1
CSTACK                                 09B0 - 09FF              50   rel    1
DATA16_C                               1100 - 18C5             7C6   rel    1
DATA16_ID                              18C6 - 18C8               3   rel    1
CSTART                                 18CA - 18F1              28   rel    1
<CODE> 1                               18F2 - 2725             E34   rel    1
INTVEC                                 FFE0 - FFED               E   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 3 692 bytes of CODE  memory
    86 bytes of DATA  memory (+ 14 absolute )
 1 993 bytes of CONST memory

Errors: none
Warnings: none

