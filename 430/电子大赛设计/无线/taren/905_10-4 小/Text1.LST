C51 COMPILER V7.06   TEXT1                                                                 10/05/2008 11:01:09 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE TEXT1
OBJECT MODULE PLACED IN Text1.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE Text1.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          #include <at89x51.h>
   3          #include <intrins.h>
   4          
   5          #define uchar unsigned char 
   6          #define uint  unsigned int
   7          
   8          #define WC              0x00                    // Write configuration register command
   9          #define RC              0x10                    // Read  configuration register command
  10          #define WTP             0x20                    // Write TX Payload  command
  11          #define RTP             0x21                    // Read  TX Payload  command
  12          #define WTA             0x22                    // Write TX Address  command
  13          #define RTA             0x23                    // Read  TX Address  command
  14          #define RRP             0x24                    // Read  RX Payload  command
  15          /*******************************************************************************************/
  16          typedef struct RFConfig
  17          {
  18                  uchar n;
  19                  uchar buf[10];
  20          }RFConfig;
  21          
  22          code RFConfig RxTxConf =
  23          {
  24                  10,
  25                  0x01, 0x0c, 0x44, 0x20, 0x20, 0xcc, 0xcc, 0xcc,0xcc, 0x58       
  26          };
  27          
  28          /*******************************************************************************************/
  29          uchar data TxBuf[32];
  30          uchar data RxBuf[32];
  31          uchar tf1,tf2,tf3,tf4;                   //标志位
  32          /*******************************************************************************************/
  33          uchar bdata DATA_BUF;                    //???????????????????????????????
  34          sbit    flag    =DATA_BUF^7;
  35          sbit    flag1   =DATA_BUF^0;
  36          /*******************************************************************************************/
  37          sbit    TX_EN   =P2^0;               //发射使能，高有效
  38          sbit    TRX_CE  =P2^6;               //TRX_CE发送接收使能  高有效
  39          sbit    PWR_UP  =P2^1;               //上电     
  40          sbit    MISO    =P3^6;               //spi输出
  41          sbit    MOSI    =P2^4;               //spi输入
  42          sbit    SCK             =P3^7;               //spi时钟
  43          sbit    CSN             =P2^5;               //spi片选
  44          
  45          sbit    AM              =P3^5;               //AM 地址匹配，受到有效地址被置高
  46          sbit    DR              =P2^3;               //数据准备就绪
  47          sbit    CD              =P2^2;               //载波检测，检测到频率相同的载波时，置高
  48          
  49          sbit    LED1    =P1^0; 
  50          sbit    LED2    =P1^1;
  51          sbit    KEY1    =P1^4;
  52          sbit    KEY2    =P1^5;
  53          sbit    KEY3    =P1^6;
  54          sbit    KEY4    =P1^7;
  55          
C51 COMPILER V7.06   TEXT1                                                                 10/05/2008 11:01:09 PAGE 2   

  56          
  57          /*******************************************************************************************/
  58          
  59          
  60          void Config905(void);                   // Config nRF905 module配置NRF905模式
  61          void SetTxMode(void);                   // Set nRF905 in Tx mode
  62          void SetRxMode(void);                   // Set nRF905 in Rx mode
  63          void TxPacket(void);                    // Send data by nRF905
  64          void RxPacket(void);                    // Recive data by nRF905
  65          void SpiWrite(uchar);                   // Write data to nRF905
  66          uchar SpiRead(void);                    // Read data to nRF905
  67          void Delay(uchar n);                    // Delay 100us
  68          
  69          /*******************************************************************************************/
  70          void Delay(uchar n)
  71          {
  72   1              uint i;
  73   1              while(n--)
  74   1              for(i=0;i<80;i++);      
  75   1      }
  76          
  77          void main()
  78          {
  79   1      
  80   1      
  81   1      //================
  82   1              Config905();                              // Config nRF905 module
  83   1              LED2 = CD;
  84   1              TxBuf[0] = 1;                 //unchar
  85   1              TxBuf[1] = 1;
  86   1          TxBuf[2] = 1;
  87   1          TxBuf[3] = 1;
  88   1              SetTxMode();                              // Set Tx Mode
  89   1              TxPacket();                                   // Transmit Tx buffer data  发送
  90   1              LED1 = 0;
  91   1              
  92   1      
  93   1              Delay(500);                               // delay for led light        
  94   1              LED1 = 1;
  95   1              LED2 = 1;
  96   1              TxBuf[0] = 0xff;
  97   1              TxBuf[1] = 0xff;
  98   1          TxBuf[2] = 0xff;
  99   1          TxBuf[3] = 0xff;
 100   1      
 101   1                                                          // led close
 102   1              SetRxMode();                            // Set nRF905 in Rx mode
 103   1          //================NRF905初始化
 104   1              CSN=1;                                          // Spi  disable                                         
 105   1              SCK=0;                                          // Spi clock line init high
 106   1              DR=1;                                           // Init DR for input
 107   1              AM=1;                                           // Init AM for input
 108   1              PWR_UP=1;                                       // nRF905 power on
 109   1              TRX_CE=0;                                       // Set nRF905 in standby mode
 110   1              TX_EN=0;                                        // set radio in Rx mode 
 111   1      
 112   1               while(1)
 113   1      {         
 114   2                    
 115   2                          //  Config905();                            // Config nRF905 module
 116   2                 LED2=CD;
 117   2                         if(KEY1 ==0 ) {      LED1 = 0; TxBuf[0] = 1 ;tf1 = 1 ; }
C51 COMPILER V7.06   TEXT1                                                                 10/05/2008 11:01:09 PAGE 3   

 118   2                         if(KEY2 ==0 ) {      LED1 = 0; TxBuf[1] = 1 ;tf2 = 1 ; }
 119   2                         if(KEY3 ==0 ) {      LED1 = 0; TxBuf[2] = 1 ;tf3 = 1 ; }
 120   2                         if(KEY4 ==0 ) {      LED1 = 0; TxBuf[3] = 1 ;tf4 = 1 ; }
 121   2      
 122   2      
 123   2                 if (tf1==1)
 124   2                   {  
 125   3                      
 126   3                                                      //===============NRF905发送相应的按键     
 127   3                          SetTxMode();                                // Set Tx Mode
 128   3                          TxPacket();                         // Transmit Tx buffer data
 129   3                              TxBuf[0] = 0xff;
 130   3                              //TxBuf[1] = 0xff;
 131   3                              SetRxMode();                            // Set nRF905 in Rx mode
 132   3                              tf1=0;
 133   3                              Delay(500);
 134   3                              LED1 = 1;
 135   3                      
 136   3                        }
 137   2      
 138   2                        if (tf2==1)
 139   2                   {  
 140   3                      
 141   3                                                      //===============NRF905发送相应的按键     
 142   3                          SetTxMode();                                // Set Tx Mode
 143   3                          TxPacket();                         // Transmit Tx buffer data
 144   3                              TxBuf[1] = 0xff;
 145   3                              //TxBuf[1] = 0xff;
 146   3                              SetRxMode();                            // Set nRF905 in Rx mode
 147   3                              tf2=0;
 148   3                              Delay(500);
 149   3                              LED1 = 1;
 150   3                      
 151   3                        }
 152   2      
 153   2                        if (tf3==1)
 154   2                   {  
 155   3                      
 156   3                                                      //===============NRF905发送相应的按键     
 157   3                          SetTxMode();                                // Set Tx Mode
 158   3                          TxPacket();                         // Transmit Tx buffer data
 159   3                              TxBuf[2] = 0xff;
 160   3                              //TxBuf[1] = 0xff;
 161   3                              SetRxMode();                            // Set nRF905 in Rx mode
 162   3                              tf3=0;
 163   3                              Delay(500);
 164   3                              LED1 = 1;
 165   3                      
 166   3                        }
 167   2      
 168   2                        if (tf4==1)
 169   2                   {  
 170   3                      
 171   3                                                      //===============NRF905发送相应的按键     
 172   3                          SetTxMode();                                // Set Tx Mode
 173   3                          TxPacket();                         // Transmit Tx buffer data
 174   3                              TxBuf[3] = 0xff;
 175   3                              //TxBuf[1] = 0xff;
 176   3                              SetRxMode();                            // Set nRF905 in Rx mode
 177   3                              tf4=0;
 178   3                              Delay(500);
 179   3                              LED1 = 1;
C51 COMPILER V7.06   TEXT1                                                                 10/05/2008 11:01:09 PAGE 4   

 180   3                      
 181   3                        }
 182   2      
 183   2      
 184   2                                 //=====================等待NRF905接收
 185   2                 if (DR)                         // If recive data ready... 
 186   2                 RxPacket();             // ... recive data
 187   2      
 188   2                
 189   2                
 190   2      
 191   2      }
 192   1      
 193   1      }
 194          /*******************************************************************************************/
 195          /*******************************************************************************************/
 196          //function Config905();
 197          /*******************************************************************************************/
 198          void Config905(void)
 199          {
 200   1              uchar i;                                        
 201   1              CSN=0;                                          // Spi enable for write a spi command
 202   1              SpiWrite(WC);                           // Write config command写放配置命令
 203   1              for (i=0;i<RxTxConf.n;i++)      // Write configration words  写放配置字
 204   1              {
 205   2                      SpiWrite(RxTxConf.buf[i]);
 206   2              }
 207   1              CSN=1;                                          // Disable Spi
 208   1      }
 209          /*******************************************************************************************/
 210          //function SpiWrite();
 211          /*******************************************************************************************/
 212          void SpiWrite(uchar  byte)
 213          {
 214   1              uchar i;        
 215   1              DATA_BUF=byte;                          // Put function's parameter into a bdata variable               
 216   1              for (i=0;i<8;i++)                       // Setup byte circulation bits
 217   1              {       
 218   2                      
 219   2                      if (flag)                               // Put DATA_BUF.7 on data line
 220   2                              MOSI=1;
 221   2                      else
 222   2                              MOSI=0;
 223   2                      SCK=1;                                  // Set clock line high
 224   2                      DATA_BUF=DATA_BUF<<1;   // Shift DATA_BUF
 225   2                      SCK=0;                                  // Set clock line low 
 226   2              }       
 227   1      }
 228          /*******************************************************************************************/
 229          //function SpiRead();
 230          /*******************************************************************************************/
 231          uchar SpiRead(void)
 232          {
 233   1              uchar i;        
 234   1              for (i=0;i<8;i++)                       // Setup byte circulation bits
 235   1              {       
 236   2                      DATA_BUF=DATA_BUF<<1;   // Right shift DATA_BUF
 237   2                      SCK=1;                                  // Set clock line high
 238   2                      if (MISO)
 239   2                              flag1=1;                        // Read data
 240   2                      else
 241   2                              flag1=0;
C51 COMPILER V7.06   TEXT1                                                                 10/05/2008 11:01:09 PAGE 5   

 242   2                                                              
 243   2                      
 244   2                      SCK=0;                                  // Set clock line low
 245   2              }
 246   1              return DATA_BUF;                        // Return function parameter
 247   1      }
 248          /*******************************************************************************************/
 249          //function TxPacket();
 250          /*******************************************************************************************/
 251          void TxPacket(void)
 252          {
 253   1              uchar i;
 254   1                                          //Config905();                              
 255   1              CSN=0;                                          // Spi enable for write a spi command   
 256   1              SpiWrite(WTP);                          // Write payload command
 257   1              for (i=0;i<32;i++)
 258   1              {
 259   2                      SpiWrite(TxBuf[i]);             // Write 32 bytes Tx data
 260   2              }
 261   1              CSN=1;                                          // Spi disable                                          
 262   1              Delay(1);
 263   1              CSN=0;                                          // Spi enable for write a spi command   
 264   1              SpiWrite(WTA);                          // Write address command
 265   1              for (i=0;i<4;i++)                       // Write 4 bytes address
 266   1              {
 267   2                      SpiWrite(RxTxConf.buf[i+5]);
 268   2              }       
 269   1              CSN=1;                                          // Spi disable
 270   1              TRX_CE=1;                                       // Set TRX_CE high,start Tx data transmission激励发送
 271   1              Delay(1);                                       // while (DR!=1);
 272   1              TRX_CE=0;                                       // Set TRX_CE low
 273   1      }
 274          /*******************************************************************************************/
 275          //function RxPacket();
 276          /*******************************************************************************************/
 277          void RxPacket(void)
 278          {
 279   1              uchar i;        
 280   1              TRX_CE=0;                                       // Set nRF905 in standby mode   
 281   1              CSN=0;                                          // Spi enable for write a spi command
 282   1              SpiWrite(RRP);                          // Read payload command 
 283   1              for (i=0;i<32;i++)
 284   1              {
 285   2                      RxBuf[i]=SpiRead();              // Read data and save to buffer                
 286   2              }
 287   1              CSN=1;                                           // Disable spi
 288   1              while(DR||AM)                //等待
 289   1            ; 
 290   1                                       //     P0=     RxBuf[0];                               // Buffer[0] output from P0 port...
 291   1              TRX_CE=1;
 292   1                                          //xx=(RxBuf[0]>>4)&0x0f;
 293   1                                          //TxData(xx);
 294   1                                          //=====================
 295   1                 if(RxBuf[0] == 1||RxBuf[1] == 1||RxBuf[2] == 1||RxBuf[3] == 1) LED1 = 0 ;
 296   1                 
 297   1                
 298   1              Delay(500);                                     // ...light led
 299   1                                      //      P0=0xff;                                        // Close led
 300   1            LED1 = 1 ;
 301   1                                                                      
 302   1      }
 303          /*******************************************************************************************/
C51 COMPILER V7.06   TEXT1                                                                 10/05/2008 11:01:09 PAGE 6   

 304          //function SetTxMode();
 305          /*******************************************************************************************/
 306          void SetTxMode(void)                             //发送模式初始化
 307          {       
 308   1              TX_EN=1;
 309   1              TRX_CE=0;
 310   1              Delay(1);                                       // delay for mode change(>=650us)
 311   1      }                               
 312          /*******************************************************************************************/
 313          //function SetRxMode();
 314          /*******************************************************************************************/
 315          void SetRxMode(void)
 316          {
 317   1              TX_EN=0;
 318   1              TRX_CE=1;
 319   1              Delay(1);                                       // delay for mode change(>=650us)                               
 320   1      }
 321          
 322          void initial_TM()   //时钟初始化
 323          {
 324   1       
 325   1        TF0=0;  //清除始时钟标志位
 326   1        TR0=0;  //关闭时钟
 327   1        TMOD=0x01;  //时钟0，工作方式1；
 328   1        TH0=(65536-50000)/256;
 329   1        TL0=(65526-50000)%256;   //50ms
 330   1        TR0=1;
 331   1      } 
 332          
 333          void T0_inter() interrupt 1
 334          {
 335   1              LED2=~CD;         //载波检测
 336   1               initial_TM();
 337   1              
 338   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    529    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     69       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
