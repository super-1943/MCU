################################################################################
#                                                                              #
#      IAR Universal Linker V4.61I/W32                                         #
#                                                                              #
#           Link time     =  19/Jun/2010  15:22:54                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  E:\AllProject\430\Image320240\Debug\List\kkk.map  #
#           Output file 1 =  E:\AllProject\430\Image320240\Debug\Exe\kkk.d43   #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  E:\AllProject\430\Image320240\Debug\Obj\image.r43 #
#                            E:\AllProject\430\Image320240\Debug\Obj\main.r43  #
#                            E:\AllProject\430\Image320240\Debug\Obj\tft320240 #
#                            .r43                                              #
#                            E:\AllProject\430\Image320240\Debug\Obj\ziku.r43  #
#                            -o                                                #
#                            E:\AllProject\430\Image320240\Debug\Exe\kkk.d43   #
#                            -l                                                #
#                            E:\AllProject\430\Image320240\Debug\List\kkk.map  #
#                            -xmsnio                                           #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 5.3 Evaluation\430\LIB\"                        #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.3 Evaluation\430\CONFIG\lnk430F149.xcl"         #
#                            (-cmsp430                                         #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,DATA16_HEAP+_D #
#                            ATA16_HEAP_SIZE=0200-09FF                         #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CODE)INFO=1000-10FF -Z(CODE)INFOA=1080-10FF    #
#                            -Z(CODE)INFOB=1000-107F                           #
#                            -Z(CONST)DATA16_C,DATA16_ID,DIFUNCT=1100-FFDF     #
#                            -Z(CODE)CSTART,ISR_CODE=1100-FFDF                 #
#                            -P(CODE)CODE=1100-FFDF -Z(CODE)INTVEC=FFE0-FFFF   #
#                            -Z(CODE)RESET=FFFE-FFFF) -f                       #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.3 Evaluation\430\config\multiplier.xcl"         #
#                            (-e?Mul8Hw=?Mul8 -e?Mul16Hw=?Mul16                #
#                            -e?Mul16to32uHw=?Mul16to32u                       #
#                            -e?Mul16to32sHw=?Mul16to32s -e?Mul32Hw=?Mul32     #
#                            -e_Mul64iHw=_Mul64i                               #
#                            -e_Mul32u32uto64iHw=_Mul32u32uto64i               #
#                            -e?Mul32fHw=_Mul32f -e_Mul64fHwPtr=_Mul64fPtr)    #
#                            -D_STACK_SIZE=50 -rt                              #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            5.3 Evaluation\430\LIB\DLIB\dl430fn.r43"          #
#                            -e_PrintfLarge=_Printf -e_ScanfLarge=_Scanf       #
#                            -D_DATA16_HEAP_SIZE=50 -s __program_start         #
#                            -D_DATA20_HEAP_SIZE=50                            #
#                                                                              #
#                        Copyright 1987-2008 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           F200  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __core                 = 430
  __dlib_file_descriptor = 0
  __double_size          = 32
  __pic                  = no
  __reg_r4               = free
  __reg_r5               = free
  __rt_version           = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       0050 
           _STACK_SIZE             0050 
    *************************************************************************

  FILE NAME : E:\AllProject\430\Image320240\Debug\Obj\image.r43
  PROGRAM MODULE, NAME : image

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: 1100 - F1FF (0xe100 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gImage_image            1100            main (main)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : E:\AllProject\430\Image320240\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0002 - 0002 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IFG1                    0002 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 2.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
DATA16_AN
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACTL                   
    -------------------------------------------------------------------------
DATA16_AN
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCTL0                 
    -------------------------------------------------------------------------
DATA16_AN
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCR0                  
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0057 - 0057 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL1                 0057 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 01A0 - 01A1 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   adc12_int
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC12CTL0               01A0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0140 - 0141 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   adc12_int
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC12MEM0               0140 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0200 - 0203 (0x4 bytes), align: 1
  Segment part 11.            Intra module refs:   adc12_int
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           temper                  0200 
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_timera             
               not allocated function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC6E - FCAF (0x42 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    FC6E            Segment part 11 (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB7E - FC03 (0x86 bytes), align: 1
  Segment part 12.            Intra module refs:   adc12_int::??INTVEC 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adc12_int               FB7E 
               interrupt function
               calls direct
               CSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFEF (0x10 bytes), align: 1
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adc12_int::??INTVEC 14
                                   FFEE 
    -------------------------------------------------------------------------
CSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. TENTATIVE. Used definition from image
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 17. TENTATIVE. Used definition from image
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : E:\AllProject\430\Image320240\Debug\Obj\tft320240.r43
  PROGRAM MODULE, NAME : tft320240

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0029 - 0029 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   SPFD5408A_CPT24_Initial
                                                   W_COM
                                                   W_DATA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2OUT                   0029 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002A - 002A (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   SPFD5408A_CPT24_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   002A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0019 - 0019 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   SPFD5408A_CPT24_Initial
                                                   W_COM
                                                   W_DATA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3OUT                   0019 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 001A - 001A (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   SPFD5408A_CPT24_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3DIR                   001A 
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           green_dark_heng         
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           drawline                
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           juxing                  
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           show_pic                
               calls direct
               not allocated function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F9F0 - FAEB (0xfc bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           show_pic_ext            F9F0            main (main)
               calls direct
               CSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD6E - FD81 (0x14 bytes), align: 1
  Segment part 13.            Intra module refs:   SPFD5408A_CPT24_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay                   FD6E 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD16 - FD3B (0x26 bytes), align: 1
  Segment part 7.             Intra module refs:   BlockWrite
                                                   SPFD5408A_CPT24_Initial
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           W_COM                   FD16 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FCF0 - FD15 (0x26 bytes), align: 1
  Segment part 6.             Intra module refs:   BlockWrite
                                                   SPFD5408A_CPT24_Initial
                                                   Show
                                                   show_pic_ext
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           W_DATA                  FCF0 
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC04 - FC6D (0x6a bytes), align: 1
  Segment part 8.             Intra module refs:   Show
                                                   show_pic_ext
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BlockWrite              FC04 
               calls direct
               CSTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD58 - FD6D (0x16 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Clear                   FD58            main (main)
               calls direct
               CSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Full                    
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Red                     
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Green                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Blue                    
               calls direct
               not allocated function
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FCB0 - FCEF (0x40 bytes), align: 1
  Segment part 11.            Intra module refs:   Clear
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Show                    FCB0 
               calls direct
               CSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F218 - F62B (0x414 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPFD5408A_CPT24_Initial
                                   F218            main (main)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ShowCharWithColor       
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ShowString              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ShowHanzi               
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 25. TENTATIVE. Used definition from image
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 26. TENTATIVE. Used definition from image
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : E:\AllProject\430\Image320240\Debug\Obj\ziku.r43
  PROGRAM MODULE, NAME : ziku

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii_font              
    -------------------------------------------------------------------------
DATA16_C
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hanzi                   
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 4. TENTATIVE. Used definition from image
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 5. TENTATIVE. Used definition from image
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 5.3 Evaluation\430\LIB\DLIB\dl430fn.r43
  LIBRARY MODULE, NAME : ?Mul32fHw

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F78E - F8BF (0x132 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul32fHw               F78E            adc12_int (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FDC2 - FDC3 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            FDC2            __exit (?__exit)
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dwrite

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __dwrite                
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FD82 - FD95 (0x14 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  FD82            Segment part 5 (?_exit)
                                                   _exit (?_exit)
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__write

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __write                 
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FDBE, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   FDBE            exit (?exit)
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_dtors     
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_closeall       
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FDBE - FDC1 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cppinit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors            
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __alloc_record_needed_destruction
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
DATA16_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __record_needed_destruction
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_dtors            
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_vec_cctor      
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 5 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
HEAP
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Relative segment, address: 09B0, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0204, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F200 - F203 (0x4 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         F200            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           F200 
    -------------------------------------------------------------------------
CSTART
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_low_level_init
                                   
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F204 - F20F (0xc bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       F204            temper (main)
    -------------------------------------------------------------------------
CSTART
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       
    -------------------------------------------------------------------------
DIFUNCT
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_ctors      
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F210 - F217 (0x8 bytes), align: 1
  Segment part 11.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       F210 
           ?cstart_end             F218 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : lowinit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Epilogue

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FDA8 - FDB9 (0x12 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Epilogue3              FDB2 
           ?Epilogue4              FDB0            Show (tft320240)
           ?Epilogue5              FDAE 
           ?Epilogue6              FDAC            show_pic_ext (tft320240)
           ?Epilogue7              FDAA 
           ?Epilogue8              FDA8 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FDBA - FDBD (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    FDBA            Segment part 11 (?cstart)
               calls direct
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Cast32f32i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FAEC - FB7D (0x92 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32sto32f           FAEC 
           _Cast32uto32f           FB00            adc12_int (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Div32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F8C0 - F9EF (0x130 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div32f                 F8C0            adc12_int (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Add32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F62C - F78D (0x162 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Add32f                 F630            adc12_int (main)
           _Sub32f                 F62C 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?malloc

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FD3C - FD57 (0x1c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8u               FD3C 
           ?DivMod16u              FD40            show_pic_ext (tft320240)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8s               
           ?DivMod16s              

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memmove

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memmove                 
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FD96 - FDA7 (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        FD96            ?cstart_init_zero (?cstart)
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memmove        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?setjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setjmp                  
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r5              
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r4              
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_end             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?longjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           longjmp                 
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r5             
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r4             
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_end            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xcloseall

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Close_all              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_GetMemChunk    
               not allocated function
    -------------------------------------------------------------------------
DATA16_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_HEAP
  Segment part 4. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_free           
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_Aldata         
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           __data16_findmem        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_malloc         
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA       CONST
------               ----      ----       -----
                    (Rel)  (Rel)  (Abs)   (Rel)
?Cast32f32i           146
?DivMod816u            28
?Epilogue              18
?Mul32fHw             306
?__dbg_break            2
?__exit                20
?_exit                  4
?cstart                24
?exit                   4
?memzero               18
?reset_vector           2
_Add32f               354
_Div32f               304
image                                    57 600
main                  200      4      8
  + common             16
tft320240           1 584             4
N/A (command line)            80
----------          -----     --     --  ------
Total:              3 014     84     12  57 600
  + common             16


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000000
  01  adc12_int
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000000C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000000C
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      W_COM
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  03      Delay
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  02    SPFD5408A_CPT24_Initial
        | Stack used (prev) :  0000000E
        | + function block  :  00000002
  05          W_DATA
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_DATA
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_COM
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_COM
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_COM
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_COM
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_COM
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_COM
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  05          W_COM
              | Stack used (prev) :  0000000C
              | + function block  :  00000002
              |  Already listed
  04        BlockWrite
            | Stack used (prev) :  0000000E
            | + function block  :  00000006
  04        W_DATA
            | Stack used (prev) :  0000000C
            | + function block  :  00000002
            |  Already listed
  03      Show
          | Stack used (prev) :  00000014
          | + function block  :  0000000A
  02    Clear
        | Stack used (prev) :  0000001E
        | + function block  :  00000004
  03      BlockWrite
          | Stack used (prev) :  0000000E
          | + function block  :  00000006
          |  Already listed
  03      W_DATA
          | Stack used (prev) :  0000000C
          | + function block  :  00000002
          |  Already listed
  02    show_pic_ext
        | Stack used (prev) :  00000014
        | + function block  :  0000000E
  01  main
      | Stack used (prev) :  00000022
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000026


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000026
  01  exit
      | Stack used (prev) :  00000026
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000028


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000028
  01  __data16_memzero
      | Stack used (prev) :  00000028
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000002A




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0002 - 0002               1   rel    0
                                       0019 - 001A               2 
                                       0029 - 002A               2 
                                       0057 - 0057               1 
                                       0120 - 0121               2 
                                       0140 - 0141               2 
                                       01A0 - 01A1               2 
DATA16_I                                  0200                       dse    0
DATA16_Z                               0200 - 0203               4   rel    1
CSTACK                                 09B0 - 09FF              50   rel    1
DATA16_C                               1100 - F1FF            E100   rel    0
CSTART                                 F200 - F217              18   rel    1
<CODE> 1                               F218 - FDC3             BAC   rel    1
INTVEC                                 FFE0 - FFEF              10   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

  3 030 bytes of CODE  memory
     84 bytes of DATA  memory (+ 12 absolute )
 57 600 bytes of CONST memory

Errors: none
Warnings: none

