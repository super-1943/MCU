Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: C:\PROGRA~1\Sunplus\UNSPID~1.0\cc1.exe c:\temp\cc6daaaa.i -fkeep-inline-functions -quiet -dumpbase ziku12864.c -mglobal-var-iram -gstabs -Wall -o .\Debug/ziku12864.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "E:/program/sun/yejing/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         45 00 3A 00
         2F 00 70 00
         72 00 6F 00
         67 00 72 00
         61 00 6D 00
         2F 00 73 00
         75 00 6E 00
         2F 00 79 00
         65 00 6A 00
         69 00 6E 00
         67 00 2F 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008D55                    	.code
0000002F                    	.debug
0000002F 2E 00 73 00        		.dw '.stabs "E:/program/sun/yejing/ziku12864.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         45 00 3A 00
         2F 00 70 00
         72 00 6F 00
         67 00 72 00
         61 00 6D 00
         2F 00 73 00
         75 00 6E 00
         2F 00 79 00
         65 00 6A 00
         69 00 6E 00
         67 00 2F 00
         7A 00 69 00
         6B 00 75 00
         31 00 32 00
         38 00 36 00
         34 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008D55                    	.code
00008D55                    	.code
                            	Ltext0:
00000069                    	.debug
00000069 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
00000095                    	.debug
00000095 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
000000BB                    	.debug
000000BB 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D55                    	.CODE
000000F6                    	.debug
000000F6 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
00000126                    	.debug
00000126 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
00000160                    	.debug
00000160 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
000001A0                    	.debug
000001A0 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D55                    	.CODE
000001DF                    	.debug
000001DF 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
00000211                    	.debug
00000211 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
00000247                    	.debug
00000247 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
0000027D                    	.debug
0000027D 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D55                    	.CODE
000002B0                    	.debug
000002B0 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
000002D6                    	.debug
000002D6 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D55                    	.CODE
000002FD                    	.debug
000002FD 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
00000329                    	.debug
00000329 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D55                    	.CODE
0000036A                    	.debug
0000036A 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D55                    	.CODE
00000399                    	.debug
00000399 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
000003C9                    	.debug
000003C9 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D55                    	.CODE
000003FE                    	.debug
000003FE 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D55                    	.CODE
00008D55                    	.code
0000041E                    	.debug
0000041E 2E 00 73 00        		.dw '.stabs "init_12864:F19",36,0,0,',0,0,offset _init_12864,seg _init_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         69 00 74 00
         5F 00 31 00
         32 00 38 00
         36 00 34 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008D55                    	.CODE
                            	.public _init_12864
                            	_init_12864:	.proc
00000443                    	.debug
00000443 2E 00 73 00        		.dw '.stabn 0x44,0,8,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 2C 00
         00 00 00 00
00000455 00 00 00 00        		.dd LM1-_init_12864
00000457 0D 00 0A 00        		.dw 0x0d,0x0a
00008D55                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008D55 88 DA              		push bp to [sp]
00008D56 41 20              		sp-=1
00008D57 08 0B 01 00        		bp=sp+1
                            	
00008D59 0D 03 04 00        		R1=BP+4
00008D5B C5 D2              		[BP]=R1	// QImode move
00000459                    	.debug
00000459 2E 00 73 00        		.dw '.stabn 0x44,0,10,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         2C 00 00 00
         00 00      
0000046C 07 00 00 00        		.dd LM2-_init_12864
0000046E 0D 00 0A 00        		.dw 0x0d,0x0a
00008D5C                    	.code
                            	LM2:
00008D5C 11 93 02 70        		R1=[28674]	// QImode move
00008D5E 09 A5 38 00        		R2=R1|56
00008D60 1A D5 02 70        		[28674]=R2	// QImode move
00000470                    	.debug
00000470 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
00000483 0D 00 00 00        		.dd LM3-_init_12864
00000485 0D 00 0A 00        		.dw 0x0d,0x0a
00008D62                    	.code
                            	LM3:
00008D62 11 93 03 70        		R1=[28675]	// QImode move
00008D64 09 A5 38 00        		R2=R1|56
00008D66 1A D5 03 70        		[28675]=R2	// QImode move
00000487                    	.debug
00000487 2E 00 73 00        		.dw '.stabn 0x44,0,12,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         2C 00 00 00
         00 00      
0000049A 13 00 00 00        		.dd LM4-_init_12864
0000049C 0D 00 0A 00        		.dw 0x0d,0x0a
00008D68                    	.code
                            	LM4:
00008D68 11 93 00 70        		R1=[28672]	// QImode move
00008D6A 09 B5 C7 FF        		R2=R1&(-57)
00008D6C 1A D5 00 70        		[28672]=R2	// QImode move
0000049E                    	.debug
0000049E 2E 00 73 00        		.dw '.stabn 0x44,0,19,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         2C 00 00 00
         00 00      
000004B1 19 00 00 00        		.dd LM5-_init_12864
000004B3 0D 00 0A 00        		.dw 0x0d,0x0a
00008D6E                    	.code
                            	LM5:
00008D6E 09 93 64 00        		R1=100	// QImode move
00008D70 C8 D2              		[SP--]=R1	// QImode move
00008D71 40 F0 FF 8D        		call _delay_12864	// call without return value
00008D73 41 00              		SP = SP + 1	//SP
000004B5                    	.debug
000004B5 2E 00 73 00        		.dw '.stabn 0x44,0,20,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         2C 00 00 00
         00 00      
000004C8 1F 00 00 00        		.dd LM6-_init_12864
000004CA 0D 00 0A 00        		.dw 0x0d,0x0a
00008D74                    	.code
                            	LM6:
00008D74 70 92              		R1=48	// QImode move
00008D75 C8 D2              		[SP--]=R1	// QImode move
00008D76 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00008D78 41 00              		SP = SP + 1	//SP
000004CC                    	.debug
000004CC 2E 00 73 00        		.dw '.stabn 0x44,0,21,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         2C 00 00 00
         00 00      
000004DF 24 00 00 00        		.dd LM7-_init_12864
000004E1 0D 00 0A 00        		.dw 0x0d,0x0a
00008D79                    	.code
                            	LM7:
00008D79 43 92              		R1=3	// QImode move
00008D7A C8 D2              		[SP--]=R1	// QImode move
00008D7B 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00008D7D 41 00              		SP = SP + 1	//SP
000004E3                    	.debug
000004E3 2E 00 73 00        		.dw '.stabn 0x44,0,22,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         2C 00 00 00
         00 00      
000004F6 29 00 00 00        		.dd LM8-_init_12864
000004F8 0D 00 0A 00        		.dw 0x0d,0x0a
00008D7E                    	.code
                            	LM8:
00008D7E 4C 92              		R1=12	// QImode move
00008D7F C8 D2              		[SP--]=R1	// QImode move
00008D80 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00008D82 41 00              		SP = SP + 1	//SP
000004FA                    	.debug
000004FA 2E 00 73 00        		.dw '.stabn 0x44,0,23,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         2C 00 00 00
         00 00      
0000050D 2E 00 00 00        		.dd LM9-_init_12864
0000050F 0D 00 0A 00        		.dw 0x0d,0x0a
00008D83                    	.code
                            	LM9:
00008D83 41 92              		R1=1	// QImode move
00008D84 C8 D2              		[SP--]=R1	// QImode move
00008D85 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00008D87 41 00              		SP = SP + 1	//SP
00000511                    	.debug
00000511 2E 00 73 00        		.dw '.stabn 0x44,0,24,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         2C 00 00 00
         00 00      
00000524 33 00 00 00        		.dd LM10-_init_12864
00000526 0D 00 0A 00        		.dw 0x0d,0x0a
00008D88                    	.code
                            	LM10:
00008D88 46 92              		R1=6	// QImode move
00008D89 C8 D2              		[SP--]=R1	// QImode move
00008D8A 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00008D8C 41 00              		SP = SP + 1	//SP
00000528                    	.debug
00000528 2E 00 73 00        		.dw '.stabn 0x44,0,25,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         2C 00 00 00
         00 00      
0000053B 38 00 00 00        		.dd LM11-_init_12864
0000053D 0D 00 0A 00        		.dw 0x0d,0x0a
00008D8D                    	.code
                            	LM11:
00008D8D 09 93 64 00        		R1=100	// QImode move
00008D8F C8 D2              		[SP--]=R1	// QImode move
00008D90 40 F0 FF 8D        		call _delay_12864	// call without return value
00008D92 41 00              		SP = SP + 1	//SP
0000053F                    	.debug
0000053F 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
00000552 3E 00 00 00        		.dd LM12-_init_12864
00000554 0D 00 0A 00        		.dw 0x0d,0x0a
00008D93                    	.code
                            	LM12:
00000556                    	.debug
00000556 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
00000569 3E 00 00 00        		.dd LM13-_init_12864
0000056B 0D 00 0A 00        		.dw 0x0d,0x0a
00008D93                    	.code
                            	LM13:
                            	L2:
                            	
00008D93 41 00              		sp+=1
00008D94 88 98              		pop bp from [sp]
00008D95 90 9A              		retf
                            		.endp	// end of init_12864
                            	
0000056D                    	.debug
0000056D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000576 41 00 00 00        		.dd LME1-_init_12864
00000578 0D 00 0A 00        		.dw 0x0d,0x0a
00008D96                    	.code
                            	LME1:
00008041                    	.text
                            	LC0:
00008041 80 00              		.dw 128
00008042 81 00              		.dw 129
00008043 82 00              		.dw 130
00008044 83 00              		.dw 131
00008045 84 00              		.dw 132
00008046 85 00              		.dw 133
00008047 86 00              		.dw 134
00008048 87 00              		.dw 135
00008049 90 00              		.dw 144
0000804A 91 00              		.dw 145
0000804B 92 00              		.dw 146
0000804C 93 00              		.dw 147
0000804D 94 00              		.dw 148
0000804E 95 00              		.dw 149
0000804F 96 00              		.dw 150
00008050 97 00              		.dw 151
00008051 88 00              		.dw 136
00008052 89 00              		.dw 137
00008053 8A 00              		.dw 138
00008054 8B 00              		.dw 139
00008055 8C 00              		.dw 140
00008056 8D 00              		.dw 141
00008057 8E 00              		.dw 142
00008058 8F 00              		.dw 143
00008059 98 00              		.dw 152
0000805A 99 00              		.dw 153
0000805B 9A 00              		.dw 154
0000805C 9B 00              		.dw 155
0000805D 9C 00              		.dw 156
0000805E 9D 00              		.dw 157
0000805F 9E 00              		.dw 158
00008060 9F 00              		.dw 159
00008D96                    	.code
0000057A                    	.debug
0000057A 2E 00 73 00        		.dw '.stabs "write_chinese_12864:F19",36,0,0,',0,0,offset _write_chinese_12864,seg _write_chinese_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 5F 00
         63 00 68 00
         69 00 6E 00
         65 00 73 00
         65 00 5F 00
         31 00 32 00
         38 00 36 00
         34 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         41 00 00 00
         0D 00 0A 00
00008D96                    	.CODE
                            	.public _write_chinese_12864
                            	_write_chinese_12864:	.proc
000005A8                    	.debug
000005A8 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
000005BB 00 00 00 00        		.dd LM14-_write_chinese_12864
000005BD 0D 00 0A 00        		.dw 0x0d,0x0a
00008D96                    	.code
                            	LM14:
                            		// total=34, vars=34
                            		// frame_pointer_needed: 1
00008D96 88 DA              		push bp to [sp]
00008D97 62 20              		sp-=34
00008D98 08 0B 01 00        		bp=sp+1
                            	
00008D9A 0D 03 25 00        		R1=BP+37
00008D9C 20 D2              		[bp+32]=R1	// QImode move
000005BF                    	.debug
000005BF 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
000005D2 07 00 00 00        		.dd LM15-_write_chinese_12864
000005D4 0D 00 0A 00        		.dw 0x0d,0x0a
00008D9D                    	.code
                            	LM15:
                            	LBB2:
00008D9D 05 95              		R2=BP	// QImode move
00008D9E 05 93              		R1=BP	// QImode move
00008D9F 0A 95 41 80        		R2=LC0	// QImode move
00008DA1 60 96              		R3=32	// QImode move
00008DA2 C8 D6              		[SP--]=R3	// QImode move
00008DA3 C8 D4              		[SP--]=R2	// QImode move
00008DA4 C8 D2              		[SP--]=R1	// QImode move
00008DA5 40 F0 13 96        		call __BlockCopy	// call with return value
00008DA7 43 00              		SP = SP + 3	//SP
000005D6                    	.debug
000005D6 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
000005E9 12 00 00 00        		.dd LM16-_write_chinese_12864
000005EB 0D 00 0A 00        		.dw 0x0d,0x0a
00008DA8                    	.code
                            	LM16:
00008DA8 70 92              		R1=48	// QImode move
00008DA9 C8 D2              		[SP--]=R1	// QImode move
00008DAA 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00008DAC 41 00              		SP = SP + 1	//SP
000005ED                    	.debug
000005ED 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
00000600 17 00 00 00        		.dd LM17-_write_chinese_12864
00000602 0D 00 0A 00        		.dw 0x0d,0x0a
00008DAD                    	.code
                            	LM17:
                            	L4:
00008DAD 20 94              		R2=[bp+32]	// QImode move
00008DAE 20 94              		R2=[bp+32]	// QImode move
00008DAF 0A 03 03 00        		R1=R2+3
00008DB1 01 97              		R3=R1	// QImode move
00008DB2 C3 94              		R2=[R3]	// QImode move
00008DB3 02 97              		R3=R2	// QImode move
00008DB4 0A 05 FF FF        		R2=R2+(-1)
00008DB6 01 99              		R4=R1	// QImode move
00008DB7 C4 D4              		[R4]=R2	// QImode move
00008DB8 40 46              		CMP R3,0	// QImode test
00008DB9 04 4E 01 EE        		NSJNZ L6	//QImode NE
         00 EE      
00008DBC 0F 9F FC 8D        		pc=L5	// Indirect jump
                            	L6:
00000604                    	.debug
00000604 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
00000617 28 00 00 00        		.dd LM18-_write_chinese_12864
00000619 0D 00 0A 00        		.dw 0x0d,0x0a
00008DBE                    	.code
                            	LM18:
00008DBE 20 94              		R2=[bp+32]	// QImode move
00008DBF 20 94              		R2=[bp+32]	// QImode move
00008DC0 0A 03 01 00        		R1=R2+1
00008DC2 01 97              		R3=R1	// QImode move
00008DC3 C3 94              		R2=[R3]	// QImode move
00008DC4 02 99              		R4=R2	// QImode move
00008DC5 05 97              		R3=BP	// QImode move
00008DC6 04 07              		R3 = R3 + R4	//addqi3
00008DC7 03 99              		R4=R3	// QImode move
00008DC8 C4 98              		R4=[R4]	// QImode move
00008DC9 21 D8              		[bp+33]=R4	// QImode move
00008DCA 21 96              		R3=[bp+33]	// QImode move
00008DCB C8 D6              		[SP--]=R3	// QImode move
00008DCC 41 04              		R2=R2+1
00008DCD 01 99              		R4=R1	// QImode move
00008DCE C4 D4              		[R4]=R2	// QImode move
00008DCF 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00008DD1 41 00              		SP = SP + 1	//SP
0000061B                    	.debug
0000061B 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
0000062E 3C 00 00 00        		.dd LM19-_write_chinese_12864
00000630 0D 00 0A 00        		.dw 0x0d,0x0a
00008DD2                    	.code
                            	LM19:
00008DD2 20 94              		R2=[bp+32]	// QImode move
00008DD3 20 94              		R2=[bp+32]	// QImode move
00008DD4 0A 03 02 00        		R1=R2+2
00008DD6 01 97              		R3=R1	// QImode move
00008DD7 C3 94              		R2=[R3]	// QImode move
00008DD8 02 97              		R3=R2	// QImode move
00008DD9 20 98              		R4=[bp+32]	// QImode move
00008DDA C4 06              		R3 = R3 + [R4]	//addqi3
00008DDB 03 99              		R4=R3	// QImode move
00008DDC C4 98              		R4=[R4]	// QImode move
00008DDD 21 D8              		[bp+33]=R4	// QImode move
00008DDE 21 96              		R3=[bp+33]	// QImode move
00008DDF C8 D6              		[SP--]=R3	// QImode move
00008DE0 41 04              		R2=R2+1
00008DE1 01 99              		R4=R1	// QImode move
00008DE2 C4 D4              		[R4]=R2	// QImode move
00008DE3 40 F0 EF 8E        		call _write_data_12864	// call without return value
00008DE5 41 00              		SP = SP + 1	//SP
00000632                    	.debug
00000632 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
00000645 50 00 00 00        		.dd LM20-_write_chinese_12864
00000647 0D 00 0A 00        		.dw 0x0d,0x0a
00008DE6                    	.code
                            	LM20:
00008DE6 20 94              		R2=[bp+32]	// QImode move
00008DE7 20 94              		R2=[bp+32]	// QImode move
00008DE8 0A 03 02 00        		R1=R2+2
00008DEA 01 97              		R3=R1	// QImode move
00008DEB C3 94              		R2=[R3]	// QImode move
00008DEC 02 97              		R3=R2	// QImode move
00008DED 20 98              		R4=[bp+32]	// QImode move
00008DEE C4 06              		R3 = R3 + [R4]	//addqi3
00008DEF 03 99              		R4=R3	// QImode move
00008DF0 C4 98              		R4=[R4]	// QImode move
00008DF1 21 D8              		[bp+33]=R4	// QImode move
00008DF2 21 96              		R3=[bp+33]	// QImode move
00008DF3 C8 D6              		[SP--]=R3	// QImode move
00008DF4 41 04              		R2=R2+1
00008DF5 01 99              		R4=R1	// QImode move
00008DF6 C4 D4              		[R4]=R2	// QImode move
00008DF7 40 F0 EF 8E        		call _write_data_12864	// call without return value
00008DF9 41 00              		SP = SP + 1	//SP
00000649                    	.debug
00000649 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
0000065C 64 00 00 00        		.dd LM21-_write_chinese_12864
0000065E 0D 00 0A 00        		.dw 0x0d,0x0a
00008DFA                    	.code
                            	LM21:
00008DFA 0F 9F AD 8D        		pc=L4	// Indirect jump
                            	L5:
00000660                    	.debug
00000660 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
00000673 66 00 00 00        		.dd LM22-_write_chinese_12864
00000675 0D 00 0A 00        		.dw 0x0d,0x0a
00008DFC                    	.code
                            	LM22:
                            	LBE2:
00000677                    	.debug
00000677 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
0000068A 66 00 00 00        		.dd LM23-_write_chinese_12864
0000068C 0D 00 0A 00        		.dw 0x0d,0x0a
00008DFC                    	.code
                            	LM23:
                            	L3:
                            	
00008DFC 62 00              		sp+=34
00008DFD 88 98              		pop bp from [sp]
00008DFE 90 9A              		retf
                            		.endp	// end of write_chinese_12864
                            	
0000068E                    	.debug
0000068E 2E 00 73 00        		.dw '.stabs "str:p20=*11",160,0,0,37',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 74 00
         72 00 3A 00
         70 00 32 00
         30 00 3D 00
         2A 00 31 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         37 00 0D 00
         0A 00      
00008DFF                    	.CODE
000006AF                    	.debug
000006AF 2E 00 73 00        		.dw '.stabs "first_addr:p11",160,0,0,38',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 69 00
         72 00 73 00
         74 00 5F 00
         61 00 64 00
         64 00 72 00
         3A 00 70 00
         31 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         33 00 38 00
         0D 00 0A 00
00008DFF                    	.CODE
000006D3                    	.debug
000006D3 2E 00 73 00        		.dw '.stabs "first_hanzi:p11",160,0,0,39',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 69 00
         72 00 73 00
         74 00 5F 00
         68 00 61 00
         6E 00 7A 00
         69 00 3A 00
         70 00 31 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         39 00 0D 00
         0A 00      
00008DFF                    	.CODE
000006F8                    	.debug
000006F8 2E 00 73 00        		.dw '.stabs "length:p11",160,0,0,40',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 65 00
         6E 00 67 00
         74 00 68 00
         3A 00 70 00
         31 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 30 00
         0D 00 0A 00
00008DFF                    	.CODE
00000718                    	.debug
00000718 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000072A 07 00 00 00        		.dd LBB2-_write_chinese_12864
0000072C 0D 00 0A 00        		.dw 0x0d,0x0a
00008DFF                    	.code
0000072E                    	.debug
0000072E 2E 00 73 00        		.dw '.stabs "Address:21=ar1;0;31;11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         64 00 72 00
         65 00 73 00
         73 00 3A 00
         32 00 31 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 33 00
         31 00 3B 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008DFF                    	.CODE
00000759                    	.debug
00000759 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000076B 66 00 00 00        		.dd LBE2-_write_chinese_12864
0000076D 0D 00 0A 00        		.dw 0x0d,0x0a
00008DFF                    	.code
0000076F                    	.debug
0000076F 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000778 69 00 00 00        		.dd LME2-_write_chinese_12864
0000077A 0D 00 0A 00        		.dw 0x0d,0x0a
00008DFF                    	.code
                            	LME2:
00008DFF                    	.code
0000077C                    	.debug
0000077C 2E 00 73 00        		.dw '.stabs "delay_12864:F19",36,0,0,',0,0,offset _delay_12864,seg _delay_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 65 00
         6C 00 61 00
         79 00 5F 00
         31 00 32 00
         38 00 36 00
         34 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         AA 00 00 00
         0D 00 0A 00
00008DFF                    	.CODE
                            	.public _delay_12864
                            	_delay_12864:	.proc
000007A2                    	.debug
000007A2 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
000007B5 00 00 00 00        		.dd LM24-_delay_12864
000007B7 0D 00 0A 00        		.dw 0x0d,0x0a
00008DFF                    	.code
                            	LM24:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
00008DFF 88 DA              		push bp to [sp]
00008E00 08 0B 01 00        		bp=sp+1
                            	
00008E02 0D 03 03 00        		R1=BP+3
000007B9                    	.debug
000007B9 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
000007CC 05 00 00 00        		.dd LM25-_delay_12864
000007CE 0D 00 0A 00        		.dw 0x0d,0x0a
00008E04                    	.code
                            	LM25:
                            	L9:
00008E04 01 95              		R2=R1	// QImode move
00008E05 C2 96              		R3=[R2]	// QImode move
00008E06 0B 05 FF FF        		R2=R3+(-1)
00008E08 02 97              		R3=R2	// QImode move
00008E09 01 95              		R2=R1	// QImode move
00008E0A C2 D6              		[R2]=R3	// QImode move
00008E0B 0B 47 FF FF        		CMP R3,(-1)	// QImode compare
00008E0D 04 4E 01 EE        		NSJNZ L11	//QImode NE
         00 EE      
00008E10 0F 9F 17 8E        		pc=L10	// Indirect jump
                            	L11:
000007D0                    	.debug
000007D0 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
000007E3 13 00 00 00        		.dd LM26-_delay_12864
000007E5 0D 00 0A 00        		.dw 0x0d,0x0a
00008E12                    	.code
                            	LM26:
00008E12 41 94              		R2=1	// QImode move
00008E13 1A D5 12 70        		[28690]=R2	// QImode move
000007E7                    	.debug
000007E7 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
000007FA 16 00 00 00        		.dd LM27-_delay_12864
000007FC 0D 00 0A 00        		.dw 0x0d,0x0a
00008E15                    	.code
                            	LM27:
00008E15 0F 9F 04 8E        		pc=L9	// Indirect jump
                            	L10:
000007FE                    	.debug
000007FE 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
00000811 18 00 00 00        		.dd LM28-_delay_12864
00000813 0D 00 0A 00        		.dw 0x0d,0x0a
00008E17                    	.code
                            	LM28:
00000815                    	.debug
00000815 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
00000828 18 00 00 00        		.dd LM29-_delay_12864
0000082A 0D 00 0A 00        		.dw 0x0d,0x0a
00008E17                    	.code
                            	LM29:
                            	L8:
                            	
00008E17 88 98              		pop bp from [sp]
00008E18 90 9A              		retf
                            		.endp	// end of delay_12864
                            	
0000082C                    	.debug
0000082C 2E 00 73 00        		.dw '.stabs "t:p4",160,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         33 00 0D 00
         0A 00      
00008E19                    	.CODE
00000845                    	.debug
00000845 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000084E 1A 00 00 00        		.dd LME3-_delay_12864
00000850 0D 00 0A 00        		.dw 0x0d,0x0a
00008E19                    	.code
                            	LME3:
00008E19                    	.code
00000852                    	.debug
00000852 2E 00 73 00        		.dw '.stabs "write_byte_12864:F19",36,0,0,',0,0,offset _write_byte_12864,seg _write_byte_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 5F 00
         62 00 79 00
         74 00 65 00
         5F 00 31 00
         32 00 38 00
         36 00 34 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 C4 00
         00 00 0D 00
         0A 00      
00008E19                    	.CODE
                            	.public _write_byte_12864
                            	_write_byte_12864:	.proc
0000087D                    	.debug
0000087D 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
00000890 00 00 00 00        		.dd LM30-_write_byte_12864
00000892 0D 00 0A 00        		.dw 0x0d,0x0a
00008E19                    	.code
                            	LM30:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008E19 88 DA              		push bp to [sp]
00008E1A 41 20              		sp-=1
00008E1B 08 0B 01 00        		bp=sp+1
                            	
00008E1D 0D 03 04 00        		R1=BP+4
00000894                    	.debug
00000894 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
000008A7 06 00 00 00        		.dd LM31-_write_byte_12864
000008A9 0D 00 0A 00        		.dw 0x0d,0x0a
00008E1F                    	.code
                            	LM31:
                            	LBB3:
000008AB                    	.debug
000008AB 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
000008BE 06 00 00 00        		.dd LM32-_write_byte_12864
000008C0 0D 00 0A 00        		.dw 0x0d,0x0a
00008E1F                    	.code
                            	LM32:
00008E1F 01 95              		R2=R1	// QImode move
00008E20 C2 96              		R3=[R2]	// QImode move
00008E21 0B B7 FF 00        		R3=R3&255
00008E23 C2 D6              		[R2]=R3	// QImode move
000008C2                    	.debug
000008C2 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
000008D5 0B 00 00 00        		.dd LM33-_write_byte_12864
000008D7 0D 00 0A 00        		.dw 0x0d,0x0a
00008E24                    	.code
                            	LM33:
00008E24 40 94              		R2=0	// QImode move
00008E25 C5 D4              		[BP]=R2	// QImode move
                            	L14:
00008E26 C5 94              		R2=[BP]	// QImode move
00008E27 47 44              		CMP R2,7	// QImode compare
00008E28 04 8E 01 EE        		NSJNA L17	//QImode LEU
         00 EE      
00008E2B 0F 9F 64 8E        		pc=L15	// Indirect jump
                            	L17:
000008D9                    	.debug
000008D9 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
000008EC 14 00 00 00        		.dd LM34-_write_byte_12864
000008EE 0D 00 0A 00        		.dw 0x0d,0x0a
00008E2D                    	.code
                            	LM34:
00008E2D 01 99              		R4=R1	// QImode move
00008E2E C4 98              		R4=[R4]	// QImode move
00008E2F 0C B5 80 00        		R2=R4&128
00008E31 40 44              		CMP R2,0	// QImode test
00008E32 0A 5E 01 EE        		NSJZ L18	//QImode EQ
         00 EE      
000008F0                    	.debug
000008F0 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00000903 1C 00 00 00        		.dd LM35-_write_byte_12864
00000905 0D 00 0A 00        		.dw 0x0d,0x0a
00008E35                    	.code
                            	LM35:
00008E35 12 95 00 70        		R2=[28672]	// QImode move
00008E37 0A A7 10 00        		R3=R2|16
00008E39 1B D7 00 70        		[28672]=R3	// QImode move
00000907                    	.debug
00000907 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
0000091A 22 00 00 00        		.dd LM36-_write_byte_12864
0000091C 0D 00 0A 00        		.dw 0x0d,0x0a
00008E3B                    	.code
                            	LM36:
00008E3B 0F 9F 43 8E        		pc=L19	// Indirect jump
                            	L18:
0000091E                    	.debug
0000091E 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
00000931 24 00 00 00        		.dd LM37-_write_byte_12864
00000933 0D 00 0A 00        		.dw 0x0d,0x0a
00008E3D                    	.code
                            	LM37:
00008E3D 12 95 00 70        		R2=[28672]	// QImode move
00008E3F 0A B7 EF FF        		R3=R2&(-17)
00008E41 1B D7 00 70        		[28672]=R3	// QImode move
                            	L19:
00000935                    	.debug
00000935 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
00000948 2A 00 00 00        		.dd LM38-_write_byte_12864
0000094A 0D 00 0A 00        		.dw 0x0d,0x0a
00008E43                    	.code
                            	LM38:
                            	// GCC inline ASM start
00008E43 00 EE              		NOP
                            	// GCC inline ASM end
0000094C                    	.debug
0000094C 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
0000095F 2B 00 00 00        		.dd LM39-_write_byte_12864
00000961 0D 00 0A 00        		.dw 0x0d,0x0a
00008E44                    	.code
                            	LM39:
00008E44 12 95 00 70        		R2=[28672]	// QImode move
00008E46 0A B7 F7 FF        		R3=R2&(-9)
00008E48 1B D7 00 70        		[28672]=R3	// QImode move
00000963                    	.debug
00000963 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000976 31 00 00 00        		.dd LM40-_write_byte_12864
00000978 0D 00 0A 00        		.dw 0x0d,0x0a
00008E4A                    	.code
                            	LM40:
00008E4A 12 95 00 70        		R2=[28672]	// QImode move
00008E4C 0A A7 08 00        		R3=R2|8
00008E4E 1B D7 00 70        		[28672]=R3	// QImode move
0000097A                    	.debug
0000097A 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
0000098D 37 00 00 00        		.dd LM41-_write_byte_12864
0000098F 0D 00 0A 00        		.dw 0x0d,0x0a
00008E50                    	.code
                            	LM41:
00008E50 12 95 00 70        		R2=[28672]	// QImode move
00008E52 0A B7 F7 FF        		R3=R2&(-9)
00008E54 1B D7 00 70        		[28672]=R3	// QImode move
00000991                    	.debug
00000991 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
000009A4 3D 00 00 00        		.dd LM42-_write_byte_12864
000009A6 0D 00 0A 00        		.dw 0x0d,0x0a
00008E56                    	.code
                            	LM42:
00008E56 01 97              		R3=R1	// QImode move
00008E57 C3 94              		R2=[R3]	// QImode move
00008E58 42 97              		R3=R2 lsl 1
00008E59 01 99              		R4=R1	// QImode move
00008E5A C4 D6              		[R4]=R3	// QImode move
000009A8                    	.debug
000009A8 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
000009BB 42 00 00 00        		.dd LM43-_write_byte_12864
000009BD 0D 00 0A 00        		.dw 0x0d,0x0a
00008E5B                    	.code
                            	LM43:
00008E5B 41 94              		R2=1	// QImode move
00008E5C 1A D5 12 70        		[28690]=R2	// QImode move
000009BF                    	.debug
000009BF 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
000009D2 45 00 00 00        		.dd LM44-_write_byte_12864
000009D4 0D 00 0A 00        		.dw 0x0d,0x0a
00008E5E                    	.code
                            	LM44:
                            	L16:
00008E5E C5 94              		R2=[BP]	// QImode move
00008E5F 0A 07 01 00        		R3=R2+1
00008E61 C5 D6              		[BP]=R3	// QImode move
00008E62 0F 9F 26 8E        		pc=L14	// Indirect jump
                            	L15:
000009D6                    	.debug
000009D6 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
000009E9 4B 00 00 00        		.dd LM45-_write_byte_12864
000009EB 0D 00 0A 00        		.dw 0x0d,0x0a
00008E64                    	.code
                            	LM45:
                            	LBE3:
000009ED                    	.debug
000009ED 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
00000A00 4B 00 00 00        		.dd LM46-_write_byte_12864
00000A02 0D 00 0A 00        		.dw 0x0d,0x0a
00008E64                    	.code
                            	LM46:
                            	L13:
                            	
00008E64 41 00              		sp+=1
00008E65 88 98              		pop bp from [sp]
00008E66 90 9A              		retf
                            		.endp	// end of write_byte_12864
                            	
00000A04                    	.debug
00000A04 2E 00 73 00        		.dw '.stabs "b:p11",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         62 00 3A 00
         70 00 31 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
00008E67                    	.CODE
00000A1E                    	.debug
00000A1E 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000A30 06 00 00 00        		.dd LBB3-_write_byte_12864
00000A32 0D 00 0A 00        		.dw 0x0d,0x0a
00008E67                    	.code
00000A34                    	.debug
00000A34 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008E67                    	.CODE
00000A4D                    	.debug
00000A4D 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000A5F 4B 00 00 00        		.dd LBE3-_write_byte_12864
00000A61 0D 00 0A 00        		.dw 0x0d,0x0a
00008E67                    	.code
00000A63                    	.debug
00000A63 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000A6C 4E 00 00 00        		.dd LME4-_write_byte_12864
00000A6E 0D 00 0A 00        		.dw 0x0d,0x0a
00008E67                    	.code
                            	LME4:
00008E67                    	.code
00000A70                    	.debug
00000A70 2E 00 73 00        		.dw '.stabs "read_byte_12864:F11",36,0,0,',0,0,offset _read_byte_12864,seg _read_byte_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         61 00 64 00
         5F 00 62 00
         79 00 74 00
         65 00 5F 00
         31 00 32 00
         38 00 36 00
         34 00 3A 00
         46 00 31 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         12 01 00 00
         0D 00 0A 00
00008E67                    	.CODE
                            	.public _read_byte_12864
                            	_read_byte_12864:	.proc
00000A9A                    	.debug
00000A9A 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000AAD 00 00 00 00        		.dd LM47-_read_byte_12864
00000AAF 0D 00 0A 00        		.dw 0x0d,0x0a
00008E67                    	.code
                            	LM47:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008E67 88 DA              		push bp to [sp]
00008E68 43 20              		sp-=3
00008E69 08 0B 01 00        		bp=sp+1
                            	
00008E6B 0D 05 06 00        		R2=BP+6
00000AB1                    	.debug
00000AB1 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
00000AC4 06 00 00 00        		.dd LM48-_read_byte_12864
00000AC6 0D 00 0A 00        		.dw 0x0d,0x0a
00008E6D                    	.code
                            	LM48:
                            	LBB4:
00008E6D 40 92              		R1=0	// QImode move
00008E6E C5 D2              		[BP]=R1	// QImode move
00000AC8                    	.debug
00000AC8 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000ADB 08 00 00 00        		.dd LM49-_read_byte_12864
00000ADD 0D 00 0A 00        		.dw 0x0d,0x0a
00008E6F                    	.code
                            	LM49:
00008E6F 05 93              		R1=BP	// QImode move
00008E70 0D 07 01 00        		R3=BP+1
00008E72 40 92              		R1=0	// QImode move
00008E73 03 99              		R4=R3	// QImode move
00008E74 C4 D2              		[R4]=R1	// QImode move
                            	L23:
00008E75 05 93              		R1=BP	// QImode move
00008E76 0D 07 01 00        		R3=BP+1
00008E78 03 99              		R4=R3	// QImode move
00008E79 C4 92              		R1=[R4]	// QImode move
00008E7A 47 42              		CMP R1,7	// QImode compare
00008E7B 04 8E 01 EE        		NSJNA L26	//QImode LEU
         00 EE      
00008E7E 0F 9F B8 8E        		pc=L24	// Indirect jump
                            	L26:
00000ADF                    	.debug
00000ADF 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000AF2 19 00 00 00        		.dd LM50-_read_byte_12864
00000AF4 0D 00 0A 00        		.dw 0x0d,0x0a
00008E80                    	.code
                            	LM50:
00008E80 C5 92              		R1=[BP]	// QImode move
00008E81 41 97              		R3=R1 lsl 1
00008E82 C5 D6              		[BP]=R3	// QImode move
00000AF6                    	.debug
00000AF6 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000B09 1C 00 00 00        		.dd LM51-_read_byte_12864
00000B0B 0D 00 0A 00        		.dw 0x0d,0x0a
00008E83                    	.code
                            	LM51:
00008E83 11 93 00 70        		R1=[28672]	// QImode move
00008E85 09 B7 F7 FF        		R3=R1&(-9)
00008E87 1B D7 00 70        		[28672]=R3	// QImode move
00000B0D                    	.debug
00000B0D 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
00000B20 22 00 00 00        		.dd LM52-_read_byte_12864
00000B22 0D 00 0A 00        		.dw 0x0d,0x0a
00008E89                    	.code
                            	LM52:
                            	// GCC inline ASM start
00008E89 00 EE              		NOP
                            	// GCC inline ASM end
00000B24                    	.debug
00000B24 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
00000B37 23 00 00 00        		.dd LM53-_read_byte_12864
00000B39 0D 00 0A 00        		.dw 0x0d,0x0a
00008E8A                    	.code
                            	LM53:
00008E8A 11 93 00 70        		R1=[28672]	// QImode move
00008E8C 09 A7 08 00        		R3=R1|8
00008E8E 1B D7 00 70        		[28672]=R3	// QImode move
00000B3B                    	.debug
00000B3B 2E 00 73 00        		.dw '.stabn 0x44,0,100,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         30 00 2C 00
         00 00 00 00
00000B4F 29 00 00 00        		.dd LM54-_read_byte_12864
00000B51 0D 00 0A 00        		.dw 0x0d,0x0a
00008E90                    	.code
                            	LM54:
                            	// GCC inline ASM start
00008E90 00 EE              		NOP
                            	// GCC inline ASM end
00000B53                    	.debug
00000B53 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000B67 2A 00 00 00        		.dd LM55-_read_byte_12864
00000B69 0D 00 0A 00        		.dw 0x0d,0x0a
00008E91                    	.code
                            	LM55:
00008E91 13 97 00 70        		R3=[28672]	// QImode move
00008E93 0B B3 10 00        		R1=R3&16
00008E95 40 42              		CMP R1,0	// QImode test
00008E96 05 5E 01 EE        		NSJZ L27	//QImode EQ
         00 EE      
00000B6B                    	.debug
00000B6B 2E 00 73 00        		.dw '.stabn 0x44,0,103,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         33 00 2C 00
         00 00 00 00
00000B7F 32 00 00 00        		.dd LM56-_read_byte_12864
00000B81 0D 00 0A 00        		.dw 0x0d,0x0a
00008E99                    	.code
                            	LM56:
00008E99 C5 92              		R1=[BP]	// QImode move
00008E9A 41 A2              		R1=R1|1
00008E9B C5 D2              		[BP]=R1	// QImode move
                            	L27:
00000B83                    	.debug
00000B83 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00000B97 35 00 00 00        		.dd LM57-_read_byte_12864
00000B99 0D 00 0A 00        		.dw 0x0d,0x0a
00008E9C                    	.code
                            	LM57:
00008E9C 11 93 00 70        		R1=[28672]	// QImode move
00008E9E 09 B7 F7 FF        		R3=R1&(-9)
00008EA0 1B D7 00 70        		[28672]=R3	// QImode move
00000B9B                    	.debug
00000B9B 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000BAF 3B 00 00 00        		.dd LM58-_read_byte_12864
00000BB1 0D 00 0A 00        		.dw 0x0d,0x0a
00008EA2                    	.code
                            	LM58:
                            	// GCC inline ASM start
00008EA2 00 EE              		NOP
                            	// GCC inline ASM end
00000BB3                    	.debug
00000BB3 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000BC7 3C 00 00 00        		.dd LM59-_read_byte_12864
00000BC9 0D 00 0A 00        		.dw 0x0d,0x0a
00008EA3                    	.code
                            	LM59:
00008EA3 41 92              		R1=1	// QImode move
00008EA4 19 D3 12 70        		[28690]=R1	// QImode move
00000BCB                    	.debug
00000BCB 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000BDE 3F 00 00 00        		.dd LM60-_read_byte_12864
00000BE0 0D 00 0A 00        		.dw 0x0d,0x0a
00008EA6                    	.code
                            	LM60:
                            	L25:
00008EA6 05 93              		R1=BP	// QImode move
00008EA7 0D 07 01 00        		R3=BP+1
00008EA9 05 99              		R4=BP	// QImode move
00008EAA 0D 03 01 00        		R1=BP+1
00008EAC 05 97              		R3=BP	// QImode move
00008EAD 0D 07 01 00        		R3=BP+1
00008EAF 02 D6              		[bp+2]=R3	// QImode move
00008EB0 02 98              		R4=[bp+2]	// QImode move
00008EB1 C4 96              		R3=[R4]	// QImode move
00008EB2 0B 09 01 00        		R4=R3+1
00008EB4 01 97              		R3=R1	// QImode move
00008EB5 C3 D8              		[R3]=R4	// QImode move
00008EB6 0F 9F 75 8E        		pc=L23	// Indirect jump
                            	L24:
00000BE2                    	.debug
00000BE2 2E 00 73 00        		.dw '.stabn 0x44,0,109,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         39 00 2C 00
         00 00 00 00
00000BF6 51 00 00 00        		.dd LM61-_read_byte_12864
00000BF8 0D 00 0A 00        		.dw 0x0d,0x0a
00008EB8                    	.code
                            	LM61:
00008EB8 C5 96              		R3=[BP]	// QImode move
00008EB9 03 93              		R1=R3	// QImode move
00008EBA 0F 9F BC 8E        		pc=L22	// Indirect jump
00000BFA                    	.debug
00000BFA 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000C0E 55 00 00 00        		.dd LM62-_read_byte_12864
00000C10 0D 00 0A 00        		.dw 0x0d,0x0a
00008EBC                    	.code
                            	LM62:
                            	LBE4:
00000C12                    	.debug
00000C12 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000C26 55 00 00 00        		.dd LM63-_read_byte_12864
00000C28 0D 00 0A 00        		.dw 0x0d,0x0a
00008EBC                    	.code
                            	LM63:
                            	L22:
                            	
00008EBC 43 00              		sp+=3
00008EBD 88 98              		pop bp from [sp]
00008EBE 90 9A              		retf
                            		.endp	// end of read_byte_12864
                            	
00000C2A                    	.debug
00000C2A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000C3C 06 00 00 00        		.dd LBB4-_read_byte_12864
00000C3E 0D 00 0A 00        		.dw 0x0d,0x0a
00008EBF                    	.code
00000C40                    	.debug
00000C40 2E 00 73 00        		.dw '.stabs "da:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         3A 00 31 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008EBF                    	.CODE
00000C5A                    	.debug
00000C5A 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
00008EBF                    	.CODE
00000C73                    	.debug
00000C73 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000C85 55 00 00 00        		.dd LBE4-_read_byte_12864
00000C87 0D 00 0A 00        		.dw 0x0d,0x0a
00008EBF                    	.code
00000C89                    	.debug
00000C89 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000C92 58 00 00 00        		.dd LME5-_read_byte_12864
00000C94 0D 00 0A 00        		.dw 0x0d,0x0a
00008EBF                    	.code
                            	LME5:
00008EBF                    	.code
00000C96                    	.debug
00000C96 2E 00 73 00        		.dw '.stabs "write_cmd_12864:F19",36,0,0,',0,0,offset _write_cmd_12864,seg _write_cmd_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 5F 00
         63 00 6D 00
         64 00 5F 00
         31 00 32 00
         38 00 36 00
         34 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         6A 01 00 00
         0D 00 0A 00
00008EBF                    	.CODE
                            	.public _write_cmd_12864
                            	_write_cmd_12864:	.proc
00000CC0                    	.debug
00000CC0 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
00000CD4 00 00 00 00        		.dd LM64-_write_cmd_12864
00000CD6 0D 00 0A 00        		.dw 0x0d,0x0a
00008EBF                    	.code
                            	LM64:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008EBF 88 DA              		push bp to [sp]
00008EC0 41 20              		sp-=1
00008EC1 08 0B 01 00        		bp=sp+1
                            	
00008EC3 0D 03 04 00        		R1=BP+4
00008EC5 C5 D2              		[BP]=R1	// QImode move
00000CD8                    	.debug
00000CD8 2E 00 73 00        		.dw '.stabn 0x44,0,114,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         34 00 2C 00
         00 00 00 00
00000CEC 07 00 00 00        		.dd LM65-_write_cmd_12864
00000CEE 0D 00 0A 00        		.dw 0x0d,0x0a
00008EC6                    	.code
                            	LM65:
00008EC6 C5 94              		R2=[BP]	// QImode move
00008EC7 C2 96              		R3=[R2]	// QImode move
00008EC8 0B B7 FF 00        		R3=R3&255
00008ECA C2 D6              		[R2]=R3	// QImode move
00000CF0                    	.debug
00000CF0 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
00000D04 0C 00 00 00        		.dd LM66-_write_cmd_12864
00000D06 0D 00 0A 00        		.dw 0x0d,0x0a
00008ECB                    	.code
                            	LM66:
00008ECB 11 93 00 70        		R1=[28672]	// QImode move
00008ECD 09 A5 20 00        		R2=R1|32
00008ECF 1A D5 00 70        		[28672]=R2	// QImode move
00000D08                    	.debug
00000D08 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000D1C 12 00 00 00        		.dd LM67-_write_cmd_12864
00000D1E 0D 00 0A 00        		.dw 0x0d,0x0a
00008ED1                    	.code
                            	LM67:
00008ED1 09 93 F8 00        		R1=248	// QImode move
00008ED3 C8 D2              		[SP--]=R1	// QImode move
00008ED4 40 F0 19 8E        		call _write_byte_12864	// call without return value
00008ED6 41 00              		SP = SP + 1	//SP
00000D20                    	.debug
00000D20 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000D34 18 00 00 00        		.dd LM68-_write_cmd_12864
00000D36 0D 00 0A 00        		.dw 0x0d,0x0a
00008ED7                    	.code
                            	LM68:
00008ED7 C5 94              		R2=[BP]	// QImode move
00008ED8 C2 94              		R2=[R2]	// QImode move
00008ED9 0A B3 F0 00        		R1=R2&240
00008EDB C8 D2              		[SP--]=R1	// QImode move
00008EDC 40 F0 19 8E        		call _write_byte_12864	// call without return value
00008EDE 41 00              		SP = SP + 1	//SP
00000D38                    	.debug
00000D38 2E 00 73 00        		.dw '.stabn 0x44,0,119,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         39 00 2C 00
         00 00 00 00
00000D4C 20 00 00 00        		.dd LM69-_write_cmd_12864
00000D4E 0D 00 0A 00        		.dw 0x0d,0x0a
00008EDF                    	.code
                            	LM69:
00008EDF C5 96              		R3=[BP]	// QImode move
00008EE0 C3 94              		R2=[R3]	// QImode move
00008EE1 5A 93              		R1=R2 lsl 4
00008EE2 C8 D2              		[SP--]=R1	// QImode move
00008EE3 40 F0 19 8E        		call _write_byte_12864	// call without return value
00008EE5 41 00              		SP = SP + 1	//SP
00000D50                    	.debug
00000D50 2E 00 73 00        		.dw '.stabn 0x44,0,120,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         30 00 2C 00
         00 00 00 00
00000D64 27 00 00 00        		.dd LM70-_write_cmd_12864
00000D66 0D 00 0A 00        		.dw 0x0d,0x0a
00008EE6                    	.code
                            	LM70:
00008EE6 11 93 00 70        		R1=[28672]	// QImode move
00008EE8 09 B5 DF FF        		R2=R1&(-33)
00008EEA 1A D5 00 70        		[28672]=R2	// QImode move
00000D68                    	.debug
00000D68 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
00000D7C 2D 00 00 00        		.dd LM71-_write_cmd_12864
00000D7E 0D 00 0A 00        		.dw 0x0d,0x0a
00008EEC                    	.code
                            	LM71:
00000D80                    	.debug
00000D80 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
00000D94 2D 00 00 00        		.dd LM72-_write_cmd_12864
00000D96 0D 00 0A 00        		.dw 0x0d,0x0a
00008EEC                    	.code
                            	LM72:
                            	L30:
                            	
00008EEC 41 00              		sp+=1
00008EED 88 98              		pop bp from [sp]
00008EEE 90 9A              		retf
                            		.endp	// end of write_cmd_12864
                            	
00000D98                    	.debug
00000D98 2E 00 73 00        		.dw '.stabs "cmd:p11",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6D 00
         64 00 3A 00
         70 00 31 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
00008EEF                    	.CODE
00000DB4                    	.debug
00000DB4 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000DBD 30 00 00 00        		.dd LME6-_write_cmd_12864
00000DBF 0D 00 0A 00        		.dw 0x0d,0x0a
00008EEF                    	.code
                            	LME6:
00008EEF                    	.code
00000DC1                    	.debug
00000DC1 2E 00 73 00        		.dw '.stabs "write_data_12864:F19",36,0,0,',0,0,offset _write_data_12864,seg _write_data_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 5F 00
         64 00 61 00
         74 00 61 00
         5F 00 31 00
         32 00 38 00
         36 00 34 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 9A 01
         00 00 0D 00
         0A 00      
00008EEF                    	.CODE
                            	.public _write_data_12864
                            	_write_data_12864:	.proc
00000DEC                    	.debug
00000DEC 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000E00 00 00 00 00        		.dd LM73-_write_data_12864
00000E02 0D 00 0A 00        		.dw 0x0d,0x0a
00008EEF                    	.code
                            	LM73:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008EEF 88 DA              		push bp to [sp]
00008EF0 41 20              		sp-=1
00008EF1 08 0B 01 00        		bp=sp+1
                            	
00008EF3 0D 03 04 00        		R1=BP+4
00008EF5 C5 D2              		[BP]=R1	// QImode move
00000E04                    	.debug
00000E04 2E 00 73 00        		.dw '.stabn 0x44,0,132,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         32 00 2C 00
         00 00 00 00
00000E18 07 00 00 00        		.dd LM74-_write_data_12864
00000E1A 0D 00 0A 00        		.dw 0x0d,0x0a
00008EF6                    	.code
                            	LM74:
00008EF6 C5 94              		R2=[BP]	// QImode move
00008EF7 C2 96              		R3=[R2]	// QImode move
00008EF8 0B B7 FF 00        		R3=R3&255
00008EFA C2 D6              		[R2]=R3	// QImode move
00000E1C                    	.debug
00000E1C 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
00000E30 0C 00 00 00        		.dd LM75-_write_data_12864
00000E32 0D 00 0A 00        		.dw 0x0d,0x0a
00008EFB                    	.code
                            	LM75:
00008EFB 11 93 00 70        		R1=[28672]	// QImode move
00008EFD 09 A5 20 00        		R2=R1|32
00008EFF 1A D5 00 70        		[28672]=R2	// QImode move
00000E34                    	.debug
00000E34 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00000E48 12 00 00 00        		.dd LM76-_write_data_12864
00000E4A 0D 00 0A 00        		.dw 0x0d,0x0a
00008F01                    	.code
                            	LM76:
00008F01 09 93 FA 00        		R1=250	// QImode move
00008F03 C8 D2              		[SP--]=R1	// QImode move
00008F04 40 F0 19 8E        		call _write_byte_12864	// call without return value
00008F06 41 00              		SP = SP + 1	//SP
00000E4C                    	.debug
00000E4C 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
00000E60 18 00 00 00        		.dd LM77-_write_data_12864
00000E62 0D 00 0A 00        		.dw 0x0d,0x0a
00008F07                    	.code
                            	LM77:
00008F07 C5 94              		R2=[BP]	// QImode move
00008F08 C2 94              		R2=[R2]	// QImode move
00008F09 0A B3 F0 00        		R1=R2&240
00008F0B C8 D2              		[SP--]=R1	// QImode move
00008F0C 40 F0 19 8E        		call _write_byte_12864	// call without return value
00008F0E 41 00              		SP = SP + 1	//SP
00000E64                    	.debug
00000E64 2E 00 73 00        		.dw '.stabn 0x44,0,137,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         37 00 2C 00
         00 00 00 00
00000E78 20 00 00 00        		.dd LM78-_write_data_12864
00000E7A 0D 00 0A 00        		.dw 0x0d,0x0a
00008F0F                    	.code
                            	LM78:
00008F0F C5 96              		R3=[BP]	// QImode move
00008F10 C3 94              		R2=[R3]	// QImode move
00008F11 5A 93              		R1=R2 lsl 4
00008F12 C8 D2              		[SP--]=R1	// QImode move
00008F13 40 F0 19 8E        		call _write_byte_12864	// call without return value
00008F15 41 00              		SP = SP + 1	//SP
00000E7C                    	.debug
00000E7C 2E 00 73 00        		.dw '.stabn 0x44,0,138,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         38 00 2C 00
         00 00 00 00
00000E90 27 00 00 00        		.dd LM79-_write_data_12864
00000E92 0D 00 0A 00        		.dw 0x0d,0x0a
00008F16                    	.code
                            	LM79:
00008F16 11 93 00 70        		R1=[28672]	// QImode move
00008F18 09 B5 DF FF        		R2=R1&(-33)
00008F1A 1A D5 00 70        		[28672]=R2	// QImode move
00000E94                    	.debug
00000E94 2E 00 73 00        		.dw '.stabn 0x44,0,149,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         39 00 2C 00
         00 00 00 00
00000EA8 2D 00 00 00        		.dd LM80-_write_data_12864
00000EAA 0D 00 0A 00        		.dw 0x0d,0x0a
00008F1C                    	.code
                            	LM80:
00000EAC                    	.debug
00000EAC 2E 00 73 00        		.dw '.stabn 0x44,0,149,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         39 00 2C 00
         00 00 00 00
00000EC0 2D 00 00 00        		.dd LM81-_write_data_12864
00000EC2 0D 00 0A 00        		.dw 0x0d,0x0a
00008F1C                    	.code
                            	LM81:
                            	L31:
                            	
00008F1C 41 00              		sp+=1
00008F1D 88 98              		pop bp from [sp]
00008F1E 90 9A              		retf
                            		.endp	// end of write_data_12864
                            	
00000EC4                    	.debug
00000EC4 2E 00 73 00        		.dw '.stabs "d:p11",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 3A 00
         70 00 31 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
00008F1F                    	.CODE
00000EDE                    	.debug
00000EDE 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000EE7 30 00 00 00        		.dd LME7-_write_data_12864
00000EE9 0D 00 0A 00        		.dw 0x0d,0x0a
00008F1F                    	.code
                            	LME7:
00008F1F                    	.code
00000EEB                    	.debug
00000EEB 2E 00 73 00        		.dw '.stabs "wait_busy:F19",36,0,0,',0,0,offset _wait_busy,seg _wait_busy,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 61 00
         69 00 74 00
         5F 00 62 00
         75 00 73 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         CA 01 00 00
         0D 00 0A 00
00008F1F                    	.CODE
                            	.public _wait_busy
                            	_wait_busy:	.proc
00000F0F                    	.debug
00000F0F 2E 00 73 00        		.dw '.stabn 0x44,0,151,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         31 00 2C 00
         00 00 00 00
00000F23 00 00 00 00        		.dd LM82-_wait_busy
00000F25 0D 00 0A 00        		.dw 0x0d,0x0a
00008F1F                    	.code
                            	LM82:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
00008F1F 88 DA              		push bp to [sp]
00008F20 42 20              		sp-=2
00008F21 08 0B 01 00        		bp=sp+1
                            	
00008F23 0D 03 05 00        		R1=BP+5
00008F25 01 D2              		[bp+1]=R1	// QImode move
00000F27                    	.debug
00000F27 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
00000F3B 07 00 00 00        		.dd LM83-_wait_busy
00000F3D 0D 00 0A 00        		.dw 0x0d,0x0a
00008F26                    	.code
                            	LM83:
                            	LBB5:
00000F3F                    	.debug
00000F3F 2E 00 73 00        		.dw '.stabn 0x44,0,153,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         33 00 2C 00
         00 00 00 00
00000F53 07 00 00 00        		.dd LM84-_wait_busy
00000F55 0D 00 0A 00        		.dw 0x0d,0x0a
00008F26                    	.code
                            	LM84:
00008F26 40 F0 42 8F        		call _read_stat_12864	// call with return value
00008F28 C5 D2              		[BP]=R1	// QImode move
00000F57                    	.debug
00000F57 2E 00 73 00        		.dw '.stabn 0x44,0,154,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         34 00 2C 00
         00 00 00 00
00000F6B 0A 00 00 00        		.dd LM85-_wait_busy
00000F6D 0D 00 0A 00        		.dw 0x0d,0x0a
00008F29                    	.code
                            	LM85:
                            	L33:
00008F29 C5 94              		R2=[BP]	// QImode move
00008F2A 0A B3 80 00        		R1=R2&128
00008F2C 40 42              		CMP R1,0	// QImode test
00008F2D 04 4E 01 EE        		NSJNZ L35	//QImode NE
         00 EE      
00008F30 0F 9F 3F 8F        		pc=L34	// Indirect jump
                            	L35:
00000F6F                    	.debug
00000F6F 2E 00 73 00        		.dw '.stabn 0x44,0,156,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         36 00 2C 00
         00 00 00 00
00000F83 13 00 00 00        		.dd LM86-_wait_busy
00000F85 0D 00 0A 00        		.dw 0x0d,0x0a
00008F32                    	.code
                            	LM86:
00008F32 40 F0 42 8F        		call _read_stat_12864	// call with return value
00008F34 C5 D2              		[BP]=R1	// QImode move
00000F87                    	.debug
00000F87 2E 00 73 00        		.dw '.stabn 0x44,0,157,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         37 00 2C 00
         00 00 00 00
00000F9B 16 00 00 00        		.dd LM87-_wait_busy
00000F9D 0D 00 0A 00        		.dw 0x0d,0x0a
00008F35                    	.code
                            	LM87:
00008F35 4A 92              		R1=10	// QImode move
00008F36 C8 D2              		[SP--]=R1	// QImode move
00008F37 40 F0 FF 8D        		call _delay_12864	// call without return value
00008F39 41 00              		SP = SP + 1	//SP
00000F9F                    	.debug
00000F9F 2E 00 73 00        		.dw '.stabn 0x44,0,158,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         38 00 2C 00
         00 00 00 00
00000FB3 1B 00 00 00        		.dd LM88-_wait_busy
00000FB5 0D 00 0A 00        		.dw 0x0d,0x0a
00008F3A                    	.code
                            	LM88:
00008F3A 41 92              		R1=1	// QImode move
00008F3B 19 D3 12 70        		[28690]=R1	// QImode move
00000FB7                    	.debug
00000FB7 2E 00 73 00        		.dw '.stabn 0x44,0,159,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         39 00 2C 00
         00 00 00 00
00000FCB 1E 00 00 00        		.dd LM89-_wait_busy
00000FCD 0D 00 0A 00        		.dw 0x0d,0x0a
00008F3D                    	.code
                            	LM89:
00008F3D 0F 9F 29 8F        		pc=L33	// Indirect jump
                            	L34:
00000FCF                    	.debug
00000FCF 2E 00 73 00        		.dw '.stabn 0x44,0,160,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         30 00 2C 00
         00 00 00 00
00000FE3 20 00 00 00        		.dd LM90-_wait_busy
00000FE5 0D 00 0A 00        		.dw 0x0d,0x0a
00008F3F                    	.code
                            	LM90:
                            	LBE5:
00000FE7                    	.debug
00000FE7 2E 00 73 00        		.dw '.stabn 0x44,0,160,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         30 00 2C 00
         00 00 00 00
00000FFB 20 00 00 00        		.dd LM91-_wait_busy
00000FFD 0D 00 0A 00        		.dw 0x0d,0x0a
00008F3F                    	.code
                            	LM91:
                            	L32:
                            	
00008F3F 42 00              		sp+=2
00008F40 88 98              		pop bp from [sp]
00008F41 90 9A              		retf
                            		.endp	// end of wait_busy
                            	
00000FFF                    	.debug
00000FFF 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001011 07 00 00 00        		.dd LBB5-_wait_busy
00001013 0D 00 0A 00        		.dw 0x0d,0x0a
00008F42                    	.code
00001015                    	.debug
00001015 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008F42                    	.CODE
0000102E                    	.debug
0000102E 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001040 20 00 00 00        		.dd LBE5-_wait_busy
00001042 0D 00 0A 00        		.dw 0x0d,0x0a
00008F42                    	.code
00001044                    	.debug
00001044 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000104D 23 00 00 00        		.dd LME8-_wait_busy
0000104F 0D 00 0A 00        		.dw 0x0d,0x0a
00008F42                    	.code
                            	LME8:
00008F42                    	.code
00001051                    	.debug
00001051 2E 00 73 00        		.dw '.stabs "read_stat_12864:F11",36,0,0,',0,0,offset _read_stat_12864,seg _read_stat_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         61 00 64 00
         5F 00 73 00
         74 00 61 00
         74 00 5F 00
         31 00 32 00
         38 00 36 00
         34 00 3A 00
         46 00 31 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         ED 01 00 00
         0D 00 0A 00
00008F42                    	.CODE
                            	.public _read_stat_12864
                            	_read_stat_12864:	.proc
0000107B                    	.debug
0000107B 2E 00 73 00        		.dw '.stabn 0x44,0,162,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         32 00 2C 00
         00 00 00 00
0000108F 00 00 00 00        		.dd LM92-_read_stat_12864
00001091 0D 00 0A 00        		.dw 0x0d,0x0a
00008F42                    	.code
                            	LM92:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008F42 88 DA              		push bp to [sp]
00008F43 43 20              		sp-=3
00008F44 08 0B 01 00        		bp=sp+1
                            	
00008F46 0D 03 06 00        		R1=BP+6
00008F48 02 D2              		[bp+2]=R1	// QImode move
00001093                    	.debug
00001093 2E 00 73 00        		.dw '.stabn 0x44,0,164,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         34 00 2C 00
         00 00 00 00
000010A7 07 00 00 00        		.dd LM93-_read_stat_12864
000010A9 0D 00 0A 00        		.dw 0x0d,0x0a
00008F49                    	.code
                            	LM93:
                            	LBB6:
000010AB                    	.debug
000010AB 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
000010BF 07 00 00 00        		.dd LM94-_read_stat_12864
000010C1 0D 00 0A 00        		.dw 0x0d,0x0a
00008F49                    	.code
                            	LM94:
00008F49 09 93 64 00        		R1=100	// QImode move
00008F4B C8 D2              		[SP--]=R1	// QImode move
00008F4C 40 F0 FF 8D        		call _delay_12864	// call without return value
00008F4E 41 00              		SP = SP + 1	//SP
000010C3                    	.debug
000010C3 2E 00 73 00        		.dw '.stabn 0x44,0,166,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         36 00 2C 00
         00 00 00 00
000010D7 0D 00 00 00        		.dd LM95-_read_stat_12864
000010D9 0D 00 0A 00        		.dw 0x0d,0x0a
00008F4F                    	.code
                            	LM95:
00008F4F 11 93 00 70        		R1=[28672]	// QImode move
00008F51 09 A5 20 00        		R2=R1|32
00008F53 1A D5 00 70        		[28672]=R2	// QImode move
000010DB                    	.debug
000010DB 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
000010EF 13 00 00 00        		.dd LM96-_read_stat_12864
000010F1 0D 00 0A 00        		.dw 0x0d,0x0a
00008F55                    	.code
                            	LM96:
00008F55 09 93 FC 00        		R1=252	// QImode move
00008F57 C8 D2              		[SP--]=R1	// QImode move
00008F58 40 F0 19 8E        		call _write_byte_12864	// call without return value
00008F5A 41 00              		SP = SP + 1	//SP
000010F3                    	.debug
000010F3 2E 00 73 00        		.dw '.stabn 0x44,0,168,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         38 00 2C 00
         00 00 00 00
00001107 19 00 00 00        		.dd LM97-_read_stat_12864
00001109 0D 00 0A 00        		.dw 0x0d,0x0a
00008F5B                    	.code
                            	LM97:
00008F5B 11 93 02 70        		R1=[28674]	// QImode move
00008F5D 09 B5 C7 FF        		R2=R1&(-57)
00008F5F 1A D5 02 70        		[28674]=R2	// QImode move
0000110B                    	.debug
0000110B 2E 00 73 00        		.dw '.stabn 0x44,0,169,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         39 00 2C 00
         00 00 00 00
0000111F 1F 00 00 00        		.dd LM98-_read_stat_12864
00001121 0D 00 0A 00        		.dw 0x0d,0x0a
00008F61                    	.code
                            	LM98:
00008F61 40 F0 67 8E        		call _read_byte_12864	// call with return value
00008F63 C5 D2              		[BP]=R1	// QImode move
00001123                    	.debug
00001123 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
00001137 22 00 00 00        		.dd LM99-_read_stat_12864
00001139 0D 00 0A 00        		.dw 0x0d,0x0a
00008F64                    	.code
                            	LM99:
00008F64 40 F0 67 8E        		call _read_byte_12864	// call with return value
00008F66 05 95              		R2=BP	// QImode move
00008F67 0D 07 01 00        		R3=BP+1
00008F69 03 95              		R2=R3	// QImode move
00008F6A C2 D2              		[R2]=R1	// QImode move
0000113B                    	.debug
0000113B 2E 00 73 00        		.dw '.stabn 0x44,0,171,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         31 00 2C 00
         00 00 00 00
0000114F 29 00 00 00        		.dd LM100-_read_stat_12864
00001151 0D 00 0A 00        		.dw 0x0d,0x0a
00008F6B                    	.code
                            	LM100:
00008F6B 05 95              		R2=BP	// QImode move
00008F6C 0D 03 01 00        		R1=BP+1
00008F6E 05 95              		R2=BP	// QImode move
00008F6F 0D 07 01 00        		R3=BP+1
00008F71 03 99              		R4=R3	// QImode move
00008F72 C4 94              		R2=[R4]	// QImode move
00008F73 7A 97              		R3=R2 lsr 4
00008F74 01 95              		R2=R1	// QImode move
00008F75 C2 D6              		[R2]=R3	// QImode move
00001153                    	.debug
00001153 2E 00 73 00        		.dw '.stabn 0x44,0,172,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         32 00 2C 00
         00 00 00 00
00001167 34 00 00 00        		.dd LM101-_read_stat_12864
00001169 0D 00 0A 00        		.dw 0x0d,0x0a
00008F76                    	.code
                            	LM101:
00008F76 05 93              		R1=BP	// QImode move
00008F77 0D 05 01 00        		R2=BP+1
00008F79 C5 98              		R4=[BP]	// QImode move
00008F7A 02 97              		R3=R2	// QImode move
00008F7B C3 96              		R3=[R3]	// QImode move
00008F7C 03 A9              		R4|=R3
00008F7D C5 D8              		[BP]=R4	// QImode move
0000116B                    	.debug
0000116B 2E 00 73 00        		.dw '.stabn 0x44,0,173,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         33 00 2C 00
         00 00 00 00
0000117F 3C 00 00 00        		.dd LM102-_read_stat_12864
00001181 0D 00 0A 00        		.dw 0x0d,0x0a
00008F7E                    	.code
                            	LM102:
00008F7E 11 93 00 70        		R1=[28672]	// QImode move
00008F80 09 B5 DF FF        		R2=R1&(-33)
00008F82 1A D5 00 70        		[28672]=R2	// QImode move
00001183                    	.debug
00001183 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
00001197 42 00 00 00        		.dd LM103-_read_stat_12864
00001199 0D 00 0A 00        		.dw 0x0d,0x0a
00008F84                    	.code
                            	LM103:
00008F84 11 93 02 70        		R1=[28674]	// QImode move
00008F86 09 A5 38 00        		R2=R1|56
00008F88 1A D5 02 70        		[28674]=R2	// QImode move
0000119B                    	.debug
0000119B 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
000011AF 48 00 00 00        		.dd LM104-_read_stat_12864
000011B1 0D 00 0A 00        		.dw 0x0d,0x0a
00008F8A                    	.code
                            	LM104:
00008F8A C5 94              		R2=[BP]	// QImode move
00008F8B 02 93              		R1=R2	// QImode move
00008F8C 0F 9F 8E 8F        		pc=L37	// Indirect jump
000011B3                    	.debug
000011B3 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
000011C7 4C 00 00 00        		.dd LM105-_read_stat_12864
000011C9 0D 00 0A 00        		.dw 0x0d,0x0a
00008F8E                    	.code
                            	LM105:
                            	LBE6:
000011CB                    	.debug
000011CB 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
000011DF 4C 00 00 00        		.dd LM106-_read_stat_12864
000011E1 0D 00 0A 00        		.dw 0x0d,0x0a
00008F8E                    	.code
                            	LM106:
                            	L37:
                            	
00008F8E 43 00              		sp+=3
00008F8F 88 98              		pop bp from [sp]
00008F90 90 9A              		retf
                            		.endp	// end of read_stat_12864
                            	
000011E3                    	.debug
000011E3 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000011F5 07 00 00 00        		.dd LBB6-_read_stat_12864
000011F7 0D 00 0A 00        		.dw 0x0d,0x0a
00008F91                    	.code
000011F9                    	.debug
000011F9 2E 00 73 00        		.dw '.stabs "da:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         3A 00 31 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008F91                    	.CODE
00001213                    	.debug
00001213 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
00008F91                    	.CODE
0000122C                    	.debug
0000122C 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000123E 4C 00 00 00        		.dd LBE6-_read_stat_12864
00001240 0D 00 0A 00        		.dw 0x0d,0x0a
00008F91                    	.code
00001242                    	.debug
00001242 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000124B 4F 00 00 00        		.dd LME9-_read_stat_12864
0000124D 0D 00 0A 00        		.dw 0x0d,0x0a
00008F91                    	.code
                            	LME9:
00008F91                    	.code
0000124F                    	.debug
0000124F 2E 00 73 00        		.dw '.stabs "read_data_12864:F11",36,0,0,',0,0,offset _read_data_12864,seg _read_data_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         61 00 64 00
         5F 00 64 00
         61 00 74 00
         61 00 5F 00
         31 00 32 00
         38 00 36 00
         34 00 3A 00
         46 00 31 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         3C 02 00 00
         0D 00 0A 00
00008F91                    	.CODE
                            	.public _read_data_12864
                            	_read_data_12864:	.proc
00001279                    	.debug
00001279 2E 00 73 00        		.dw '.stabn 0x44,0,195,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         35 00 2C 00
         00 00 00 00
0000128D 00 00 00 00        		.dd LM107-_read_data_12864
0000128F 0D 00 0A 00        		.dw 0x0d,0x0a
00008F91                    	.code
                            	LM107:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008F91 88 DA              		push bp to [sp]
00008F92 43 20              		sp-=3
00008F93 08 0B 01 00        		bp=sp+1
                            	
00008F95 0D 03 06 00        		R1=BP+6
00008F97 02 D2              		[bp+2]=R1	// QImode move
00001291                    	.debug
00001291 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
000012A5 07 00 00 00        		.dd LM108-_read_data_12864
000012A7 0D 00 0A 00        		.dw 0x0d,0x0a
00008F98                    	.code
                            	LM108:
                            	LBB7:
000012A9                    	.debug
000012A9 2E 00 73 00        		.dw '.stabn 0x44,0,198,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         38 00 2C 00
         00 00 00 00
000012BD 07 00 00 00        		.dd LM109-_read_data_12864
000012BF 0D 00 0A 00        		.dw 0x0d,0x0a
00008F98                    	.code
                            	LM109:
00008F98 09 93 64 00        		R1=100	// QImode move
00008F9A C8 D2              		[SP--]=R1	// QImode move
00008F9B 40 F0 FF 8D        		call _delay_12864	// call without return value
00008F9D 41 00              		SP = SP + 1	//SP
000012C1                    	.debug
000012C1 2E 00 73 00        		.dw '.stabn 0x44,0,199,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         39 00 2C 00
         00 00 00 00
000012D5 0D 00 00 00        		.dd LM110-_read_data_12864
000012D7 0D 00 0A 00        		.dw 0x0d,0x0a
00008F9E                    	.code
                            	LM110:
00008F9E 11 93 00 70        		R1=[28672]	// QImode move
00008FA0 09 A5 20 00        		R2=R1|32
00008FA2 1A D5 00 70        		[28672]=R2	// QImode move
000012D9                    	.debug
000012D9 2E 00 73 00        		.dw '.stabn 0x44,0,200,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         30 00 2C 00
         00 00 00 00
000012ED 13 00 00 00        		.dd LM111-_read_data_12864
000012EF 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA4                    	.code
                            	LM111:
00008FA4 09 93 FE 00        		R1=254	// QImode move
00008FA6 C8 D2              		[SP--]=R1	// QImode move
00008FA7 40 F0 19 8E        		call _write_byte_12864	// call without return value
00008FA9 41 00              		SP = SP + 1	//SP
000012F1                    	.debug
000012F1 2E 00 73 00        		.dw '.stabn 0x44,0,201,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         31 00 2C 00
         00 00 00 00
00001305 19 00 00 00        		.dd LM112-_read_data_12864
00001307 0D 00 0A 00        		.dw 0x0d,0x0a
00008FAA                    	.code
                            	LM112:
00008FAA 11 93 02 70        		R1=[28674]	// QImode move
00008FAC 09 B5 C7 FF        		R2=R1&(-57)
00008FAE 1A D5 02 70        		[28674]=R2	// QImode move
00001309                    	.debug
00001309 2E 00 73 00        		.dw '.stabn 0x44,0,202,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         32 00 2C 00
         00 00 00 00
0000131D 1F 00 00 00        		.dd LM113-_read_data_12864
0000131F 0D 00 0A 00        		.dw 0x0d,0x0a
00008FB0                    	.code
                            	LM113:
00008FB0 40 F0 67 8E        		call _read_byte_12864	// call with return value
00008FB2 C5 D2              		[BP]=R1	// QImode move
00001321                    	.debug
00001321 2E 00 73 00        		.dw '.stabn 0x44,0,203,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         33 00 2C 00
         00 00 00 00
00001335 22 00 00 00        		.dd LM114-_read_data_12864
00001337 0D 00 0A 00        		.dw 0x0d,0x0a
00008FB3                    	.code
                            	LM114:
00008FB3 40 F0 67 8E        		call _read_byte_12864	// call with return value
00008FB5 05 95              		R2=BP	// QImode move
00008FB6 0D 07 01 00        		R3=BP+1
00008FB8 03 95              		R2=R3	// QImode move
00008FB9 C2 D2              		[R2]=R1	// QImode move
00001339                    	.debug
00001339 2E 00 73 00        		.dw '.stabn 0x44,0,204,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         34 00 2C 00
         00 00 00 00
0000134D 29 00 00 00        		.dd LM115-_read_data_12864
0000134F 0D 00 0A 00        		.dw 0x0d,0x0a
00008FBA                    	.code
                            	LM115:
00008FBA 05 95              		R2=BP	// QImode move
00008FBB 0D 03 01 00        		R1=BP+1
00008FBD 05 95              		R2=BP	// QImode move
00008FBE 0D 07 01 00        		R3=BP+1
00008FC0 03 99              		R4=R3	// QImode move
00008FC1 C4 94              		R2=[R4]	// QImode move
00008FC2 7A 97              		R3=R2 lsr 4
00008FC3 01 95              		R2=R1	// QImode move
00008FC4 C2 D6              		[R2]=R3	// QImode move
00001351                    	.debug
00001351 2E 00 73 00        		.dw '.stabn 0x44,0,205,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         35 00 2C 00
         00 00 00 00
00001365 34 00 00 00        		.dd LM116-_read_data_12864
00001367 0D 00 0A 00        		.dw 0x0d,0x0a
00008FC5                    	.code
                            	LM116:
00008FC5 05 93              		R1=BP	// QImode move
00008FC6 0D 05 01 00        		R2=BP+1
00008FC8 C5 98              		R4=[BP]	// QImode move
00008FC9 02 97              		R3=R2	// QImode move
00008FCA C3 96              		R3=[R3]	// QImode move
00008FCB 03 A9              		R4|=R3
00008FCC C5 D8              		[BP]=R4	// QImode move
00001369                    	.debug
00001369 2E 00 73 00        		.dw '.stabn 0x44,0,206,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         36 00 2C 00
         00 00 00 00
0000137D 3C 00 00 00        		.dd LM117-_read_data_12864
0000137F 0D 00 0A 00        		.dw 0x0d,0x0a
00008FCD                    	.code
                            	LM117:
00008FCD 11 93 00 70        		R1=[28672]	// QImode move
00008FCF 09 B5 DF FF        		R2=R1&(-33)
00008FD1 1A D5 00 70        		[28672]=R2	// QImode move
00001381                    	.debug
00001381 2E 00 73 00        		.dw '.stabn 0x44,0,207,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         37 00 2C 00
         00 00 00 00
00001395 42 00 00 00        		.dd LM118-_read_data_12864
00001397 0D 00 0A 00        		.dw 0x0d,0x0a
00008FD3                    	.code
                            	LM118:
00008FD3 11 93 02 70        		R1=[28674]	// QImode move
00008FD5 09 A5 38 00        		R2=R1|56
00008FD7 1A D5 02 70        		[28674]=R2	// QImode move
00001399                    	.debug
00001399 2E 00 73 00        		.dw '.stabn 0x44,0,208,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         38 00 2C 00
         00 00 00 00
000013AD 48 00 00 00        		.dd LM119-_read_data_12864
000013AF 0D 00 0A 00        		.dw 0x0d,0x0a
00008FD9                    	.code
                            	LM119:
00008FD9 C5 94              		R2=[BP]	// QImode move
00008FDA 02 93              		R1=R2	// QImode move
00008FDB 0F 9F DD 8F        		pc=L38	// Indirect jump
000013B1                    	.debug
000013B1 2E 00 73 00        		.dw '.stabn 0x44,0,226,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         36 00 2C 00
         00 00 00 00
000013C5 4C 00 00 00        		.dd LM120-_read_data_12864
000013C7 0D 00 0A 00        		.dw 0x0d,0x0a
00008FDD                    	.code
                            	LM120:
                            	LBE7:
000013C9                    	.debug
000013C9 2E 00 73 00        		.dw '.stabn 0x44,0,226,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         36 00 2C 00
         00 00 00 00
000013DD 4C 00 00 00        		.dd LM121-_read_data_12864
000013DF 0D 00 0A 00        		.dw 0x0d,0x0a
00008FDD                    	.code
                            	LM121:
                            	L38:
                            	
00008FDD 43 00              		sp+=3
00008FDE 88 98              		pop bp from [sp]
00008FDF 90 9A              		retf
                            		.endp	// end of read_data_12864
                            	
000013E1                    	.debug
000013E1 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000013F3 07 00 00 00        		.dd LBB7-_read_data_12864
000013F5 0D 00 0A 00        		.dw 0x0d,0x0a
00008FE0                    	.code
000013F7                    	.debug
000013F7 2E 00 73 00        		.dw '.stabs "da:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         3A 00 31 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008FE0                    	.CODE
00001411                    	.debug
00001411 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
00008FE0                    	.CODE
0000142A                    	.debug
0000142A 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000143C 4C 00 00 00        		.dd LBE7-_read_data_12864
0000143E 0D 00 0A 00        		.dw 0x0d,0x0a
00008FE0                    	.code
00001440                    	.debug
00001440 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001449 4F 00 00 00        		.dd LME10-_read_data_12864
0000144B 0D 00 0A 00        		.dw 0x0d,0x0a
00008FE0                    	.code
                            	LME10:
00008FE0                    	.code
0000144D                    	.debug
0000144D 2E 00 73 00        		.dw '.stabs "byte_reverse:F11",36,0,0,',0,0,offset _byte_reverse,seg _byte_reverse,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         62 00 79 00
         74 00 65 00
         5F 00 72 00
         65 00 76 00
         65 00 72 00
         73 00 65 00
         3A 00 46 00
         31 00 31 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 8B 02
         00 00 0D 00
         0A 00      
00008FE0                    	.CODE
                            	.public _byte_reverse
                            	_byte_reverse:	.proc
00001474                    	.debug
00001474 2E 00 73 00        		.dw '.stabn 0x44,0,228,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         38 00 2C 00
         00 00 00 00
00001488 00 00 00 00        		.dd LM122-_byte_reverse
0000148A 0D 00 0A 00        		.dw 0x0d,0x0a
00008FE0                    	.code
                            	LM122:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008FE0 88 DA              		push bp to [sp]
00008FE1 43 20              		sp-=3
00008FE2 08 0B 01 00        		bp=sp+1
                            	
00008FE4 0D 05 06 00        		R2=BP+6
0000148C                    	.debug
0000148C 2E 00 73 00        		.dw '.stabn 0x44,0,229,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         39 00 2C 00
         00 00 00 00
000014A0 06 00 00 00        		.dd LM123-_byte_reverse
000014A2 0D 00 0A 00        		.dw 0x0d,0x0a
00008FE6                    	.code
                            	LM123:
                            	LBB8:
00008FE6 05 93              		R1=BP	// QImode move
00008FE7 0D 07 01 00        		R3=BP+1
00008FE9 40 92              		R1=0	// QImode move
00008FEA 03 99              		R4=R3	// QImode move
00008FEB C4 D2              		[R4]=R1	// QImode move
000014A4                    	.debug
000014A4 2E 00 73 00        		.dw '.stabn 0x44,0,230,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         30 00 2C 00
         00 00 00 00
000014B8 0C 00 00 00        		.dd LM124-_byte_reverse
000014BA 0D 00 0A 00        		.dw 0x0d,0x0a
00008FEC                    	.code
                            	LM124:
00008FEC 40 92              		R1=0	// QImode move
00008FED C5 D2              		[BP]=R1	// QImode move
                            	L40:
00008FEE C5 92              		R1=[BP]	// QImode move
00008FEF 47 42              		CMP R1,7	// QImode compare
00008FF0 04 8E 01 EE        		NSJNA L43	//QImode LEU
         00 EE      
00008FF3 0F 9F 24 90        		pc=L41	// Indirect jump
                            	L43:
000014BC                    	.debug
000014BC 2E 00 73 00        		.dw '.stabn 0x44,0,232,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         32 00 2C 00
         00 00 00 00
000014D0 15 00 00 00        		.dd LM125-_byte_reverse
000014D2 0D 00 0A 00        		.dw 0x0d,0x0a
00008FF5                    	.code
                            	LM125:
00008FF5 05 97              		R3=BP	// QImode move
00008FF6 0D 03 01 00        		R1=BP+1
00008FF8 05 97              		R3=BP	// QImode move
00008FF9 0D 07 01 00        		R3=BP+1
00008FFB 02 D6              		[bp+2]=R3	// QImode move
00008FFC 02 98              		R4=[bp+2]	// QImode move
00008FFD C4 96              		R3=[R4]	// QImode move
00008FFE 43 99              		R4=R3 lsl 1
00008FFF 01 97              		R3=R1	// QImode move
00009000 C3 D8              		[R3]=R4	// QImode move
000014D4                    	.debug
000014D4 2E 00 73 00        		.dw '.stabn 0x44,0,233,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         33 00 2C 00
         00 00 00 00
000014E8 21 00 00 00        		.dd LM126-_byte_reverse
000014EA 0D 00 0A 00        		.dw 0x0d,0x0a
00009001                    	.code
                            	LM126:
00009001 02 99              		R4=R2	// QImode move
00009002 C4 98              		R4=[R4]	// QImode move
00009003 0C B3 01 00        		R1=R4&1
00009005 40 42              		CMP R1,0	// QImode test
00009006 0F 5E 01 EE        		NSJZ L44	//QImode EQ
         00 EE      
000014EC                    	.debug
000014EC 2E 00 73 00        		.dw '.stabn 0x44,0,235,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         35 00 2C 00
         00 00 00 00
00001500 29 00 00 00        		.dd LM127-_byte_reverse
00001502 0D 00 0A 00        		.dw 0x0d,0x0a
00009009                    	.code
                            	LM127:
00009009 05 97              		R3=BP	// QImode move
0000900A 0D 03 01 00        		R1=BP+1
0000900C 05 97              		R3=BP	// QImode move
0000900D 0D 07 01 00        		R3=BP+1
0000900F 02 D6              		[bp+2]=R3	// QImode move
00009010 02 98              		R4=[bp+2]	// QImode move
00009011 C4 98              		R4=[R4]	// QImode move
00009012 0C A7 01 00        		R3=R4|1
00009014 01 99              		R4=R1	// QImode move
00009015 C4 D6              		[R4]=R3	// QImode move
                            	L44:
00001504                    	.debug
00001504 2E 00 73 00        		.dw '.stabn 0x44,0,237,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         37 00 2C 00
         00 00 00 00
00001518 36 00 00 00        		.dd LM128-_byte_reverse
0000151A 0D 00 0A 00        		.dw 0x0d,0x0a
00009016                    	.code
                            	LM128:
00009016 02 97              		R3=R2	// QImode move
00009017 C3 92              		R1=[R3]	// QImode move
00009018 61 97              		R3=R1 lsr 1
00009019 02 99              		R4=R2	// QImode move
0000901A C4 D6              		[R4]=R3	// QImode move
0000151C                    	.debug
0000151C 2E 00 73 00        		.dw '.stabn 0x44,0,238,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         38 00 2C 00
         00 00 00 00
00001530 3B 00 00 00        		.dd LM129-_byte_reverse
00001532 0D 00 0A 00        		.dw 0x0d,0x0a
0000901B                    	.code
                            	LM129:
0000901B 41 92              		R1=1	// QImode move
0000901C 19 D3 12 70        		[28690]=R1	// QImode move
00001534                    	.debug
00001534 2E 00 73 00        		.dw '.stabn 0x44,0,230,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         30 00 2C 00
         00 00 00 00
00001548 3E 00 00 00        		.dd LM130-_byte_reverse
0000154A 0D 00 0A 00        		.dw 0x0d,0x0a
0000901E                    	.code
                            	LM130:
                            	L42:
0000901E C5 92              		R1=[BP]	// QImode move
0000901F 09 07 01 00        		R3=R1+1
00009021 C5 D6              		[BP]=R3	// QImode move
00009022 0F 9F EE 8F        		pc=L40	// Indirect jump
                            	L41:
0000154C                    	.debug
0000154C 2E 00 73 00        		.dw '.stabn 0x44,0,240,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         30 00 2C 00
         00 00 00 00
00001560 44 00 00 00        		.dd LM131-_byte_reverse
00001562 0D 00 0A 00        		.dw 0x0d,0x0a
00009024                    	.code
                            	LM131:
00009024 05 93              		R1=BP	// QImode move
00009025 0D 07 01 00        		R3=BP+1
00009027 03 93              		R1=R3	// QImode move
00009028 C1 98              		R4=[R1]	// QImode move
00009029 04 93              		R1=R4	// QImode move
0000902A 0F 9F 2C 90        		pc=L39	// Indirect jump
00001564                    	.debug
00001564 2E 00 73 00        		.dw '.stabn 0x44,0,241,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         31 00 2C 00
         00 00 00 00
00001578 4C 00 00 00        		.dd LM132-_byte_reverse
0000157A 0D 00 0A 00        		.dw 0x0d,0x0a
0000902C                    	.code
                            	LM132:
                            	LBE8:
0000157C                    	.debug
0000157C 2E 00 73 00        		.dw '.stabn 0x44,0,241,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         31 00 2C 00
         00 00 00 00
00001590 4C 00 00 00        		.dd LM133-_byte_reverse
00001592 0D 00 0A 00        		.dw 0x0d,0x0a
0000902C                    	.code
                            	LM133:
                            	L39:
                            	
0000902C 43 00              		sp+=3
0000902D 88 98              		pop bp from [sp]
0000902E 90 9A              		retf
                            		.endp	// end of byte_reverse
                            	
00001594                    	.debug
00001594 2E 00 73 00        		.dw '.stabs "d:p11",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 3A 00
         70 00 31 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
0000902F                    	.CODE
000015AE                    	.debug
000015AE 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000015C0 06 00 00 00        		.dd LBB8-_byte_reverse
000015C2 0D 00 0A 00        		.dw 0x0d,0x0a
0000902F                    	.code
000015C4                    	.debug
000015C4 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000902F                    	.CODE
000015DD                    	.debug
000015DD 2E 00 73 00        		.dw '.stabs "t:11",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
0000902F                    	.CODE
000015F6                    	.debug
000015F6 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001608 4C 00 00 00        		.dd LBE8-_byte_reverse
0000160A 0D 00 0A 00        		.dw 0x0d,0x0a
0000902F                    	.code
0000160C                    	.debug
0000160C 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001615 4F 00 00 00        		.dd LME11-_byte_reverse
00001617 0D 00 0A 00        		.dw 0x0d,0x0a
0000902F                    	.code
                            	LME11:
0000902F                    	.code
00001619                    	.debug
00001619 2E 00 73 00        		.dw '.stabs "graph_clear:F19",36,0,0,',0,0,offset _graph_clear,seg _graph_clear,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 72 00
         61 00 70 00
         68 00 5F 00
         63 00 6C 00
         65 00 61 00
         72 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         DA 02 00 00
         0D 00 0A 00
0000902F                    	.CODE
                            	.public _graph_clear
                            	_graph_clear:	.proc
0000163F                    	.debug
0000163F 2E 00 73 00        		.dw '.stabn 0x44,0,243,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         33 00 2C 00
         00 00 00 00
00001653 00 00 00 00        		.dd LM134-_graph_clear
00001655 0D 00 0A 00        		.dw 0x0d,0x0a
0000902F                    	.code
                            	LM134:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
0000902F 88 DA              		push bp to [sp]
00009030 43 20              		sp-=3
00009031 08 0B 01 00        		bp=sp+1
                            	
00009033 0D 03 06 00        		R1=BP+6
00009035 02 D2              		[bp+2]=R1	// QImode move
00001657                    	.debug
00001657 2E 00 73 00        		.dw '.stabn 0x44,0,244,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         34 00 2C 00
         00 00 00 00
0000166B 07 00 00 00        		.dd LM135-_graph_clear
0000166D 0D 00 0A 00        		.dw 0x0d,0x0a
00009036                    	.code
                            	LM135:
                            	LBB9:
0000166F                    	.debug
0000166F 2E 00 73 00        		.dw '.stabn 0x44,0,245,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         35 00 2C 00
         00 00 00 00
00001683 07 00 00 00        		.dd LM136-_graph_clear
00001685 0D 00 0A 00        		.dw 0x0d,0x0a
00009036                    	.code
                            	LM136:
00009036 40 F0 55 8D        		call _init_12864	// call without return value
00001687                    	.debug
00001687 2E 00 73 00        		.dw '.stabn 0x44,0,246,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         36 00 2C 00
         00 00 00 00
0000169B 09 00 00 00        		.dd LM137-_graph_clear
0000169D 0D 00 0A 00        		.dw 0x0d,0x0a
00009038                    	.code
                            	LM137:
00009038 05 93              		R1=BP	// QImode move
00009039 0D 05 01 00        		R2=BP+1
0000903B 40 92              		R1=0	// QImode move
0000903C 02 97              		R3=R2	// QImode move
0000903D C3 D2              		[R3]=R1	// QImode move
                            	L48:
0000903E 05 93              		R1=BP	// QImode move
0000903F 0D 05 01 00        		R2=BP+1
00009041 02 99              		R4=R2	// QImode move
00009042 C4 92              		R1=[R4]	// QImode move
00009043 5F 42              		CMP R1,31	// QImode compare
00009044 04 8E 01 EE        		NSJNA L51	//QImode LEU
         00 EE      
00009047 0F 9F AC 90        		pc=L49	// Indirect jump
                            	L51:
0000169F                    	.debug
0000169F 2E 00 73 00        		.dw '.stabn 0x44,0,248,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         38 00 2C 00
         00 00 00 00
000016B3 1A 00 00 00        		.dd LM138-_graph_clear
000016B5 0D 00 0A 00        		.dw 0x0d,0x0a
00009049                    	.code
                            	LM138:
00009049 74 92              		R1=52	// QImode move
0000904A C8 D2              		[SP--]=R1	// QImode move
0000904B 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
0000904D 41 00              		SP = SP + 1	//SP
000016B7                    	.debug
000016B7 2E 00 73 00        		.dw '.stabn 0x44,0,249,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         39 00 2C 00
         00 00 00 00
000016CB 1F 00 00 00        		.dd LM139-_graph_clear
000016CD 0D 00 0A 00        		.dw 0x0d,0x0a
0000904E                    	.code
                            	LM139:
0000904E 4A 92              		R1=10	// QImode move
0000904F C8 D2              		[SP--]=R1	// QImode move
00009050 40 F0 FF 8D        		call _delay_12864	// call without return value
00009052 41 00              		SP = SP + 1	//SP
000016CF                    	.debug
000016CF 2E 00 73 00        		.dw '.stabn 0x44,0,250,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         30 00 2C 00
         00 00 00 00
000016E3 24 00 00 00        		.dd LM140-_graph_clear
000016E5 0D 00 0A 00        		.dw 0x0d,0x0a
00009053                    	.code
                            	LM140:
00009053 42 92              		R1=2	// QImode move
00009054 C8 D2              		[SP--]=R1	// QImode move
00009055 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00009057 41 00              		SP = SP + 1	//SP
000016E7                    	.debug
000016E7 2E 00 73 00        		.dw '.stabn 0x44,0,251,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         31 00 2C 00
         00 00 00 00
000016FB 29 00 00 00        		.dd LM141-_graph_clear
000016FD 0D 00 0A 00        		.dw 0x0d,0x0a
00009058                    	.code
                            	LM141:
00009058 4A 92              		R1=10	// QImode move
00009059 C8 D2              		[SP--]=R1	// QImode move
0000905A 40 F0 FF 8D        		call _delay_12864	// call without return value
0000905C 41 00              		SP = SP + 1	//SP
000016FF                    	.debug
000016FF 2E 00 73 00        		.dw '.stabn 0x44,0,252,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         32 00 2C 00
         00 00 00 00
00001713 2E 00 00 00        		.dd LM142-_graph_clear
00001715 0D 00 0A 00        		.dw 0x0d,0x0a
0000905D                    	.code
                            	LM142:
0000905D 05 93              		R1=BP	// QImode move
0000905E 0D 05 01 00        		R2=BP+1
00009060 02 93              		R1=R2	// QImode move
00009061 C1 96              		R3=[R1]	// QImode move
00009062 0B 03 80 00        		R1=R3+128
00009064 C8 D2              		[SP--]=R1	// QImode move
00009065 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00009067 41 00              		SP = SP + 1	//SP
00001717                    	.debug
00001717 2E 00 73 00        		.dw '.stabn 0x44,0,253,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         33 00 2C 00
         00 00 00 00
0000172B 39 00 00 00        		.dd LM143-_graph_clear
0000172D 0D 00 0A 00        		.dw 0x0d,0x0a
00009068                    	.code
                            	LM143:
00009068 4A 92              		R1=10	// QImode move
00009069 C8 D2              		[SP--]=R1	// QImode move
0000906A 40 F0 FF 8D        		call _delay_12864	// call without return value
0000906C 41 00              		SP = SP + 1	//SP
0000172F                    	.debug
0000172F 2E 00 73 00        		.dw '.stabn 0x44,0,254,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         34 00 2C 00
         00 00 00 00
00001743 3E 00 00 00        		.dd LM144-_graph_clear
00001745 0D 00 0A 00        		.dw 0x0d,0x0a
0000906D                    	.code
                            	LM144:
0000906D 09 93 80 00        		R1=128	// QImode move
0000906F C8 D2              		[SP--]=R1	// QImode move
00009070 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00009072 41 00              		SP = SP + 1	//SP
00001747                    	.debug
00001747 2E 00 73 00        		.dw '.stabn 0x44,0,255,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         35 00 2C 00
         00 00 00 00
0000175B 44 00 00 00        		.dd LM145-_graph_clear
0000175D 0D 00 0A 00        		.dw 0x0d,0x0a
00009073                    	.code
                            	LM145:
00009073 4A 92              		R1=10	// QImode move
00009074 C8 D2              		[SP--]=R1	// QImode move
00009075 40 F0 FF 8D        		call _delay_12864	// call without return value
00009077 41 00              		SP = SP + 1	//SP
0000175F                    	.debug
0000175F 2E 00 73 00        		.dw '.stabn 0x44,0,256,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         36 00 2C 00
         00 00 00 00
00001773 49 00 00 00        		.dd LM146-_graph_clear
00001775 0D 00 0A 00        		.dw 0x0d,0x0a
00009078                    	.code
                            	LM146:
00009078 40 92              		R1=0	// QImode move
00009079 C5 D2              		[BP]=R1	// QImode move
                            	L52:
0000907A C5 92              		R1=[BP]	// QImode move
0000907B 5F 42              		CMP R1,31	// QImode compare
0000907C 04 8E 01 EE        		NSJNA L55	//QImode LEU
         00 EE      
0000907F 0F 9F 8C 90        		pc=L53	// Indirect jump
                            	L55:
00001777                    	.debug
00001777 2E 00 73 00        		.dw '.stabn 0x44,0,258,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         38 00 2C 00
         00 00 00 00
0000178B 52 00 00 00        		.dd LM147-_graph_clear
0000178D 0D 00 0A 00        		.dw 0x0d,0x0a
00009081                    	.code
                            	LM147:
00009081 40 92              		R1=0	// QImode move
00009082 C8 D2              		[SP--]=R1	// QImode move
00009083 40 F0 EF 8E        		call _write_data_12864	// call without return value
00009085 41 00              		SP = SP + 1	//SP
0000178F                    	.debug
0000178F 2E 00 73 00        		.dw '.stabn 0x44,0,256,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         36 00 2C 00
         00 00 00 00
000017A3 57 00 00 00        		.dd LM148-_graph_clear
000017A5 0D 00 0A 00        		.dw 0x0d,0x0a
00009086                    	.code
                            	LM148:
                            	L54:
00009086 C5 92              		R1=[BP]	// QImode move
00009087 09 05 01 00        		R2=R1+1
00009089 C5 D4              		[BP]=R2	// QImode move
0000908A 0F 9F 7A 90        		pc=L52	// Indirect jump
                            	L53:
000017A7                    	.debug
000017A7 2E 00 73 00        		.dw '.stabn 0x44,0,260,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         30 00 2C 00
         00 00 00 00
000017BB 5D 00 00 00        		.dd LM149-_graph_clear
000017BD 0D 00 0A 00        		.dw 0x0d,0x0a
0000908C                    	.code
                            	LM149:
0000908C 4A 92              		R1=10	// QImode move
0000908D C8 D2              		[SP--]=R1	// QImode move
0000908E 40 F0 FF 8D        		call _delay_12864	// call without return value
00009090 41 00              		SP = SP + 1	//SP
000017BF                    	.debug
000017BF 2E 00 73 00        		.dw '.stabn 0x44,0,261,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         31 00 2C 00
         00 00 00 00
000017D3 62 00 00 00        		.dd LM150-_graph_clear
000017D5 0D 00 0A 00        		.dw 0x0d,0x0a
00009091                    	.code
                            	LM150:
00009091 76 92              		R1=54	// QImode move
00009092 C8 D2              		[SP--]=R1	// QImode move
00009093 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00009095 41 00              		SP = SP + 1	//SP
000017D7                    	.debug
000017D7 2E 00 73 00        		.dw '.stabn 0x44,0,262,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         32 00 2C 00
         00 00 00 00
000017EB 67 00 00 00        		.dd LM151-_graph_clear
000017ED 0D 00 0A 00        		.dw 0x0d,0x0a
00009096                    	.code
                            	LM151:
00009096 4A 92              		R1=10	// QImode move
00009097 C8 D2              		[SP--]=R1	// QImode move
00009098 40 F0 FF 8D        		call _delay_12864	// call without return value
0000909A 41 00              		SP = SP + 1	//SP
000017EF                    	.debug
000017EF 2E 00 73 00        		.dw '.stabn 0x44,0,246,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         36 00 2C 00
         00 00 00 00
00001803 6C 00 00 00        		.dd LM152-_graph_clear
00001805 0D 00 0A 00        		.dw 0x0d,0x0a
0000909B                    	.code
                            	LM152:
                            	L50:
0000909B 05 93              		R1=BP	// QImode move
0000909C 0D 05 01 00        		R2=BP+1
0000909E 05 97              		R3=BP	// QImode move
0000909F 0D 03 01 00        		R1=BP+1
000090A1 05 95              		R2=BP	// QImode move
000090A2 0D 07 01 00        		R3=BP+1
000090A4 03 99              		R4=R3	// QImode move
000090A5 C4 94              		R2=[R4]	// QImode move
000090A6 0A 07 01 00        		R3=R2+1
000090A8 01 95              		R2=R1	// QImode move
000090A9 C2 D6              		[R2]=R3	// QImode move
000090AA 0F 9F 3E 90        		pc=L48	// Indirect jump
                            	L49:
00001807                    	.debug
00001807 2E 00 73 00        		.dw '.stabn 0x44,0,265,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         35 00 2C 00
         00 00 00 00
0000181B 7D 00 00 00        		.dd LM153-_graph_clear
0000181D 0D 00 0A 00        		.dw 0x0d,0x0a
000090AC                    	.code
                            	LM153:
                            	LBE9:
0000181F                    	.debug
0000181F 2E 00 73 00        		.dw '.stabn 0x44,0,265,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         35 00 2C 00
         00 00 00 00
00001833 7D 00 00 00        		.dd LM154-_graph_clear
00001835 0D 00 0A 00        		.dw 0x0d,0x0a
000090AC                    	.code
                            	LM154:
                            	L47:
                            	
000090AC 43 00              		sp+=3
000090AD 88 98              		pop bp from [sp]
000090AE 90 9A              		retf
                            		.endp	// end of graph_clear
                            	
00001837                    	.debug
00001837 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001849 07 00 00 00        		.dd LBB9-_graph_clear
0000184B 0D 00 0A 00        		.dw 0x0d,0x0a
000090AF                    	.code
0000184D                    	.debug
0000184D 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000090AF                    	.CODE
00001866                    	.debug
00001866 2E 00 73 00        		.dw '.stabs "j:11",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
000090AF                    	.CODE
0000187F                    	.debug
0000187F 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001891 7D 00 00 00        		.dd LBE9-_graph_clear
00001893 0D 00 0A 00        		.dw 0x0d,0x0a
000090AF                    	.code
00001895                    	.debug
00001895 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000189E 80 00 00 00        		.dd LME12-_graph_clear
000018A0 0D 00 0A 00        		.dw 0x0d,0x0a
000090AF                    	.code
                            	LME12:
000090AF                    	.code
000018A2                    	.debug
000018A2 2E 00 73 00        		.dw '.stabs "graph:F19",36,0,0,',0,0,offset _graph,seg _graph,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 72 00
         61 00 70 00
         68 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         5A 03 00 00
         0D 00 0A 00
000090AF                    	.CODE
                            	.public _graph
                            	_graph:	.proc
000018C2                    	.debug
000018C2 2E 00 73 00        		.dw '.stabn 0x44,0,268,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         38 00 2C 00
         00 00 00 00
000018D6 00 00 00 00        		.dd LM155-_graph
000018D8 0D 00 0A 00        		.dw 0x0d,0x0a
000090AF                    	.code
                            	LM155:
                            		// total=4, vars=4
                            		// frame_pointer_needed: 1
000090AF 88 DA              		push bp to [sp]
000090B0 44 20              		sp-=4
000090B1 08 0B 01 00        		bp=sp+1
                            	
000090B3 0D 03 07 00        		R1=BP+7
000090B5 02 D2              		[bp+2]=R1	// QImode move
000018DA                    	.debug
000018DA 2E 00 73 00        		.dw '.stabn 0x44,0,269,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         39 00 2C 00
         00 00 00 00
000018EE 07 00 00 00        		.dd LM156-_graph
000018F0 0D 00 0A 00        		.dw 0x0d,0x0a
000090B6                    	.code
                            	LM156:
                            	LBB10:
000018F2                    	.debug
000018F2 2E 00 73 00        		.dw '.stabn 0x44,0,270,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         30 00 2C 00
         00 00 00 00
00001906 07 00 00 00        		.dd LM157-_graph
00001908 0D 00 0A 00        		.dw 0x0d,0x0a
000090B6                    	.code
                            	LM157:
000090B6 05 93              		R1=BP	// QImode move
000090B7 0D 05 01 00        		R2=BP+1
000090B9 40 92              		R1=0	// QImode move
000090BA 02 97              		R3=R2	// QImode move
000090BB C3 D2              		[R3]=R1	// QImode move
                            	L59:
000090BC 05 93              		R1=BP	// QImode move
000090BD 0D 05 01 00        		R2=BP+1
000090BF 02 99              		R4=R2	// QImode move
000090C0 C4 92              		R1=[R4]	// QImode move
000090C1 5F 42              		CMP R1,31	// QImode compare
000090C2 04 8E 01 EE        		NSJNA L62	//QImode LEU
         00 EE      
000090C5 0F 9F A9 91        		pc=L60	// Indirect jump
                            	L62:
0000190A                    	.debug
0000190A 2E 00 73 00        		.dw '.stabn 0x44,0,272,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         32 00 2C 00
         00 00 00 00
0000191E 18 00 00 00        		.dd LM158-_graph
00001920 0D 00 0A 00        		.dw 0x0d,0x0a
000090C7                    	.code
                            	LM158:
000090C7 74 92              		R1=52	// QImode move
000090C8 C8 D2              		[SP--]=R1	// QImode move
000090C9 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
000090CB 41 00              		SP = SP + 1	//SP
00001922                    	.debug
00001922 2E 00 73 00        		.dw '.stabn 0x44,0,273,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         33 00 2C 00
         00 00 00 00
00001936 1D 00 00 00        		.dd LM159-_graph
00001938 0D 00 0A 00        		.dw 0x0d,0x0a
000090CC                    	.code
                            	LM159:
000090CC 4A 92              		R1=10	// QImode move
000090CD C8 D2              		[SP--]=R1	// QImode move
000090CE 40 F0 FF 8D        		call _delay_12864	// call without return value
000090D0 41 00              		SP = SP + 1	//SP
0000193A                    	.debug
0000193A 2E 00 73 00        		.dw '.stabn 0x44,0,274,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         34 00 2C 00
         00 00 00 00
0000194E 22 00 00 00        		.dd LM160-_graph
00001950 0D 00 0A 00        		.dw 0x0d,0x0a
000090D1                    	.code
                            	LM160:
000090D1 42 92              		R1=2	// QImode move
000090D2 C8 D2              		[SP--]=R1	// QImode move
000090D3 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
000090D5 41 00              		SP = SP + 1	//SP
00001952                    	.debug
00001952 2E 00 73 00        		.dw '.stabn 0x44,0,275,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         35 00 2C 00
         00 00 00 00
00001966 27 00 00 00        		.dd LM161-_graph
00001968 0D 00 0A 00        		.dw 0x0d,0x0a
000090D6                    	.code
                            	LM161:
000090D6 4A 92              		R1=10	// QImode move
000090D7 C8 D2              		[SP--]=R1	// QImode move
000090D8 40 F0 FF 8D        		call _delay_12864	// call without return value
000090DA 41 00              		SP = SP + 1	//SP
0000196A                    	.debug
0000196A 2E 00 73 00        		.dw '.stabn 0x44,0,276,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         36 00 2C 00
         00 00 00 00
0000197E 2C 00 00 00        		.dd LM162-_graph
00001980 0D 00 0A 00        		.dw 0x0d,0x0a
000090DB                    	.code
                            	LM162:
000090DB 05 93              		R1=BP	// QImode move
000090DC 0D 05 01 00        		R2=BP+1
000090DE 02 93              		R1=R2	// QImode move
000090DF C1 96              		R3=[R1]	// QImode move
000090E0 0B 03 80 00        		R1=R3+128
000090E2 C8 D2              		[SP--]=R1	// QImode move
000090E3 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
000090E5 41 00              		SP = SP + 1	//SP
00001982                    	.debug
00001982 2E 00 73 00        		.dw '.stabn 0x44,0,277,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         37 00 2C 00
         00 00 00 00
00001996 37 00 00 00        		.dd LM163-_graph
00001998 0D 00 0A 00        		.dw 0x0d,0x0a
000090E6                    	.code
                            	LM163:
000090E6 4A 92              		R1=10	// QImode move
000090E7 C8 D2              		[SP--]=R1	// QImode move
000090E8 40 F0 FF 8D        		call _delay_12864	// call without return value
000090EA 41 00              		SP = SP + 1	//SP
0000199A                    	.debug
0000199A 2E 00 73 00        		.dw '.stabn 0x44,0,278,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         38 00 2C 00
         00 00 00 00
000019AE 3C 00 00 00        		.dd LM164-_graph
000019B0 0D 00 0A 00        		.dw 0x0d,0x0a
000090EB                    	.code
                            	LM164:
000090EB 09 93 80 00        		R1=128	// QImode move
000090ED C8 D2              		[SP--]=R1	// QImode move
000090EE 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
000090F0 41 00              		SP = SP + 1	//SP
000019B2                    	.debug
000019B2 2E 00 73 00        		.dw '.stabn 0x44,0,279,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         39 00 2C 00
         00 00 00 00
000019C6 42 00 00 00        		.dd LM165-_graph
000019C8 0D 00 0A 00        		.dw 0x0d,0x0a
000090F1                    	.code
                            	LM165:
000090F1 4A 92              		R1=10	// QImode move
000090F2 C8 D2              		[SP--]=R1	// QImode move
000090F3 40 F0 FF 8D        		call _delay_12864	// call without return value
000090F5 41 00              		SP = SP + 1	//SP
000019CA                    	.debug
000019CA 2E 00 73 00        		.dw '.stabn 0x44,0,280,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         30 00 2C 00
         00 00 00 00
000019DE 47 00 00 00        		.dd LM166-_graph
000019E0 0D 00 0A 00        		.dw 0x0d,0x0a
000090F6                    	.code
                            	LM166:
000090F6 40 92              		R1=0	// QImode move
000090F7 C5 D2              		[BP]=R1	// QImode move
                            	L63:
000090F8 C5 92              		R1=[BP]	// QImode move
000090F9 47 42              		CMP R1,7	// QImode compare
000090FA 04 8E 01 EE        		NSJNA L66	//QImode LEU
         00 EE      
000090FD 0F 9F 41 91        		pc=L64	// Indirect jump
                            	L66:
000019E2                    	.debug
000019E2 2E 00 73 00        		.dw '.stabn 0x44,0,282,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         32 00 2C 00
         00 00 00 00
000019F6 50 00 00 00        		.dd LM167-_graph
000019F8 0D 00 0A 00        		.dw 0x0d,0x0a
000090FF                    	.code
                            	LM167:
000090FF 05 93              		R1=BP	// QImode move
00009100 0D 05 01 00        		R2=BP+1
00009102 02 97              		R3=R2	// QImode move
00009103 C3 92              		R1=[R3]	// QImode move
00009104 C5 94              		R2=[BP]	// QImode move
00009105 02 97              		R3=R2	// QImode move
00009106 43 95              		R2=R3 lsl 1
00009107 50 98              		R4=16	// QImode move
00009108 03 D8              		[bp+3]=R4	// QImode move
00009109 03 98              		R4=[bp+3]	// QImode move
0000910A 0C F3              		mr=R1*R4	// r3=R1*R4 16bit=16bit*16bit
0000910B 02 93              		R1=R2	// QImode move
0000910C 03 03              		R1 = R1 + R3	//addqi3
0000910D 01 95              		R2=R1	// QImode move
0000910E 02 92              		R1=[bp+2]	// QImode move
0000910F C1 04              		R2 = R2 + [R1]	//addqi3
00009110 02 97              		R3=R2	// QImode move
00009111 C3 92              		R1=[R3]	// QImode move
00009112 C8 D2              		[SP--]=R1	// QImode move
00009113 40 F0 EF 8E        		call _write_data_12864	// call without return value
00009115 41 00              		SP = SP + 1	//SP
000019FA                    	.debug
000019FA 2E 00 73 00        		.dw '.stabn 0x44,0,283,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         33 00 2C 00
         00 00 00 00
00001A0E 67 00 00 00        		.dd LM168-_graph
00001A10 0D 00 0A 00        		.dw 0x0d,0x0a
00009116                    	.code
                            	LM168:
00009116 09 93 64 00        		R1=100	// QImode move
00009118 C8 D2              		[SP--]=R1	// QImode move
00009119 40 F0 FF 8D        		call _delay_12864	// call without return value
0000911B 41 00              		SP = SP + 1	//SP
00001A12                    	.debug
00001A12 2E 00 73 00        		.dw '.stabn 0x44,0,284,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         34 00 2C 00
         00 00 00 00
00001A26 6D 00 00 00        		.dd LM169-_graph
00001A28 0D 00 0A 00        		.dw 0x0d,0x0a
0000911C                    	.code
                            	LM169:
0000911C 05 93              		R1=BP	// QImode move
0000911D 0D 05 01 00        		R2=BP+1
0000911F 02 99              		R4=R2	// QImode move
00009120 C4 92              		R1=[R4]	// QImode move
00009121 C5 94              		R2=[BP]	// QImode move
00009122 02 97              		R3=R2	// QImode move
00009123 43 95              		R2=R3 lsl 1
00009124 50 96              		R3=16	// QImode move
00009125 03 D6              		[bp+3]=R3	// QImode move
00009126 03 98              		R4=[bp+3]	// QImode move
00009127 0C F3              		mr=R1*R4	// r3=R1*R4 16bit=16bit*16bit
00009128 02 93              		R1=R2	// QImode move
00009129 03 03              		R1 = R1 + R3	//addqi3
0000912A 01 95              		R2=R1	// QImode move
0000912B 02 92              		R1=[bp+2]	// QImode move
0000912C C1 04              		R2 = R2 + [R1]	//addqi3
0000912D 0A 03 01 00        		R1=R2+1
0000912F 01 97              		R3=R1	// QImode move
00009130 C3 94              		R2=[R3]	// QImode move
00009131 C8 D4              		[SP--]=R2	// QImode move
00009132 40 F0 EF 8E        		call _write_data_12864	// call without return value
00009134 41 00              		SP = SP + 1	//SP
00001A2A                    	.debug
00001A2A 2E 00 73 00        		.dw '.stabn 0x44,0,285,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         35 00 2C 00
         00 00 00 00
00001A3E 86 00 00 00        		.dd LM170-_graph
00001A40 0D 00 0A 00        		.dw 0x0d,0x0a
00009135                    	.code
                            	LM170:
00009135 09 93 64 00        		R1=100	// QImode move
00009137 C8 D2              		[SP--]=R1	// QImode move
00009138 40 F0 FF 8D        		call _delay_12864	// call without return value
0000913A 41 00              		SP = SP + 1	//SP
00001A42                    	.debug
00001A42 2E 00 73 00        		.dw '.stabn 0x44,0,280,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         30 00 2C 00
         00 00 00 00
00001A56 8C 00 00 00        		.dd LM171-_graph
00001A58 0D 00 0A 00        		.dw 0x0d,0x0a
0000913B                    	.code
                            	LM171:
                            	L65:
0000913B C5 92              		R1=[BP]	// QImode move
0000913C 09 05 01 00        		R2=R1+1
0000913E C5 D4              		[BP]=R2	// QImode move
0000913F 0F 9F F8 90        		pc=L63	// Indirect jump
                            	L64:
00001A5A                    	.debug
00001A5A 2E 00 73 00        		.dw '.stabn 0x44,0,287,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         37 00 2C 00
         00 00 00 00
00001A6E 92 00 00 00        		.dd LM172-_graph
00001A70 0D 00 0A 00        		.dw 0x0d,0x0a
00009141                    	.code
                            	LM172:
00009141 40 92              		R1=0	// QImode move
00009142 C5 D2              		[BP]=R1	// QImode move
                            	L67:
00009143 C5 92              		R1=[BP]	// QImode move
00009144 47 42              		CMP R1,7	// QImode compare
00009145 04 8E 01 EE        		NSJNA L70	//QImode LEU
         00 EE      
00009148 0F 9F 8E 91        		pc=L68	// Indirect jump
                            	L70:
00001A72                    	.debug
00001A72 2E 00 73 00        		.dw '.stabn 0x44,0,289,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         39 00 2C 00
         00 00 00 00
00001A86 9B 00 00 00        		.dd LM173-_graph
00001A88 0D 00 0A 00        		.dw 0x0d,0x0a
0000914A                    	.code
                            	LM173:
0000914A 05 93              		R1=BP	// QImode move
0000914B 0D 05 01 00        		R2=BP+1
0000914D 02 99              		R4=R2	// QImode move
0000914E C4 92              		R1=[R4]	// QImode move
0000914F C5 94              		R2=[BP]	// QImode move
00009150 50 96              		R3=16	// QImode move
00009151 03 D6              		[bp+3]=R3	// QImode move
00009152 03 98              		R4=[bp+3]	// QImode move
00009153 0C F3              		mr=R1*R4	// r3=R1*R4 16bit=16bit*16bit
00009154 02 93              		R1=R2	// QImode move
00009155 41 95              		R2=R1 lsl 1
00009156 03 93              		R1=R3	// QImode move
00009157 02 03              		R1 = R1 + R2	//addqi3
00009158 01 95              		R2=R1	// QImode move
00009159 02 92              		R1=[bp+2]	// QImode move
0000915A C1 04              		R2 = R2 + [R1]	//addqi3
0000915B 0A 03 00 02        		R1=R2+512
0000915D 01 97              		R3=R1	// QImode move
0000915E C3 94              		R2=[R3]	// QImode move
0000915F C8 D4              		[SP--]=R2	// QImode move
00009160 40 F0 EF 8E        		call _write_data_12864	// call without return value
00009162 41 00              		SP = SP + 1	//SP
00001A8A                    	.debug
00001A8A 2E 00 73 00        		.dw '.stabn 0x44,0,290,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         30 00 2C 00
         00 00 00 00
00001A9E B4 00 00 00        		.dd LM174-_graph
00001AA0 0D 00 0A 00        		.dw 0x0d,0x0a
00009163                    	.code
                            	LM174:
00009163 09 93 64 00        		R1=100	// QImode move
00009165 C8 D2              		[SP--]=R1	// QImode move
00009166 40 F0 FF 8D        		call _delay_12864	// call without return value
00009168 41 00              		SP = SP + 1	//SP
00001AA2                    	.debug
00001AA2 2E 00 73 00        		.dw '.stabn 0x44,0,291,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         31 00 2C 00
         00 00 00 00
00001AB6 BA 00 00 00        		.dd LM175-_graph
00001AB8 0D 00 0A 00        		.dw 0x0d,0x0a
00009169                    	.code
                            	LM175:
00009169 05 93              		R1=BP	// QImode move
0000916A 0D 05 01 00        		R2=BP+1
0000916C 02 99              		R4=R2	// QImode move
0000916D C4 92              		R1=[R4]	// QImode move
0000916E C5 94              		R2=[BP]	// QImode move
0000916F 50 96              		R3=16	// QImode move
00009170 03 D6              		[bp+3]=R3	// QImode move
00009171 03 98              		R4=[bp+3]	// QImode move
00009172 0C F3              		mr=R1*R4	// r3=R1*R4 16bit=16bit*16bit
00009173 02 93              		R1=R2	// QImode move
00009174 41 95              		R2=R1 lsl 1
00009175 03 93              		R1=R3	// QImode move
00009176 02 03              		R1 = R1 + R2	//addqi3
00009177 01 95              		R2=R1	// QImode move
00009178 02 92              		R1=[bp+2]	// QImode move
00009179 C1 04              		R2 = R2 + [R1]	//addqi3
0000917A 0A 03 01 02        		R1=R2+513
0000917C 01 97              		R3=R1	// QImode move
0000917D C3 94              		R2=[R3]	// QImode move
0000917E C8 D4              		[SP--]=R2	// QImode move
0000917F 40 F0 EF 8E        		call _write_data_12864	// call without return value
00009181 41 00              		SP = SP + 1	//SP
00001ABA                    	.debug
00001ABA 2E 00 73 00        		.dw '.stabn 0x44,0,292,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         32 00 2C 00
         00 00 00 00
00001ACE D3 00 00 00        		.dd LM176-_graph
00001AD0 0D 00 0A 00        		.dw 0x0d,0x0a
00009182                    	.code
                            	LM176:
00009182 09 93 64 00        		R1=100	// QImode move
00009184 C8 D2              		[SP--]=R1	// QImode move
00009185 40 F0 FF 8D        		call _delay_12864	// call without return value
00009187 41 00              		SP = SP + 1	//SP
00001AD2                    	.debug
00001AD2 2E 00 73 00        		.dw '.stabn 0x44,0,287,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         37 00 2C 00
         00 00 00 00
00001AE6 D9 00 00 00        		.dd LM177-_graph
00001AE8 0D 00 0A 00        		.dw 0x0d,0x0a
00009188                    	.code
                            	LM177:
                            	L69:
00009188 C5 92              		R1=[BP]	// QImode move
00009189 09 05 01 00        		R2=R1+1
0000918B C5 D4              		[BP]=R2	// QImode move
0000918C 0F 9F 43 91        		pc=L67	// Indirect jump
                            	L68:
00001AEA                    	.debug
00001AEA 2E 00 73 00        		.dw '.stabn 0x44,0,294,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         34 00 2C 00
         00 00 00 00
00001AFE DF 00 00 00        		.dd LM178-_graph
00001B00 0D 00 0A 00        		.dw 0x0d,0x0a
0000918E                    	.code
                            	LM178:
0000918E 76 92              		R1=54	// QImode move
0000918F C8 D2              		[SP--]=R1	// QImode move
00009190 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
00009192 41 00              		SP = SP + 1	//SP
00001B02                    	.debug
00001B02 2E 00 73 00        		.dw '.stabn 0x44,0,295,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         35 00 2C 00
         00 00 00 00
00001B16 E4 00 00 00        		.dd LM179-_graph
00001B18 0D 00 0A 00        		.dw 0x0d,0x0a
00009193                    	.code
                            	LM179:
00009193 4A 92              		R1=10	// QImode move
00009194 C8 D2              		[SP--]=R1	// QImode move
00009195 40 F0 FF 8D        		call _delay_12864	// call without return value
00009197 41 00              		SP = SP + 1	//SP
00001B1A                    	.debug
00001B1A 2E 00 73 00        		.dw '.stabn 0x44,0,270,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         30 00 2C 00
         00 00 00 00
00001B2E E9 00 00 00        		.dd LM180-_graph
00001B30 0D 00 0A 00        		.dw 0x0d,0x0a
00009198                    	.code
                            	LM180:
                            	L61:
00009198 05 93              		R1=BP	// QImode move
00009199 0D 05 01 00        		R2=BP+1
0000919B 05 97              		R3=BP	// QImode move
0000919C 0D 03 01 00        		R1=BP+1
0000919E 05 95              		R2=BP	// QImode move
0000919F 0D 07 01 00        		R3=BP+1
000091A1 03 99              		R4=R3	// QImode move
000091A2 C4 94              		R2=[R4]	// QImode move
000091A3 0A 07 01 00        		R3=R2+1
000091A5 01 95              		R2=R1	// QImode move
000091A6 C2 D6              		[R2]=R3	// QImode move
000091A7 0F 9F BC 90        		pc=L59	// Indirect jump
                            	L60:
00001B32                    	.debug
00001B32 2E 00 73 00        		.dw '.stabn 0x44,0,297,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         37 00 2C 00
         00 00 00 00
00001B46 FA 00 00 00        		.dd LM181-_graph
00001B48 0D 00 0A 00        		.dw 0x0d,0x0a
000091A9                    	.code
                            	LM181:
                            	LBE10:
00001B4A                    	.debug
00001B4A 2E 00 73 00        		.dw '.stabn 0x44,0,297,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         37 00 2C 00
         00 00 00 00
00001B5E FA 00 00 00        		.dd LM182-_graph
00001B60 0D 00 0A 00        		.dw 0x0d,0x0a
000091A9                    	.code
                            	LM182:
                            	L58:
                            	
000091A9 44 00              		sp+=4
000091AA 88 98              		pop bp from [sp]
000091AB 90 9A              		retf
                            		.endp	// end of graph
                            	
00001B62                    	.debug
00001B62 2E 00 73 00        		.dw '.stabs "table:p22=*2",160,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 61 00
         62 00 6C 00
         65 00 3A 00
         70 00 32 00
         32 00 3D 00
         2A 00 32 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         37 00 0D 00
         0A 00      
000091AC                    	.CODE
00001B83                    	.debug
00001B83 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001B95 07 00 00 00        		.dd LBB10-_graph
00001B97 0D 00 0A 00        		.dw 0x0d,0x0a
000091AC                    	.code
00001B99                    	.debug
00001B99 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000091AC                    	.CODE
00001BB2                    	.debug
00001BB2 2E 00 73 00        		.dw '.stabs "j:11",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
000091AC                    	.CODE
00001BCB                    	.debug
00001BCB 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001BDD FA 00 00 00        		.dd LBE10-_graph
00001BDF 0D 00 0A 00        		.dw 0x0d,0x0a
000091AC                    	.code
00001BE1                    	.debug
00001BE1 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001BEA FD 00 00 00        		.dd LME13-_graph
00001BEC 0D 00 0A 00        		.dw 0x0d,0x0a
000091AC                    	.code
                            	LME13:
000091AC                    	.code
00001BEE                    	.debug
00001BEE 2E 00 73 00        		.dw '.stabs "graph_off:F19",36,0,0,',0,0,offset _graph_off,seg _graph_off,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 72 00
         61 00 70 00
         68 00 5F 00
         6F 00 66 00
         66 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         57 04 00 00
         0D 00 0A 00
000091AC                    	.CODE
                            	.public _graph_off
                            	_graph_off:	.proc
00001C12                    	.debug
00001C12 2E 00 73 00        		.dw '.stabn 0x44,0,299,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         39 00 2C 00
         00 00 00 00
00001C26 00 00 00 00        		.dd LM183-_graph_off
00001C28 0D 00 0A 00        		.dw 0x0d,0x0a
000091AC                    	.code
                            	LM183:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000091AC 88 DA              		push bp to [sp]
000091AD 41 20              		sp-=1
000091AE 08 0B 01 00        		bp=sp+1
                            	
000091B0 0D 03 04 00        		R1=BP+4
000091B2 C5 D2              		[BP]=R1	// QImode move
00001C2A                    	.debug
00001C2A 2E 00 73 00        		.dw '.stabn 0x44,0,300,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         30 00 2C 00
         00 00 00 00
00001C3E 07 00 00 00        		.dd LM184-_graph_off
00001C40 0D 00 0A 00        		.dw 0x0d,0x0a
000091B3                    	.code
                            	LM184:
000091B3 70 92              		R1=48	// QImode move
000091B4 C8 D2              		[SP--]=R1	// QImode move
000091B5 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
000091B7 41 00              		SP = SP + 1	//SP
00001C42                    	.debug
00001C42 2E 00 73 00        		.dw '.stabn 0x44,0,301,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         31 00 2C 00
         00 00 00 00
00001C56 0C 00 00 00        		.dd LM185-_graph_off
00001C58 0D 00 0A 00        		.dw 0x0d,0x0a
000091B8                    	.code
                            	LM185:
00001C5A                    	.debug
00001C5A 2E 00 73 00        		.dw '.stabn 0x44,0,301,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         31 00 2C 00
         00 00 00 00
00001C6E 0C 00 00 00        		.dd LM186-_graph_off
00001C70 0D 00 0A 00        		.dw 0x0d,0x0a
000091B8                    	.code
                            	LM186:
                            	L74:
                            	
000091B8 41 00              		sp+=1
000091B9 88 98              		pop bp from [sp]
000091BA 90 9A              		retf
                            		.endp	// end of graph_off
                            	
00001C72                    	.debug
00001C72 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001C7B 0F 00 00 00        		.dd LME14-_graph_off
00001C7D 0D 00 0A 00        		.dw 0x0d,0x0a
000091BB                    	.code
                            	LME14:
000091BB                    	.code
00001C7F                    	.debug
00001C7F 2E 00 73 00        		.dw '.stabs "clear:F19",36,0,0,',0,0,offset _clear,seg _clear,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6C 00
         65 00 61 00
         72 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         66 04 00 00
         0D 00 0A 00
000091BB                    	.CODE
                            	.public _clear
                            	_clear:	.proc
00001C9F                    	.debug
00001C9F 2E 00 73 00        		.dw '.stabn 0x44,0,303,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         33 00 2C 00
         00 00 00 00
00001CB3 00 00 00 00        		.dd LM187-_clear
00001CB5 0D 00 0A 00        		.dw 0x0d,0x0a
000091BB                    	.code
                            	LM187:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000091BB 88 DA              		push bp to [sp]
000091BC 41 20              		sp-=1
000091BD 08 0B 01 00        		bp=sp+1
                            	
000091BF 0D 03 04 00        		R1=BP+4
000091C1 C5 D2              		[BP]=R1	// QImode move
00001CB7                    	.debug
00001CB7 2E 00 73 00        		.dw '.stabn 0x44,0,304,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         34 00 2C 00
         00 00 00 00
00001CCB 07 00 00 00        		.dd LM188-_clear
00001CCD 0D 00 0A 00        		.dw 0x0d,0x0a
000091C2                    	.code
                            	LM188:
000091C2 70 92              		R1=48	// QImode move
000091C3 C8 D2              		[SP--]=R1	// QImode move
000091C4 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
000091C6 41 00              		SP = SP + 1	//SP
00001CCF                    	.debug
00001CCF 2E 00 73 00        		.dw '.stabn 0x44,0,305,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         35 00 2C 00
         00 00 00 00
00001CE3 0C 00 00 00        		.dd LM189-_clear
00001CE5 0D 00 0A 00        		.dw 0x0d,0x0a
000091C7                    	.code
                            	LM189:
000091C7 41 92              		R1=1	// QImode move
000091C8 C8 D2              		[SP--]=R1	// QImode move
000091C9 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
000091CB 41 00              		SP = SP + 1	//SP
00001CE7                    	.debug
00001CE7 2E 00 73 00        		.dw '.stabn 0x44,0,306,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         36 00 2C 00
         00 00 00 00
00001CFB 11 00 00 00        		.dd LM190-_clear
00001CFD 0D 00 0A 00        		.dw 0x0d,0x0a
000091CC                    	.code
                            	LM190:
00001CFF                    	.debug
00001CFF 2E 00 73 00        		.dw '.stabn 0x44,0,306,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         36 00 2C 00
         00 00 00 00
00001D13 11 00 00 00        		.dd LM191-_clear
00001D15 0D 00 0A 00        		.dw 0x0d,0x0a
000091CC                    	.code
                            	LM191:
                            	L75:
                            	
000091CC 41 00              		sp+=1
000091CD 88 98              		pop bp from [sp]
000091CE 90 9A              		retf
                            		.endp	// end of clear
                            	
00001D17                    	.debug
00001D17 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001D20 14 00 00 00        		.dd LME15-_clear
00001D22 0D 00 0A 00        		.dw 0x0d,0x0a
000091CF                    	.code
                            	LME15:
00008061                    	.text
                            	LC1:
00008061 20 00              		.dw 32
00008062 20 00              		.dw 32
00008063 20 00              		.dw 32
00008064 20 00              		.dw 32
00008065 20 00              		.dw 32
00008066 20 00              		.dw 32
00008067 20 00              		.dw 32
00008068 20 00              		.dw 32
000091CF                    	.code
00001D24                    	.debug
00001D24 2E 00 73 00        		.dw '.stabs "write_int_12864:F19",36,0,0,',0,0,offset _write_int_12864,seg _write_int_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 5F 00
         69 00 6E 00
         74 00 5F 00
         31 00 32 00
         38 00 36 00
         34 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         7A 04 00 00
         0D 00 0A 00
000091CF                    	.CODE
                            	.public _write_int_12864
                            	_write_int_12864:	.proc
00001D4E                    	.debug
00001D4E 2E 00 73 00        		.dw '.stabn 0x44,0,308,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         38 00 2C 00
         00 00 00 00
00001D62 00 00 00 00        		.dd LM192-_write_int_12864
00001D64 0D 00 0A 00        		.dw 0x0d,0x0a
000091CF                    	.code
                            	LM192:
                            		// total=12, vars=12
                            		// frame_pointer_needed: 1
000091CF 88 DA              		push bp to [sp]
000091D0 4C 20              		sp-=12
000091D1 08 0B 01 00        		bp=sp+1
                            	
000091D3 0D 03 0F 00        		R1=BP+15
000091D5 0A D2              		[bp+10]=R1	// QImode move
00001D66                    	.debug
00001D66 2E 00 73 00        		.dw '.stabn 0x44,0,309,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         39 00 2C 00
         00 00 00 00
00001D7A 07 00 00 00        		.dd LM193-_write_int_12864
00001D7C 0D 00 0A 00        		.dw 0x0d,0x0a
000091D6                    	.code
                            	LM193:
                            	LBB11:
000091D6 40 92              		R1=0	// QImode move
000091D7 C5 D2              		[BP]=R1	// QImode move
000091D8 05 93              		R1=BP	// QImode move
000091D9 0D 05 01 00        		R2=BP+1
000091DB 40 92              		R1=0	// QImode move
000091DC 02 97              		R3=R2	// QImode move
000091DD C3 D2              		[R3]=R1	// QImode move
00001D7E                    	.debug
00001D7E 2E 00 73 00        		.dw '.stabn 0x44,0,310,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         30 00 2C 00
         00 00 00 00
00001D92 0F 00 00 00        		.dd LM194-_write_int_12864
00001D94 0D 00 0A 00        		.dw 0x0d,0x0a
000091DE                    	.code
                            	LM194:
000091DE 05 93              		R1=BP	// QImode move
000091DF 0D 05 02 00        		R2=BP+2
000091E1 02 93              		R1=R2	// QImode move
000091E2 0A 95 61 80        		R2=LC1	// QImode move
000091E4 48 96              		R3=8	// QImode move
000091E5 C8 D6              		[SP--]=R3	// QImode move
000091E6 C8 D4              		[SP--]=R2	// QImode move
000091E7 C8 D2              		[SP--]=R1	// QImode move
000091E8 40 F0 13 96        		call __BlockCopy	// call with return value
000091EA 43 00              		SP = SP + 3	//SP
00001D96                    	.debug
00001D96 2E 00 73 00        		.dw '.stabn 0x44,0,311,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         31 00 2C 00
         00 00 00 00
00001DAA 1C 00 00 00        		.dd LM195-_write_int_12864
00001DAC 0D 00 0A 00        		.dw 0x0d,0x0a
000091EB                    	.code
                            	LM195:
000091EB 0A 94              		R2=[bp+10]	// QImode move
000091EC C2 92              		R1=[R2]	// QImode move
000091ED 40 42              		CMP R1,0	// QImode test
000091EE 0C 2E 01 EE        		NSJNL L77	//QImode GE
         00 EE      
00001DAE                    	.debug
00001DAE 2E 00 73 00        		.dw '.stabn 0x44,0,313,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         33 00 2C 00
         00 00 00 00
00001DC2 22 00 00 00        		.dd LM196-_write_int_12864
00001DC4 0D 00 0A 00        		.dw 0x0d,0x0a
000091F1                    	.code
                            	LM196:
000091F1 05 93              		R1=BP	// QImode move
000091F2 0D 05 01 00        		R2=BP+1
000091F4 41 92              		R1=1	// QImode move
000091F5 02 97              		R3=R2	// QImode move
000091F6 C3 D2              		[R3]=R1	// QImode move
00001DC6                    	.debug
00001DC6 2E 00 73 00        		.dw '.stabn 0x44,0,314,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         34 00 2C 00
         00 00 00 00
00001DDA 28 00 00 00        		.dd LM197-_write_int_12864
00001DDC 0D 00 0A 00        		.dw 0x0d,0x0a
000091F7                    	.code
                            	LM197:
000091F7 0A 94              		R2=[bp+10]	// QImode move
000091F8 C2 62              		R1=-[R2]	// QImode negative
000091F9 0A 96              		R3=[bp+10]	// QImode move
000091FA C3 D2              		[R3]=R1	// QImode move
                            	L77:
00001DDE                    	.debug
00001DDE 2E 00 73 00        		.dw '.stabn 0x44,0,317,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         37 00 2C 00
         00 00 00 00
00001DF2 2C 00 00 00        		.dd LM198-_write_int_12864
00001DF4 0D 00 0A 00        		.dw 0x0d,0x0a
000091FB                    	.code
                            	LM198:
                            	L78:
000091FB 0A 94              		R2=[bp+10]	// QImode move
000091FC C2 92              		R1=[R2]	// QImode move
000091FD 4A 94              		R2=10	// QImode move
000091FE C8 D4              		[SP--]=R2	// QImode move
000091FF C8 D2              		[SP--]=R1	// QImode move
00009200 40 F0 BE 95        		call __divi1	// call with return value
00009202 42 00              		SP = SP + 2	//SP
00009203 40 42              		CMP R1,0	// QImode test
00009204 04 4E 01 EE        		NSJNZ L80	//QImode NE
         00 EE      
00009207 0F 9F 2F 92        		pc=L79	// Indirect jump
                            	L80:
00001DF6                    	.debug
00001DF6 2E 00 73 00        		.dw '.stabn 0x44,0,319,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         39 00 2C 00
         00 00 00 00
00001E0A 3A 00 00 00        		.dd LM199-_write_int_12864
00001E0C 0D 00 0A 00        		.dw 0x0d,0x0a
00009209                    	.code
                            	LM199:
00009209 05 95              		R2=BP	// QImode move
0000920A 0D 03 02 00        		R1=BP+2
0000920C 47 96              		R3=7	// QImode move
0000920D 03 95              		R2=R3	// QImode move
0000920E C5 24              		R2-=[BP]	// subqi3_r0R R2=R2-[BP]
0000920F 0B D2              		[bp+11]=R1	// QImode move
00009210 0B 96              		R3=[bp+11]	// QImode move
00009211 02 07              		R3 = R3 + R2	//addqi3
00009212 0B D6              		[bp+11]=R3	// QImode move
00009213 0A 94              		R2=[bp+10]	// QImode move
00009214 C2 92              		R1=[R2]	// QImode move
00009215 4A 94              		R2=10	// QImode move
00009216 C8 D4              		[SP--]=R2	// QImode move
00009217 C8 D2              		[SP--]=R1	// QImode move
00009218 40 F0 EF 95        		call __modi1	// call with return value
0000921A 42 00              		SP = SP + 2	//SP
0000921B 09 05 30 00        		R2=R1+48
0000921D 0B 96              		R3=[bp+11]	// QImode move
0000921E C3 D4              		[R3]=R2	// QImode move
00001E0E                    	.debug
00001E0E 2E 00 73 00        		.dw '.stabn 0x44,0,320,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         30 00 2C 00
         00 00 00 00
00001E22 50 00 00 00        		.dd LM200-_write_int_12864
00001E24 0D 00 0A 00        		.dw 0x0d,0x0a
0000921F                    	.code
                            	LM200:
0000921F 0A 94              		R2=[bp+10]	// QImode move
00009220 C2 92              		R1=[R2]	// QImode move
00009221 4A 94              		R2=10	// QImode move
00009222 C8 D4              		[SP--]=R2	// QImode move
00009223 C8 D2              		[SP--]=R1	// QImode move
00009224 40 F0 BE 95        		call __divi1	// call with return value
00009226 42 00              		SP = SP + 2	//SP
00009227 0A 96              		R3=[bp+10]	// QImode move
00009228 C3 D2              		[R3]=R1	// QImode move
00001E26                    	.debug
00001E26 2E 00 73 00        		.dw '.stabn 0x44,0,321,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         31 00 2C 00
         00 00 00 00
00001E3A 5A 00 00 00        		.dd LM201-_write_int_12864
00001E3C 0D 00 0A 00        		.dw 0x0d,0x0a
00009229                    	.code
                            	LM201:
00009229 C5 92              		R1=[BP]	// QImode move
0000922A 09 05 01 00        		R2=R1+1
0000922C C5 D4              		[BP]=R2	// QImode move
00001E3E                    	.debug
00001E3E 2E 00 73 00        		.dw '.stabn 0x44,0,322,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         32 00 2C 00
         00 00 00 00
00001E52 5E 00 00 00        		.dd LM202-_write_int_12864
00001E54 0D 00 0A 00        		.dw 0x0d,0x0a
0000922D                    	.code
                            	LM202:
0000922D 0F 9F FB 91        		pc=L78	// Indirect jump
                            	L79:
00001E56                    	.debug
00001E56 2E 00 73 00        		.dw '.stabn 0x44,0,323,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         33 00 2C 00
         00 00 00 00
00001E6A 60 00 00 00        		.dd LM203-_write_int_12864
00001E6C 0D 00 0A 00        		.dw 0x0d,0x0a
0000922F                    	.code
                            	LM203:
0000922F 05 95              		R2=BP	// QImode move
00009230 0D 03 02 00        		R1=BP+2
00009232 47 96              		R3=7	// QImode move
00009233 03 95              		R2=R3	// QImode move
00009234 C5 24              		R2-=[BP]	// subqi3_r0R R2=R2-[BP]
00009235 02 03              		R1 = R1 + R2	//addqi3
00009236 0A 96              		R3=[bp+10]	// QImode move
00009237 C3 94              		R2=[R3]	// QImode move
00009238 0A 07 30 00        		R3=R2+48
0000923A 01 95              		R2=R1	// QImode move
0000923B C2 D6              		[R2]=R3	// QImode move
00001E6E                    	.debug
00001E6E 2E 00 73 00        		.dw '.stabn 0x44,0,324,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         34 00 2C 00
         00 00 00 00
00001E82 6D 00 00 00        		.dd LM204-_write_int_12864
00001E84 0D 00 0A 00        		.dw 0x0d,0x0a
0000923C                    	.code
                            	LM204:
0000923C 05 93              		R1=BP	// QImode move
0000923D 0D 05 01 00        		R2=BP+1
0000923F 02 97              		R3=R2	// QImode move
00009240 C3 92              		R1=[R3]	// QImode move
00009241 40 42              		CMP R1,0	// QImode test
00009242 0C 5E 01 EE        		NSJZ L81	//QImode EQ
         00 EE      
00001E86                    	.debug
00001E86 2E 00 73 00        		.dw '.stabn 0x44,0,326,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         36 00 2C 00
         00 00 00 00
00001E9A 76 00 00 00        		.dd LM205-_write_int_12864
00001E9C 0D 00 0A 00        		.dw 0x0d,0x0a
00009245                    	.code
                            	LM205:
00009245 05 95              		R2=BP	// QImode move
00009246 0D 03 02 00        		R1=BP+2
00009248 46 96              		R3=6	// QImode move
00009249 03 95              		R2=R3	// QImode move
0000924A C5 24              		R2-=[BP]	// subqi3_r0R R2=R2-[BP]
0000924B 02 03              		R1 = R1 + R2	//addqi3
0000924C 6D 94              		R2=45	// QImode move
0000924D 01 97              		R3=R1	// QImode move
0000924E C3 D4              		[R3]=R2	// QImode move
                            	L81:
00001E9E                    	.debug
00001E9E 2E 00 73 00        		.dw '.stabn 0x44,0,328,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         38 00 2C 00
         00 00 00 00
00001EB2 80 00 00 00        		.dd LM206-_write_int_12864
00001EB4 0D 00 0A 00        		.dw 0x0d,0x0a
0000924F                    	.code
                            	LM206:
0000924F 44 92              		R1=4	// QImode move
00009250 C8 D2              		[SP--]=R1	// QImode move
00009251 40 92              		R1=0	// QImode move
00009252 C8 D2              		[SP--]=R1	// QImode move
00009253 0A 92              		R1=[bp+10]	// QImode move
00009254 0A 92              		R1=[bp+10]	// QImode move
00009255 09 05 01 00        		R2=R1+1
00009257 02 97              		R3=R2	// QImode move
00009258 C3 92              		R1=[R3]	// QImode move
00009259 C8 D2              		[SP--]=R1	// QImode move
0000925A 0D 03 02 00        		R1=BP+2
0000925C C8 D2              		[SP--]=R1	// QImode move
0000925D 40 F0 96 8D        		call _write_chinese_12864	// call without return value
0000925F 44 00              		SP = SP + 4	//SP
00001EB6                    	.debug
00001EB6 2E 00 73 00        		.dw '.stabn 0x44,0,329,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         39 00 2C 00
         00 00 00 00
00001ECA 91 00 00 00        		.dd LM207-_write_int_12864
00001ECC 0D 00 0A 00        		.dw 0x0d,0x0a
00009260                    	.code
                            	LM207:
                            	LBE11:
00001ECE                    	.debug
00001ECE 2E 00 73 00        		.dw '.stabn 0x44,0,329,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         39 00 2C 00
         00 00 00 00
00001EE2 91 00 00 00        		.dd LM208-_write_int_12864
00001EE4 0D 00 0A 00        		.dw 0x0d,0x0a
00009260                    	.code
                            	LM208:
                            	L76:
                            	
00009260 4C 00              		sp+=12
00009261 88 98              		pop bp from [sp]
00009262 90 9A              		retf
                            		.endp	// end of write_int_12864
                            	
00001EE6                    	.debug
00001EE6 2E 00 73 00        		.dw '.stabs "myint:p1",160,0,0,15',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 79 00
         69 00 6E 00
         74 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 35 00
         0D 00 0A 00
00009263                    	.CODE
00001F04                    	.debug
00001F04 2E 00 73 00        		.dw '.stabs "pos:p11",160,0,0,16',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         70 00 6F 00
         73 00 3A 00
         70 00 31 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         36 00 0D 00
         0A 00      
00009263                    	.CODE
00001F21                    	.debug
00001F21 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001F33 07 00 00 00        		.dd LBB11-_write_int_12864
00001F35 0D 00 0A 00        		.dw 0x0d,0x0a
00009263                    	.code
00001F37                    	.debug
00001F37 2E 00 73 00        		.dw '.stabs "t:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009263                    	.CODE
00001F50                    	.debug
00001F50 2E 00 73 00        		.dw '.stabs "flag:11",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         61 00 67 00
         3A 00 31 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
00009263                    	.CODE
00001F6C                    	.debug
00001F6C 2E 00 73 00        		.dw '.stabs "buffer:23=ar1;0;7;11",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         62 00 75 00
         66 00 66 00
         65 00 72 00
         3A 00 32 00
         33 00 3D 00
         61 00 72 00
         31 00 3B 00
         30 00 3B 00
         37 00 3B 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 0D 00
         0A 00      
00009263                    	.CODE
00001F95                    	.debug
00001F95 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001FA7 91 00 00 00        		.dd LBE11-_write_int_12864
00001FA9 0D 00 0A 00        		.dw 0x0d,0x0a
00009263                    	.code
00001FAB                    	.debug
00001FAB 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001FB4 94 00 00 00        		.dd LME16-_write_int_12864
00001FB6 0D 00 0A 00        		.dw 0x0d,0x0a
00009263                    	.code
                            	LME16:
00009263                    	.code
00001FB8                    	.debug
00001FB8 2E 00 73 00        		.dw '.stabs "write_hanzi_12864:F19",36,0,0,',0,0,offset _write_hanzi_12864,seg _write_hanzi_12864,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 5F 00
         68 00 61 00
         6E 00 7A 00
         69 00 5F 00
         31 00 32 00
         38 00 36 00
         34 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         0E 05 00 00
         0D 00 0A 00
00009263                    	.CODE
                            	.public _write_hanzi_12864
                            	_write_hanzi_12864:	.proc
00001FE4                    	.debug
00001FE4 2E 00 73 00        		.dw '.stabn 0x44,0,338,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         38 00 2C 00
         00 00 00 00
00001FF8 00 00 00 00        		.dd LM209-_write_hanzi_12864
00001FFA 0D 00 0A 00        		.dw 0x0d,0x0a
00009263                    	.code
                            	LM209:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
00009263 88 DA              		push bp to [sp]
00009264 08 0B 01 00        		bp=sp+1
                            	
00009266 0D 03 03 00        		R1=BP+3
00001FFC                    	.debug
00001FFC 2E 00 73 00        		.dw '.stabn 0x44,0,340,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         30 00 2C 00
         00 00 00 00
00002010 05 00 00 00        		.dd LM210-_write_hanzi_12864
00002012 0D 00 0A 00        		.dw 0x0d,0x0a
00009268                    	.code
                            	LM210:
                            	L85:
                            	
00009268 88 98              		pop bp from [sp]
00009269 90 9A              		retf
                            		.endp	// end of write_hanzi_12864
                            	
00002014                    	.debug
00002014 2E 00 73 00        		.dw '.stabs "hanzi:p20",160,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         68 00 61 00
         6E 00 7A 00
         69 00 3A 00
         70 00 32 00
         30 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
0000926A                    	.CODE
00002032                    	.debug
00002032 2E 00 73 00        		.dw '.stabs "length:p11",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 65 00
         6E 00 67 00
         74 00 68 00
         3A 00 70 00
         31 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
0000926A                    	.CODE
00002051                    	.debug
00002051 2E 00 73 00        		.dw '.stabs "hang:p11",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         68 00 61 00
         6E 00 67 00
         3A 00 70 00
         31 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         35 00 0D 00
         0A 00      
0000926A                    	.CODE
0000206E                    	.debug
0000206E 2E 00 73 00        		.dw '.stabs "align:p11",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         61 00 6C 00
         69 00 67 00
         6E 00 3A 00
         70 00 31 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
0000926A                    	.CODE
0000208C                    	.debug
0000208C 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00002095 07 00 00 00        		.dd LME17-_write_hanzi_12864
00002097 0D 00 0A 00        		.dw 0x0d,0x0a
0000926A                    	.code
                            	LME17:
0000926A                    	.code
00002099                    	.debug
00002099 2E 00 73 00        		.dw '.stabs "write_cgram:F19",36,0,0,',0,0,offset _write_cgram,seg _write_cgram,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 5F 00
         63 00 67 00
         72 00 61 00
         6D 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         15 05 00 00
         0D 00 0A 00
0000926A                    	.CODE
                            	.public _write_cgram
                            	_write_cgram:	.proc
000020BF                    	.debug
000020BF 2E 00 73 00        		.dw '.stabn 0x44,0,343,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         33 00 2C 00
         00 00 00 00
000020D3 00 00 00 00        		.dd LM211-_write_cgram
000020D5 0D 00 0A 00        		.dw 0x0d,0x0a
0000926A                    	.code
                            	LM211:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
0000926A 88 DA              		push bp to [sp]
0000926B 42 20              		sp-=2
0000926C 08 0B 01 00        		bp=sp+1
                            	
0000926E 0D 03 05 00        		R1=BP+5
00009270 01 D2              		[bp+1]=R1	// QImode move
000020D7                    	.debug
000020D7 2E 00 73 00        		.dw '.stabn 0x44,0,344,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         34 00 2C 00
         00 00 00 00
000020EB 07 00 00 00        		.dd LM212-_write_cgram
000020ED 0D 00 0A 00        		.dw 0x0d,0x0a
00009271                    	.code
                            	LM212:
                            	LBB12:
000020EF                    	.debug
000020EF 2E 00 73 00        		.dw '.stabn 0x44,0,345,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         35 00 2C 00
         00 00 00 00
00002103 07 00 00 00        		.dd LM213-_write_cgram
00002105 0D 00 0A 00        		.dw 0x0d,0x0a
00009271                    	.code
                            	LM213:
00009271 40 F0 55 8D        		call _init_12864	// call without return value
00002107                    	.debug
00002107 2E 00 73 00        		.dw '.stabn 0x44,0,346,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         36 00 2C 00
         00 00 00 00
0000211B 09 00 00 00        		.dd LM214-_write_cgram
0000211D 0D 00 0A 00        		.dw 0x0d,0x0a
00009273                    	.code
                            	LM214:
00009273 40 F0 BB 91        		call _clear	// call without return value
0000211F                    	.debug
0000211F 2E 00 73 00        		.dw '.stabn 0x44,0,347,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         37 00 2C 00
         00 00 00 00
00002133 0B 00 00 00        		.dd LM215-_write_cgram
00002135 0D 00 0A 00        		.dw 0x0d,0x0a
00009275                    	.code
                            	LM215:
00009275 09 93 40 00        		R1=64	// QImode move
00009277 C8 D2              		[SP--]=R1	// QImode move
00009278 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
0000927A 41 00              		SP = SP + 1	//SP
00002137                    	.debug
00002137 2E 00 73 00        		.dw '.stabn 0x44,0,348,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         38 00 2C 00
         00 00 00 00
0000214B 11 00 00 00        		.dd LM216-_write_cgram
0000214D 0D 00 0A 00        		.dw 0x0d,0x0a
0000927B                    	.code
                            	LM216:
0000927B 40 92              		R1=0	// QImode move
0000927C C5 D2              		[BP]=R1	// QImode move
                            	L87:
0000927D C5 92              		R1=[BP]	// QImode move
0000927E 09 43 7F 00        		CMP R1,127	// QImode compare
00009280 04 8E 01 EE        		NSJNA L90	//QImode LEU
         00 EE      
00009283 0F 9F 9A 92        		pc=L88	// Indirect jump
                            	L90:
0000214F                    	.debug
0000214F 2E 00 73 00        		.dw '.stabn 0x44,0,350,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         30 00 2C 00
         00 00 00 00
00002163 1B 00 00 00        		.dd LM217-_write_cgram
00002165 0D 00 0A 00        		.dw 0x0d,0x0a
00009285                    	.code
                            	LM217:
00009285 01 96              		R3=[bp+1]	// QImode move
00009286 C3 94              		R2=[R3]	// QImode move
00009287 02 93              		R1=R2	// QImode move
00009288 C5 02              		R1 = R1 + [BP]	//addqi3
00009289 01 97              		R3=R1	// QImode move
0000928A C3 94              		R2=[R3]	// QImode move
0000928B C8 D4              		[SP--]=R2	// QImode move
0000928C 40 F0 EF 8E        		call _write_data_12864	// call without return value
0000928E 41 00              		SP = SP + 1	//SP
00002167                    	.debug
00002167 2E 00 73 00        		.dw '.stabn 0x44,0,351,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         31 00 2C 00
         00 00 00 00
0000217B 25 00 00 00        		.dd LM218-_write_cgram
0000217D 0D 00 0A 00        		.dw 0x0d,0x0a
0000928F                    	.code
                            	LM218:
0000928F 4A 92              		R1=10	// QImode move
00009290 C8 D2              		[SP--]=R1	// QImode move
00009291 40 F0 FF 8D        		call _delay_12864	// call without return value
00009293 41 00              		SP = SP + 1	//SP
0000217F                    	.debug
0000217F 2E 00 73 00        		.dw '.stabn 0x44,0,348,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         38 00 2C 00
         00 00 00 00
00002193 2A 00 00 00        		.dd LM219-_write_cgram
00002195 0D 00 0A 00        		.dw 0x0d,0x0a
00009294                    	.code
                            	LM219:
                            	L89:
00009294 C5 92              		R1=[BP]	// QImode move
00009295 09 05 01 00        		R2=R1+1
00009297 C5 D4              		[BP]=R2	// QImode move
00009298 0F 9F 7D 92        		pc=L87	// Indirect jump
                            	L88:
00002197                    	.debug
00002197 2E 00 73 00        		.dw '.stabn 0x44,0,353,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         33 00 2C 00
         00 00 00 00
000021AB 30 00 00 00        		.dd LM220-_write_cgram
000021AD 0D 00 0A 00        		.dw 0x0d,0x0a
0000929A                    	.code
                            	LM220:
0000929A 09 93 80 00        		R1=128	// QImode move
0000929C C8 D2              		[SP--]=R1	// QImode move
0000929D 40 F0 BF 8E        		call _write_cmd_12864	// call without return value
0000929F 41 00              		SP = SP + 1	//SP
000021AF                    	.debug
000021AF 2E 00 73 00        		.dw '.stabn 0x44,0,354,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         34 00 2C 00
         00 00 00 00
000021C3 36 00 00 00        		.dd LM221-_write_cgram
000021C5 0D 00 0A 00        		.dw 0x0d,0x0a
000092A0                    	.code
                            	LM221:
000092A0 40 92              		R1=0	// QImode move
000092A1 C8 D2              		[SP--]=R1	// QImode move
000092A2 40 F0 EF 8E        		call _write_data_12864	// call without return value
000092A4 41 00              		SP = SP + 1	//SP
000021C7                    	.debug
000021C7 2E 00 73 00        		.dw '.stabn 0x44,0,355,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         35 00 2C 00
         00 00 00 00
000021DB 3B 00 00 00        		.dd LM222-_write_cgram
000021DD 0D 00 0A 00        		.dw 0x0d,0x0a
000092A5                    	.code
                            	LM222:
000092A5 40 92              		R1=0	// QImode move
000092A6 C8 D2              		[SP--]=R1	// QImode move
000092A7 40 F0 EF 8E        		call _write_data_12864	// call without return value
000092A9 41 00              		SP = SP + 1	//SP
000021DF                    	.debug
000021DF 2E 00 73 00        		.dw '.stabn 0x44,0,356,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         36 00 2C 00
         00 00 00 00
000021F3 40 00 00 00        		.dd LM223-_write_cgram
000021F5 0D 00 0A 00        		.dw 0x0d,0x0a
000092AA                    	.code
                            	LM223:
000092AA 40 92              		R1=0	// QImode move
000092AB C8 D2              		[SP--]=R1	// QImode move
000092AC 40 F0 EF 8E        		call _write_data_12864	// call without return value
000092AE 41 00              		SP = SP + 1	//SP
000021F7                    	.debug
000021F7 2E 00 73 00        		.dw '.stabn 0x44,0,357,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         37 00 2C 00
         00 00 00 00
0000220B 45 00 00 00        		.dd LM224-_write_cgram
0000220D 0D 00 0A 00        		.dw 0x0d,0x0a
000092AF                    	.code
                            	LM224:
000092AF 42 92              		R1=2	// QImode move
000092B0 C8 D2              		[SP--]=R1	// QImode move
000092B1 40 F0 EF 8E        		call _write_data_12864	// call without return value
000092B3 41 00              		SP = SP + 1	//SP
0000220F                    	.debug
0000220F 2E 00 73 00        		.dw '.stabn 0x44,0,358,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         38 00 2C 00
         00 00 00 00
00002223 4A 00 00 00        		.dd LM225-_write_cgram
00002225 0D 00 0A 00        		.dw 0x0d,0x0a
000092B4                    	.code
                            	LM225:
000092B4 40 92              		R1=0	// QImode move
000092B5 C8 D2              		[SP--]=R1	// QImode move
000092B6 40 F0 EF 8E        		call _write_data_12864	// call without return value
000092B8 41 00              		SP = SP + 1	//SP
00002227                    	.debug
00002227 2E 00 73 00        		.dw '.stabn 0x44,0,359,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         39 00 2C 00
         00 00 00 00
0000223B 4F 00 00 00        		.dd LM226-_write_cgram
0000223D 0D 00 0A 00        		.dw 0x0d,0x0a
000092B9                    	.code
                            	LM226:
000092B9 44 92              		R1=4	// QImode move
000092BA C8 D2              		[SP--]=R1	// QImode move
000092BB 40 F0 EF 8E        		call _write_data_12864	// call without return value
000092BD 41 00              		SP = SP + 1	//SP
0000223F                    	.debug
0000223F 2E 00 73 00        		.dw '.stabn 0x44,0,360,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         30 00 2C 00
         00 00 00 00
00002253 54 00 00 00        		.dd LM227-_write_cgram
00002255 0D 00 0A 00        		.dw 0x0d,0x0a
000092BE                    	.code
                            	LM227:
000092BE 40 92              		R1=0	// QImode move
000092BF C8 D2              		[SP--]=R1	// QImode move
000092C0 40 F0 EF 8E        		call _write_data_12864	// call without return value
000092C2 41 00              		SP = SP + 1	//SP
00002257                    	.debug
00002257 2E 00 73 00        		.dw '.stabn 0x44,0,361,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         31 00 2C 00
         00 00 00 00
0000226B 59 00 00 00        		.dd LM228-_write_cgram
0000226D 0D 00 0A 00        		.dw 0x0d,0x0a
000092C3                    	.code
                            	LM228:
000092C3 46 92              		R1=6	// QImode move
000092C4 C8 D2              		[SP--]=R1	// QImode move
000092C5 40 F0 EF 8E        		call _write_data_12864	// call without return value
000092C7 41 00              		SP = SP + 1	//SP
0000226F                    	.debug
0000226F 2E 00 73 00        		.dw '.stabn 0x44,0,363,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         33 00 2C 00
         00 00 00 00
00002283 5E 00 00 00        		.dd LM229-_write_cgram
00002285 0D 00 0A 00        		.dw 0x0d,0x0a
000092C8                    	.code
                            	LM229:
                            	LBE12:
00002287                    	.debug
00002287 2E 00 73 00        		.dw '.stabn 0x44,0,363,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         33 00 2C 00
         00 00 00 00
0000229B 5E 00 00 00        		.dd LM230-_write_cgram
0000229D 0D 00 0A 00        		.dw 0x0d,0x0a
000092C8                    	.code
                            	LM230:
                            	L86:
                            	
000092C8 42 00              		sp+=2
000092C9 88 98              		pop bp from [sp]
000092CA 90 9A              		retf
                            		.endp	// end of write_cgram
                            	
0000229F                    	.debug
0000229F 2E 00 73 00        		.dw '.stabs "table:p20",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 61 00
         62 00 6C 00
         65 00 3A 00
         70 00 32 00
         30 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
000092CB                    	.CODE
000022BD                    	.debug
000022BD 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000022CF 07 00 00 00        		.dd LBB12-_write_cgram
000022D1 0D 00 0A 00        		.dw 0x0d,0x0a
000092CB                    	.code
000022D3                    	.debug
000022D3 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000092CB                    	.CODE
000022EC                    	.debug
000022EC 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000022FE 5E 00 00 00        		.dd LBE12-_write_cgram
00002300 0D 00 0A 00        		.dw 0x0d,0x0a
000092CB                    	.code
00002302                    	.debug
00002302 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000230B 61 00 00 00        		.dd LME18-_write_cgram
0000230D 0D 00 0A 00        		.dw 0x0d,0x0a
000092CB                    	.code
                            	LME18:
                            	.external __BlockCopy
                            	.external __divi1
                            	.external __modi1
                            		.end
0 error(s), 0 warning(s).








