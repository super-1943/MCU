Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: C:\PROGRA~1\Sunplus\UNSPID~1.0\cc1.exe C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccclaaaa.i -fkeep-inline-functions -quiet -dumpbase Clock_Adjust.c -mglobal-var-iram -gstabs -Wall -o .\Debug/Clock_Adjust.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "F:/myproject/lingyang/sound/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 6D 00
         79 00 70 00
         72 00 6F 00
         6A 00 65 00
         63 00 74 00
         2F 00 6C 00
         69 00 6E 00
         67 00 79 00
         61 00 6E 00
         67 00 2F 00
         73 00 6F 00
         75 00 6E 00
         64 00 2F 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008D77                    	.code
00000035                    	.debug
00000035 2E 00 73 00        		.dw '.stabs "F:/myproject/lingyang/sound/Clock_Adjust.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 6D 00
         79 00 70 00
         72 00 6F 00
         6A 00 65 00
         63 00 74 00
         2F 00 6C 00
         69 00 6E 00
         67 00 79 00
         61 00 6E 00
         67 00 2F 00
         73 00 6F 00
         75 00 6E 00
         64 00 2F 00
         43 00 6C 00
         6F 00 63 00
         6B 00 5F 00
         41 00 64 00
         6A 00 75 00
         73 00 74 00
         2E 00 63 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008D77                    	.code
00008D77                    	.code
                            	Ltext0:
00000078                    	.debug
00000078 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
000000A4                    	.debug
000000A4 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
000000CA                    	.debug
000000CA 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D77                    	.CODE
00000105                    	.debug
00000105 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
00000135                    	.debug
00000135 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
0000016F                    	.debug
0000016F 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
000001AF                    	.debug
000001AF 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D77                    	.CODE
000001EE                    	.debug
000001EE 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
00000220                    	.debug
00000220 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
00000256                    	.debug
00000256 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
0000028C                    	.debug
0000028C 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D77                    	.CODE
000002BF                    	.debug
000002BF 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
000002E5                    	.debug
000002E5 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D77                    	.CODE
0000030C                    	.debug
0000030C 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
00000338                    	.debug
00000338 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D77                    	.CODE
00000379                    	.debug
00000379 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D77                    	.CODE
000003A8                    	.debug
000003A8 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
000003D8                    	.debug
000003D8 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008D77                    	.CODE
0000040D                    	.debug
0000040D 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
0000042D                    	.debug
0000042D 2E 00 73 00        		.dw '.stabs "SndIndex:T20=eS_0:0,S_1:1,S_2:2,\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 6E 00
         64 00 49 00
         6E 00 64 00
         65 00 78 00
         3A 00 54 00
         32 00 30 00
         3D 00 65 00
         53 00 5F 00
         30 00 3A 00
         30 00 2C 00
         53 00 5F 00
         31 00 3A 00
         31 00 2C 00
         53 00 5F 00
         32 00 3A 00
         32 00 2C 00
         5C 00 5C 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00000464 2E 00 73 00        		.DW '.stabs "S_3:3,S_4:4,S_5:5,S_6:6,\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 5F 00
         33 00 3A 00
         33 00 2C 00
         53 00 5F 00
         34 00 3A 00
         34 00 2C 00
         53 00 5F 00
         35 00 3A 00
         35 00 2C 00
         53 00 5F 00
         36 00 3A 00
         36 00 2C 00
         5C 00 5C 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00000493 2E 00 73 00        		.DW '.stabs "S_7:7,S_8:8,S_9:9,S_10:10,\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 5F 00
         37 00 3A 00
         37 00 2C 00
         53 00 5F 00
         38 00 3A 00
         38 00 2C 00
         53 00 5F 00
         39 00 3A 00
         39 00 2C 00
         53 00 5F 00
         31 00 30 00
         3A 00 31 00
         30 00 2C 00
         5C 00 5C 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000004C4 2E 00 73 00        		.DW '.stabs "S_11:11,S_12:12,S_Liang:13,S_DING:14,\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 5F 00
         31 00 31 00
         3A 00 31 00
         31 00 2C 00
         53 00 5F 00
         31 00 32 00
         3A 00 31 00
         32 00 2C 00
         53 00 5F 00
         4C 00 69 00
         61 00 6E 00
         67 00 3A 00
         31 00 33 00
         2C 00 53 00
         5F 00 44 00
         49 00 4E 00
         47 00 3A 00
         31 00 34 00
         2C 00 5C 00
         5C 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00000500 2E 00 73 00        		.DW '.stabs "S_XZSK:15,S_LC:16,S_SW:17,S_XW:18,\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 5F 00
         58 00 5A 00
         53 00 4B 00
         3A 00 31 00
         35 00 2C 00
         53 00 5F 00
         4C 00 43 00
         3A 00 31 00
         36 00 2C 00
         53 00 5F 00
         53 00 57 00
         3A 00 31 00
         37 00 2C 00
         53 00 5F 00
         58 00 57 00
         3A 00 31 00
         38 00 2C 00
         5C 00 5C 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00000539 2E 00 73 00        		.DW '.stabs "S_WS:19,S_Nian:20,S_Yue:21,S_Ri:22,\\",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 5F 00
         57 00 53 00
         3A 00 31 00
         39 00 2C 00
         53 00 5F 00
         4E 00 69 00
         61 00 6E 00
         3A 00 32 00
         30 00 2C 00
         53 00 5F 00
         59 00 75 00
         65 00 3A 00
         32 00 31 00
         2C 00 53 00
         5F 00 52 00
         69 00 3A 00
         32 00 32 00
         2C 00 5C 00
         5C 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00000573 2E 00 73 00        		.DW '.stabs "S_Dian:23,S_Fen:24,S_Miao:25,S_Zheng:26,;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 5F 00
         44 00 69 00
         61 00 6E 00
         3A 00 32 00
         33 00 2C 00
         53 00 5F 00
         46 00 65 00
         6E 00 3A 00
         32 00 34 00
         2C 00 53 00
         5F 00 4D 00
         69 00 61 00
         6F 00 3A 00
         32 00 35 00
         2C 00 53 00
         5F 00 5A 00
         68 00 65 00
         6E 00 67 00
         3A 00 32 00
         36 00 2C 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008D77                    	.CODE
00008D77                    	.code
000005B1                    	.debug
000005B1 2E 00 73 00        		.dw '.stabs "AdjustYear:F4",36,0,0,',0,0,offset _AdjustYear,seg _AdjustYear,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         6A 00 75 00
         73 00 74 00
         59 00 65 00
         61 00 72 00
         3A 00 46 00
         34 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008D77                    	.CODE
                            	.public _AdjustYear
                            	_AdjustYear:	.proc
000005D5                    	.debug
000005D5 2E 00 73 00        		.dw '.stabn 0x44,0,20,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         2C 00 00 00
         00 00      
000005E8 00 00 00 00        		.dd LM1-_AdjustYear
000005EA 0D 00 0A 00        		.dw 0x0d,0x0a
00008D77                    	.code
                            	LM1:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008D77 88 DA              		push bp to [sp]
00008D78 43 20              		sp-=3
00008D79 08 0B 01 00        		bp=sp+1
                            	
00008D7B 0D 03 06 00        		R1=BP+6
00008D7D 02 D2              		[bp+2]=R1	// QImode move
000005EC                    	.debug
000005EC 2E 00 73 00        		.dw '.stabn 0x44,0,21,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         2C 00 00 00
         00 00      
000005FF 07 00 00 00        		.dd LM2-_AdjustYear
00000601 0D 00 0A 00        		.dw 0x0d,0x0a
00008D7E                    	.code
                            	LM2:
                            	LBB2:
00000603                    	.debug
00000603 2E 00 73 00        		.dw '.stabn 0x44,0,22,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         2C 00 00 00
         00 00      
00000616 07 00 00 00        		.dd LM3-_AdjustYear
00000618 0D 00 0A 00        		.dw 0x0d,0x0a
00008D7E                    	.code
                            	LM3:
00008D7E 05 93              		R1=BP	// QImode move
00008D7F 0D 05 01 00        		R2=BP+1
00008D81 02 96              		R3=[bp+2]	// QImode move
00008D82 C3 92              		R1=[R3]	// QImode move
00008D83 02 99              		R4=R2	// QImode move
00008D84 C4 D2              		[R4]=R1	// QImode move
0000061A                    	.debug
0000061A 2E 00 73 00        		.dw '.stabn 0x44,0,24,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         2C 00 00 00
         00 00      
0000062D 0E 00 00 00        		.dd LM4-_AdjustYear
0000062F 0D 00 0A 00        		.dw 0x0d,0x0a
00008D85                    	.code
                            	LM4:
00008D85 05 93              		R1=BP	// QImode move
00008D86 0D 05 01 00        		R2=BP+1
00008D88 02 97              		R3=R2	// QImode move
00008D89 C3 92              		R1=[R3]	// QImode move
00008D8A C8 D2              		[SP--]=R1	// QImode move
00008D8B 40 F0 50 94        		call _PlayYear	// call without return value
00008D8D 41 00              		SP = SP + 1	//SP
00000631                    	.debug
00000631 2E 00 73 00        		.dw '.stabn 0x44,0,25,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         2C 00 00 00
         00 00      
00000644 17 00 00 00        		.dd LM5-_AdjustYear
00000646 0D 00 0A 00        		.dw 0x0d,0x0a
00008D8E                    	.code
                            	LM5:
                            	L3:
00008D8E 0F 9F 92 8D        		pc=L5	// Indirect jump
00008D90 0F 9F ED 8D        		pc=L4	// Indirect jump
                            	L5:
00000648                    	.debug
00000648 2E 00 73 00        		.dw '.stabn 0x44,0,27,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         2C 00 00 00
         00 00      
0000065B 1B 00 00 00        		.dd LM6-_AdjustYear
0000065D 0D 00 0A 00        		.dw 0x0d,0x0a
00008D92                    	.code
                            	LM6:
00008D92 41 92              		R1=1	// QImode move
00008D93 19 D3 12 70        		[28690]=R1	// QImode move
0000065F                    	.debug
0000065F 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
00000672 1E 00 00 00        		.dd LM7-_AdjustYear
00000674 0D 00 0A 00        		.dw 0x0d,0x0a
00008D95                    	.code
                            	LM7:
00008D95 40 F0 28 97        		call _Key_Get	// call with return value
00008D97 C5 D2              		[BP]=R1	// QImode move
00000676                    	.debug
00000676 2E 00 73 00        		.dw '.stabn 0x44,0,29,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         2C 00 00 00
         00 00      
00000689 21 00 00 00        		.dd LM8-_AdjustYear
0000068B 0D 00 0A 00        		.dw 0x0d,0x0a
00008D98                    	.code
                            	LM8:
00008D98 C5 92              		R1=[BP]	// QImode move
00008D99 42 42              		CMP R1,2	// QImode compare
00008D9A 1A 5E 01 EE        		NSJZ L8	//QImode EQ
         00 EE      
00008D9D 42 42              		CMP R1,2	// QImode compare
00008D9E 08 9E 01 EE        		NSJA L12	//QImode GTU
         00 EE      
00008DA1 41 42              		CMP R1,1	// QImode compare
00008DA2 0A 5E 01 EE        		NSJZ L7	//QImode EQ
         00 EE      
00008DA5 0F 9F E9 8D        		pc=L10	// Indirect jump
                            	L12:
00008DA7 44 42              		CMP R1,4	// QImode compare
00008DA8 26 5E 01 EE        		NSJZ L9	//QImode EQ
         00 EE      
00008DAB 0F 9F E9 8D        		pc=L10	// Indirect jump
                            	L7:
0000068D                    	.debug
0000068D 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
000006A0 36 00 00 00        		.dd LM9-_AdjustYear
000006A2 0D 00 0A 00        		.dw 0x0d,0x0a
00008DAD                    	.code
                            	LM9:
00008DAD 05 93              		R1=BP	// QImode move
00008DAE 0D 05 01 00        		R2=BP+1
00008DB0 02 99              		R4=R2	// QImode move
00008DB1 C4 96              		R3=[R4]	// QImode move
00008DB2 03 93              		R1=R3	// QImode move
00008DB3 0F 9F ED 8D        		pc=L2	// Indirect jump
                            	L8:
000006A4                    	.debug
000006A4 2E 00 73 00        		.dw '.stabn 0x44,0,34,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         2C 00 00 00
         00 00      
000006B7 3E 00 00 00        		.dd LM10-_AdjustYear
000006B9 0D 00 0A 00        		.dw 0x0d,0x0a
00008DB5                    	.code
                            	LM10:
00008DB5 05 93              		R1=BP	// QImode move
00008DB6 0D 05 01 00        		R2=BP+1
00008DB8 05 97              		R3=BP	// QImode move
00008DB9 0D 03 01 00        		R1=BP+1
00008DBB 05 95              		R2=BP	// QImode move
00008DBC 0D 07 01 00        		R3=BP+1
00008DBE 03 99              		R4=R3	// QImode move
00008DBF C4 94              		R2=[R4]	// QImode move
00008DC0 0A 07 01 00        		R3=R2+1
00008DC2 01 95              		R2=R1	// QImode move
00008DC3 C2 D6              		[R2]=R3	// QImode move
000006BB                    	.debug
000006BB 2E 00 73 00        		.dw '.stabn 0x44,0,35,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         2C 00 00 00
         00 00      
000006CE 4D 00 00 00        		.dd LM11-_AdjustYear
000006D0 0D 00 0A 00        		.dw 0x0d,0x0a
00008DC4                    	.code
                            	LM11:
00008DC4 05 93              		R1=BP	// QImode move
00008DC5 0D 05 01 00        		R2=BP+1
00008DC7 02 97              		R3=R2	// QImode move
00008DC8 C3 92              		R1=[R3]	// QImode move
00008DC9 C8 D2              		[SP--]=R1	// QImode move
00008DCA 40 F0 50 94        		call _PlayYear	// call without return value
00008DCC 41 00              		SP = SP + 1	//SP
000006D2                    	.debug
000006D2 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
000006E5 56 00 00 00        		.dd LM12-_AdjustYear
000006E7 0D 00 0A 00        		.dw 0x0d,0x0a
00008DCD                    	.code
                            	LM12:
00008DCD 0F 9F EB 8D        		pc=L6	// Indirect jump
                            	L9:
000006E9                    	.debug
000006E9 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
000006FC 58 00 00 00        		.dd LM13-_AdjustYear
000006FE 0D 00 0A 00        		.dw 0x0d,0x0a
00008DCF                    	.code
                            	LM13:
00008DCF 05 93              		R1=BP	// QImode move
00008DD0 0D 05 01 00        		R2=BP+1
00008DD2 05 97              		R3=BP	// QImode move
00008DD3 0D 03 01 00        		R1=BP+1
00008DD5 05 95              		R2=BP	// QImode move
00008DD6 0D 07 01 00        		R3=BP+1
00008DD8 03 99              		R4=R3	// QImode move
00008DD9 C4 94              		R2=[R4]	// QImode move
00008DDA 0A 07 FF FF        		R3=R2+(-1)
00008DDC 01 95              		R2=R1	// QImode move
00008DDD C2 D6              		[R2]=R3	// QImode move
00000700                    	.debug
00000700 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
00000713 67 00 00 00        		.dd LM14-_AdjustYear
00000715 0D 00 0A 00        		.dw 0x0d,0x0a
00008DDE                    	.code
                            	LM14:
00008DDE 05 93              		R1=BP	// QImode move
00008DDF 0D 05 01 00        		R2=BP+1
00008DE1 02 97              		R3=R2	// QImode move
00008DE2 C3 92              		R1=[R3]	// QImode move
00008DE3 C8 D2              		[SP--]=R1	// QImode move
00008DE4 40 F0 50 94        		call _PlayYear	// call without return value
00008DE6 41 00              		SP = SP + 1	//SP
00000717                    	.debug
00000717 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
0000072A 70 00 00 00        		.dd LM15-_AdjustYear
0000072C 0D 00 0A 00        		.dw 0x0d,0x0a
00008DE7                    	.code
                            	LM15:
00008DE7 0F 9F EB 8D        		pc=L6	// Indirect jump
                            	L10:
0000072E                    	.debug
0000072E 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
00000741 72 00 00 00        		.dd LM16-_AdjustYear
00000743 0D 00 0A 00        		.dw 0x0d,0x0a
00008DE9                    	.code
                            	LM16:
00008DE9 0F 9F EB 8D        		pc=L6	// Indirect jump
                            	L6:
00000745                    	.debug
00000745 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
00000758 74 00 00 00        		.dd LM17-_AdjustYear
0000075A 0D 00 0A 00        		.dw 0x0d,0x0a
00008DEB                    	.code
                            	LM17:
00008DEB 0F 9F 8E 8D        		pc=L3	// Indirect jump
                            	L4:
0000075C                    	.debug
0000075C 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
0000076F 76 00 00 00        		.dd LM18-_AdjustYear
00000771 0D 00 0A 00        		.dw 0x0d,0x0a
00008DED                    	.code
                            	LM18:
                            	LBE2:
00000773                    	.debug
00000773 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
00000786 76 00 00 00        		.dd LM19-_AdjustYear
00000788 0D 00 0A 00        		.dw 0x0d,0x0a
00008DED                    	.code
                            	LM19:
                            	L2:
                            	
00008DED 43 00              		sp+=3
00008DEE 88 98              		pop bp from [sp]
00008DEF 90 9A              		retf
                            		.endp	// end of AdjustYear
                            	
0000078A                    	.debug
0000078A 2E 00 73 00        		.dw '.stabs "Year:p4",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         59 00 65 00
         61 00 72 00
         3A 00 70 00
         34 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
00008DF0                    	.CODE
000007A6                    	.debug
000007A6 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000007B8 07 00 00 00        		.dd LBB2-_AdjustYear
000007BA 0D 00 0A 00        		.dw 0x0d,0x0a
00008DF0                    	.code
000007BC                    	.debug
000007BC 2E 00 73 00        		.dw '.stabs "KeyCode:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 43 00
         6F 00 64 00
         65 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008DF0                    	.CODE
000007DA                    	.debug
000007DA 2E 00 73 00        		.dw '.stabs "TempYear:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         59 00 65 00
         61 00 72 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
00008DF0                    	.CODE
000007F9                    	.debug
000007F9 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000080B 76 00 00 00        		.dd LBE2-_AdjustYear
0000080D 0D 00 0A 00        		.dw 0x0d,0x0a
00008DF0                    	.code
0000080F                    	.debug
0000080F 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000818 79 00 00 00        		.dd LME1-_AdjustYear
0000081A 0D 00 0A 00        		.dw 0x0d,0x0a
00008DF0                    	.code
                            	LME1:
00008DF0                    	.code
0000081C                    	.debug
0000081C 2E 00 73 00        		.dw '.stabs "AdjustMon:F4",36,0,0,',0,0,offset _AdjustMon,seg _AdjustMon,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         6A 00 75 00
         73 00 74 00
         4D 00 6F 00
         6E 00 3A 00
         46 00 34 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 79 00
         00 00 0D 00
         0A 00      
00008DF0                    	.CODE
                            	.public _AdjustMon
                            	_AdjustMon:	.proc
0000083F                    	.debug
0000083F 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
00000852 00 00 00 00        		.dd LM20-_AdjustMon
00000854 0D 00 0A 00        		.dw 0x0d,0x0a
00008DF0                    	.code
                            	LM20:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008DF0 88 DA              		push bp to [sp]
00008DF1 43 20              		sp-=3
00008DF2 08 0B 01 00        		bp=sp+1
                            	
00008DF4 0D 03 06 00        		R1=BP+6
00008DF6 02 D2              		[bp+2]=R1	// QImode move
00000856                    	.debug
00000856 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
00000869 07 00 00 00        		.dd LM21-_AdjustMon
0000086B 0D 00 0A 00        		.dw 0x0d,0x0a
00008DF7                    	.code
                            	LM21:
                            	LBB3:
0000086D                    	.debug
0000086D 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
00000880 07 00 00 00        		.dd LM22-_AdjustMon
00000882 0D 00 0A 00        		.dw 0x0d,0x0a
00008DF7                    	.code
                            	LM22:
00008DF7 05 93              		R1=BP	// QImode move
00008DF8 0D 05 01 00        		R2=BP+1
00008DFA 02 96              		R3=[bp+2]	// QImode move
00008DFB C3 92              		R1=[R3]	// QImode move
00008DFC 02 99              		R4=R2	// QImode move
00008DFD C4 D2              		[R4]=R1	// QImode move
00000884                    	.debug
00000884 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
00000897 0E 00 00 00        		.dd LM23-_AdjustMon
00000899 0D 00 0A 00        		.dw 0x0d,0x0a
00008DFE                    	.code
                            	LM23:
00008DFE 05 93              		R1=BP	// QImode move
00008DFF 0D 05 01 00        		R2=BP+1
00008E01 02 97              		R3=R2	// QImode move
00008E02 C3 92              		R1=[R3]	// QImode move
00008E03 C8 D2              		[SP--]=R1	// QImode move
00008E04 40 F0 A4 94        		call _PlayMon	// call without return value
00008E06 41 00              		SP = SP + 1	//SP
0000089B                    	.debug
0000089B 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
000008AE 17 00 00 00        		.dd LM24-_AdjustMon
000008B0 0D 00 0A 00        		.dw 0x0d,0x0a
00008E07                    	.code
                            	LM24:
                            	L18:
00008E07 0F 9F 0B 8E        		pc=L20	// Indirect jump
00008E09 0F 9F 84 8E        		pc=L19	// Indirect jump
                            	L20:
000008B2                    	.debug
000008B2 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
000008C5 1B 00 00 00        		.dd LM25-_AdjustMon
000008C7 0D 00 0A 00        		.dw 0x0d,0x0a
00008E0B                    	.code
                            	LM25:
00008E0B 41 92              		R1=1	// QImode move
00008E0C 19 D3 12 70        		[28690]=R1	// QImode move
000008C9                    	.debug
000008C9 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
000008DC 1E 00 00 00        		.dd LM26-_AdjustMon
000008DE 0D 00 0A 00        		.dw 0x0d,0x0a
00008E0E                    	.code
                            	LM26:
00008E0E 40 F0 28 97        		call _Key_Get	// call with return value
00008E10 C5 D2              		[BP]=R1	// QImode move
000008E0                    	.debug
000008E0 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
000008F3 21 00 00 00        		.dd LM27-_AdjustMon
000008F5 0D 00 0A 00        		.dw 0x0d,0x0a
00008E11                    	.code
                            	LM27:
00008E11 C5 92              		R1=[BP]	// QImode move
00008E12 42 42              		CMP R1,2	// QImode compare
00008E13 1A 5E 01 EE        		NSJZ L23	//QImode EQ
         00 EE      
00008E16 42 42              		CMP R1,2	// QImode compare
00008E17 08 9E 01 EE        		NSJA L29	//QImode GTU
         00 EE      
00008E1A 41 42              		CMP R1,1	// QImode compare
00008E1B 0A 5E 01 EE        		NSJZ L22	//QImode EQ
         00 EE      
00008E1E 0F 9F 80 8E        		pc=L27	// Indirect jump
                            	L29:
00008E20 44 42              		CMP R1,4	// QImode compare
00008E21 35 5E 01 EE        		NSJZ L25	//QImode EQ
         00 EE      
00008E24 0F 9F 80 8E        		pc=L27	// Indirect jump
                            	L22:
000008F7                    	.debug
000008F7 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
0000090A 36 00 00 00        		.dd LM28-_AdjustMon
0000090C 0D 00 0A 00        		.dw 0x0d,0x0a
00008E26                    	.code
                            	LM28:
00008E26 05 93              		R1=BP	// QImode move
00008E27 0D 05 01 00        		R2=BP+1
00008E29 02 99              		R4=R2	// QImode move
00008E2A C4 96              		R3=[R4]	// QImode move
00008E2B 03 93              		R1=R3	// QImode move
00008E2C 0F 9F 84 8E        		pc=L17	// Indirect jump
                            	L23:
0000090E                    	.debug
0000090E 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
00000921 3E 00 00 00        		.dd LM29-_AdjustMon
00000923 0D 00 0A 00        		.dw 0x0d,0x0a
00008E2E                    	.code
                            	LM29:
00008E2E 05 93              		R1=BP	// QImode move
00008E2F 0D 05 01 00        		R2=BP+1
00008E31 05 97              		R3=BP	// QImode move
00008E32 0D 03 01 00        		R1=BP+1
00008E34 05 95              		R2=BP	// QImode move
00008E35 0D 07 01 00        		R3=BP+1
00008E37 03 99              		R4=R3	// QImode move
00008E38 C4 94              		R2=[R4]	// QImode move
00008E39 0A 07 01 00        		R3=R2+1
00008E3B 01 95              		R2=R1	// QImode move
00008E3C C2 D6              		[R2]=R3	// QImode move
00000925                    	.debug
00000925 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
00000938 4D 00 00 00        		.dd LM30-_AdjustMon
0000093A 0D 00 0A 00        		.dw 0x0d,0x0a
00008E3D                    	.code
                            	LM30:
00008E3D 05 93              		R1=BP	// QImode move
00008E3E 0D 05 01 00        		R2=BP+1
00008E40 02 97              		R3=R2	// QImode move
00008E41 C3 92              		R1=[R3]	// QImode move
00008E42 4C 42              		CMP R1,12	// QImode compare
00008E43 08 8E 01 EE        		NSJNA L24	//QImode LEU
         00 EE      
00008E46 05 93              		R1=BP	// QImode move
00008E47 0D 05 01 00        		R2=BP+1
00008E49 41 92              		R1=1	// QImode move
00008E4A 02 99              		R4=R2	// QImode move
00008E4B C4 D2              		[R4]=R1	// QImode move
                            	L24:
0000093C                    	.debug
0000093C 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
0000094F 5C 00 00 00        		.dd LM31-_AdjustMon
00000951 0D 00 0A 00        		.dw 0x0d,0x0a
00008E4C                    	.code
                            	LM31:
00008E4C 05 93              		R1=BP	// QImode move
00008E4D 0D 05 01 00        		R2=BP+1
00008E4F 02 97              		R3=R2	// QImode move
00008E50 C3 92              		R1=[R3]	// QImode move
00008E51 C8 D2              		[SP--]=R1	// QImode move
00008E52 40 F0 A4 94        		call _PlayMon	// call without return value
00008E54 41 00              		SP = SP + 1	//SP
00000953                    	.debug
00000953 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00000966 65 00 00 00        		.dd LM32-_AdjustMon
00000968 0D 00 0A 00        		.dw 0x0d,0x0a
00008E55                    	.code
                            	LM32:
00008E55 0F 9F 82 8E        		pc=L21	// Indirect jump
                            	L25:
0000096A                    	.debug
0000096A 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
0000097D 67 00 00 00        		.dd LM33-_AdjustMon
0000097F 0D 00 0A 00        		.dw 0x0d,0x0a
00008E57                    	.code
                            	LM33:
00008E57 05 93              		R1=BP	// QImode move
00008E58 0D 05 01 00        		R2=BP+1
00008E5A 05 97              		R3=BP	// QImode move
00008E5B 0D 03 01 00        		R1=BP+1
00008E5D 05 95              		R2=BP	// QImode move
00008E5E 0D 07 01 00        		R3=BP+1
00008E60 03 99              		R4=R3	// QImode move
00008E61 C4 94              		R2=[R4]	// QImode move
00008E62 0A 07 FF FF        		R3=R2+(-1)
00008E64 01 95              		R2=R1	// QImode move
00008E65 C2 D6              		[R2]=R3	// QImode move
00000981                    	.debug
00000981 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
00000994 76 00 00 00        		.dd LM34-_AdjustMon
00000996 0D 00 0A 00        		.dw 0x0d,0x0a
00008E66                    	.code
                            	LM34:
00008E66 05 93              		R1=BP	// QImode move
00008E67 0D 05 01 00        		R2=BP+1
00008E69 02 97              		R3=R2	// QImode move
00008E6A C3 92              		R1=[R3]	// QImode move
00008E6B 40 42              		CMP R1,0	// QImode test
00008E6C 08 4E 01 EE        		NSJNZ L26	//QImode NE
         00 EE      
00008E6F 05 93              		R1=BP	// QImode move
00008E70 0D 05 01 00        		R2=BP+1
00008E72 4C 92              		R1=12	// QImode move
00008E73 02 99              		R4=R2	// QImode move
00008E74 C4 D2              		[R4]=R1	// QImode move
                            	L26:
00000998                    	.debug
00000998 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
000009AB 85 00 00 00        		.dd LM35-_AdjustMon
000009AD 0D 00 0A 00        		.dw 0x0d,0x0a
00008E75                    	.code
                            	LM35:
00008E75 05 93              		R1=BP	// QImode move
00008E76 0D 05 01 00        		R2=BP+1
00008E78 02 97              		R3=R2	// QImode move
00008E79 C3 92              		R1=[R3]	// QImode move
00008E7A C8 D2              		[SP--]=R1	// QImode move
00008E7B 40 F0 A4 94        		call _PlayMon	// call without return value
00008E7D 41 00              		SP = SP + 1	//SP
000009AF                    	.debug
000009AF 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
000009C2 8E 00 00 00        		.dd LM36-_AdjustMon
000009C4 0D 00 0A 00        		.dw 0x0d,0x0a
00008E7E                    	.code
                            	LM36:
00008E7E 0F 9F 82 8E        		pc=L21	// Indirect jump
                            	L27:
000009C6                    	.debug
000009C6 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
000009D9 90 00 00 00        		.dd LM37-_AdjustMon
000009DB 0D 00 0A 00        		.dw 0x0d,0x0a
00008E80                    	.code
                            	LM37:
00008E80 0F 9F 82 8E        		pc=L21	// Indirect jump
                            	L21:
000009DD                    	.debug
000009DD 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
000009F0 92 00 00 00        		.dd LM38-_AdjustMon
000009F2 0D 00 0A 00        		.dw 0x0d,0x0a
00008E82                    	.code
                            	LM38:
00008E82 0F 9F 07 8E        		pc=L18	// Indirect jump
                            	L19:
000009F4                    	.debug
000009F4 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000A07 94 00 00 00        		.dd LM39-_AdjustMon
00000A09 0D 00 0A 00        		.dw 0x0d,0x0a
00008E84                    	.code
                            	LM39:
                            	LBE3:
00000A0B                    	.debug
00000A0B 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000A1E 94 00 00 00        		.dd LM40-_AdjustMon
00000A20 0D 00 0A 00        		.dw 0x0d,0x0a
00008E84                    	.code
                            	LM40:
                            	L17:
                            	
00008E84 43 00              		sp+=3
00008E85 88 98              		pop bp from [sp]
00008E86 90 9A              		retf
                            		.endp	// end of AdjustMon
                            	
00000A22                    	.debug
00000A22 2E 00 73 00        		.dw '.stabs "Mon:p4",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6F 00
         6E 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
00008E87                    	.CODE
00000A3D                    	.debug
00000A3D 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000A4F 07 00 00 00        		.dd LBB3-_AdjustMon
00000A51 0D 00 0A 00        		.dw 0x0d,0x0a
00008E87                    	.code
00000A53                    	.debug
00000A53 2E 00 73 00        		.dw '.stabs "KeyCode:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 43 00
         6F 00 64 00
         65 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008E87                    	.CODE
00000A71                    	.debug
00000A71 2E 00 73 00        		.dw '.stabs "TempMon:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         4D 00 6F 00
         6E 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
00008E87                    	.CODE
00000A8F                    	.debug
00000A8F 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000AA1 94 00 00 00        		.dd LBE3-_AdjustMon
00000AA3 0D 00 0A 00        		.dw 0x0d,0x0a
00008E87                    	.code
00000AA5                    	.debug
00000AA5 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000AAE 97 00 00 00        		.dd LME2-_AdjustMon
00000AB0 0D 00 0A 00        		.dw 0x0d,0x0a
00008E87                    	.code
                            	LME2:
00008E87                    	.code
00000AB2                    	.debug
00000AB2 2E 00 73 00        		.dw '.stabs "AdjustDay:F4",36,0,0,',0,0,offset _AdjustDay,seg _AdjustDay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         6A 00 75 00
         73 00 74 00
         44 00 61 00
         79 00 3A 00
         46 00 34 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 10 01
         00 00 0D 00
         0A 00      
00008E87                    	.CODE
                            	.public _AdjustDay
                            	_AdjustDay:	.proc
00000AD5                    	.debug
00000AD5 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000AE8 00 00 00 00        		.dd LM41-_AdjustDay
00000AEA 0D 00 0A 00        		.dw 0x0d,0x0a
00008E87                    	.code
                            	LM41:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008E87 88 DA              		push bp to [sp]
00008E88 43 20              		sp-=3
00008E89 08 0B 01 00        		bp=sp+1
                            	
00008E8B 0D 03 06 00        		R1=BP+6
00008E8D 02 D2              		[bp+2]=R1	// QImode move
00000AEC                    	.debug
00000AEC 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
00000AFF 07 00 00 00        		.dd LM42-_AdjustDay
00000B01 0D 00 0A 00        		.dw 0x0d,0x0a
00008E8E                    	.code
                            	LM42:
                            	LBB4:
00000B03                    	.debug
00000B03 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000B16 07 00 00 00        		.dd LM43-_AdjustDay
00000B18 0D 00 0A 00        		.dw 0x0d,0x0a
00008E8E                    	.code
                            	LM43:
00008E8E 05 95              		R2=BP	// QImode move
00008E8F 0D 03 01 00        		R1=BP+1
00008E91 02 94              		R2=[bp+2]	// QImode move
00008E92 02 94              		R2=[bp+2]	// QImode move
00008E93 0A 07 02 00        		R3=R2+2
00008E95 03 99              		R4=R3	// QImode move
00008E96 C4 94              		R2=[R4]	// QImode move
00008E97 01 97              		R3=R1	// QImode move
00008E98 C3 D4              		[R3]=R2	// QImode move
00000B1A                    	.debug
00000B1A 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000B2D 12 00 00 00        		.dd LM44-_AdjustDay
00000B2F 0D 00 0A 00        		.dw 0x0d,0x0a
00008E99                    	.code
                            	LM44:
00008E99 05 95              		R2=BP	// QImode move
00008E9A 0D 03 01 00        		R1=BP+1
00008E9C 02 94              		R2=[bp+2]	// QImode move
00008E9D 02 98              		R4=[bp+2]	// QImode move
00008E9E 0C 07 01 00        		R3=R4+1
00008EA0 03 95              		R2=R3	// QImode move
00008EA1 C2 98              		R4=[R2]	// QImode move
00008EA2 0C 05 FF FF        		R2=R4+(-1)
00008EA4 0C 99 59 87        		R4=_Month_Day	// QImode move
00008EA6 04 97              		R3=R4	// QImode move
00008EA7 02 07              		R3 = R3 + R2	//addqi3
00008EA8 01 99              		R4=R1	// QImode move
00008EA9 C4 92              		R1=[R4]	// QImode move
00008EAA 03 95              		R2=R3	// QImode move
00008EAB C2 42              		CMP R1,[R2]	// QImode compare
00008EAC 21 8E 01 EE        		NSJNA L37	//QImode LEU
         00 EE      
00000B31                    	.debug
00000B31 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
00000B44 28 00 00 00        		.dd LM45-_AdjustDay
00000B46 0D 00 0A 00        		.dw 0x0d,0x0a
00008EAF                    	.code
                            	LM45:
00008EAF 05 93              		R1=BP	// QImode move
00008EB0 0D 05 01 00        		R2=BP+1
00008EB2 02 97              		R3=R2	// QImode move
00008EB3 C3 92              		R1=[R3]	// QImode move
00008EB4 5D 42              		CMP R1,29	// QImode compare
00008EB5 12 4E 01 EE        		NSJNZ L38	//QImode NE
         00 EE      
00000B48                    	.debug
00000B48 2E 00 73 00        		.dw '.stabn 0x44,0,100,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         30 00 2C 00
         00 00 00 00
00000B5C 31 00 00 00        		.dd LM46-_AdjustDay
00000B5E 0D 00 0A 00        		.dw 0x0d,0x0a
00008EB8                    	.code
                            	LM46:
00008EB8 02 98              		R4=[bp+2]	// QImode move
00008EB9 C4 98              		R4=[R4]	// QImode move
00008EBA 0C B3 03 00        		R1=R4&3
00008EBC 40 42              		CMP R1,0	// QImode test
00008EBD 08 5E 01 EE        		NSJZ L39	//QImode EQ
         00 EE      
00008EC0 05 93              		R1=BP	// QImode move
00008EC1 0D 05 01 00        		R2=BP+1
00008EC3 41 92              		R1=1	// QImode move
00008EC4 02 97              		R3=R2	// QImode move
00008EC5 C3 D2              		[R3]=R1	// QImode move
                            	L39:
00000B60                    	.debug
00000B60 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000B74 3F 00 00 00        		.dd LM47-_AdjustDay
00000B76 0D 00 0A 00        		.dw 0x0d,0x0a
00008EC6                    	.code
                            	LM47:
00008EC6 0F 9F CE 8E        		pc=L37	// Indirect jump
                            	L38:
00000B78                    	.debug
00000B78 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
00000B8C 41 00 00 00        		.dd LM48-_AdjustDay
00000B8E 0D 00 0A 00        		.dw 0x0d,0x0a
00008EC8                    	.code
                            	LM48:
00008EC8 05 93              		R1=BP	// QImode move
00008EC9 0D 05 01 00        		R2=BP+1
00008ECB 41 92              		R1=1	// QImode move
00008ECC 02 99              		R4=R2	// QImode move
00008ECD C4 D2              		[R4]=R1	// QImode move
                            	L40:
                            	L37:
00000B90                    	.debug
00000B90 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00000BA4 47 00 00 00        		.dd LM49-_AdjustDay
00000BA6 0D 00 0A 00        		.dw 0x0d,0x0a
00008ECE                    	.code
                            	LM49:
00008ECE 05 93              		R1=BP	// QImode move
00008ECF 0D 05 01 00        		R2=BP+1
00008ED1 02 97              		R3=R2	// QImode move
00008ED2 C3 92              		R1=[R3]	// QImode move
00008ED3 C8 D2              		[SP--]=R1	// QImode move
00008ED4 40 F0 B9 94        		call _PlayDay	// call without return value
00008ED6 41 00              		SP = SP + 1	//SP
00000BA8                    	.debug
00000BA8 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000BBC 50 00 00 00        		.dd LM50-_AdjustDay
00000BBE 0D 00 0A 00        		.dw 0x0d,0x0a
00008ED7                    	.code
                            	LM50:
                            	L41:
00008ED7 0F 9F DB 8E        		pc=L43	// Indirect jump
00008ED9 0F 9F A1 8F        		pc=L42	// Indirect jump
                            	L43:
00000BC0                    	.debug
00000BC0 2E 00 73 00        		.dw '.stabn 0x44,0,108,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         38 00 2C 00
         00 00 00 00
00000BD4 54 00 00 00        		.dd LM51-_AdjustDay
00000BD6 0D 00 0A 00        		.dw 0x0d,0x0a
00008EDB                    	.code
                            	LM51:
00008EDB 41 92              		R1=1	// QImode move
00008EDC 19 D3 12 70        		[28690]=R1	// QImode move
00000BD8                    	.debug
00000BD8 2E 00 73 00        		.dw '.stabn 0x44,0,109,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         39 00 2C 00
         00 00 00 00
00000BEC 57 00 00 00        		.dd LM52-_AdjustDay
00000BEE 0D 00 0A 00        		.dw 0x0d,0x0a
00008EDE                    	.code
                            	LM52:
00008EDE 40 F0 28 97        		call _Key_Get	// call with return value
00008EE0 C5 D2              		[BP]=R1	// QImode move
00000BF0                    	.debug
00000BF0 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000C04 5A 00 00 00        		.dd LM53-_AdjustDay
00000C06 0D 00 0A 00        		.dw 0x0d,0x0a
00008EE1                    	.code
                            	LM53:
00008EE1 C5 92              		R1=[BP]	// QImode move
00008EE2 42 42              		CMP R1,2	// QImode compare
00008EE3 1A 5E 01 EE        		NSJZ L46	//QImode EQ
         00 EE      
00008EE6 42 42              		CMP R1,2	// QImode compare
00008EE7 08 9E 01 EE        		NSJA L57	//QImode GTU
         00 EE      
00008EEA 41 42              		CMP R1,1	// QImode compare
00008EEB 0A 5E 01 EE        		NSJZ L45	//QImode EQ
         00 EE      
00008EEE 0F 9F 9D 8F        		pc=L55	// Indirect jump
                            	L57:
00008EF0 44 42              		CMP R1,4	// QImode compare
00008EF1 02 4E 0F 9F        		NSJZ L51	//QImode EQ
         4D 8F      
00008EF4 0F 9F 9D 8F        		pc=L55	// Indirect jump
                            	L45:
00000C08                    	.debug
00000C08 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
00000C1C 6F 00 00 00        		.dd LM54-_AdjustDay
00000C1E 0D 00 0A 00        		.dw 0x0d,0x0a
00008EF6                    	.code
                            	LM54:
00008EF6 05 93              		R1=BP	// QImode move
00008EF7 0D 05 01 00        		R2=BP+1
00008EF9 02 99              		R4=R2	// QImode move
00008EFA C4 96              		R3=[R4]	// QImode move
00008EFB 03 93              		R1=R3	// QImode move
00008EFC 0F 9F A1 8F        		pc=L36	// Indirect jump
                            	L46:
00000C20                    	.debug
00000C20 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
00000C34 77 00 00 00        		.dd LM55-_AdjustDay
00000C36 0D 00 0A 00        		.dw 0x0d,0x0a
00008EFE                    	.code
                            	LM55:
00008EFE 05 93              		R1=BP	// QImode move
00008EFF 0D 05 01 00        		R2=BP+1
00008F01 05 97              		R3=BP	// QImode move
00008F02 0D 03 01 00        		R1=BP+1
00008F04 05 95              		R2=BP	// QImode move
00008F05 0D 07 01 00        		R3=BP+1
00008F07 03 99              		R4=R3	// QImode move
00008F08 C4 94              		R2=[R4]	// QImode move
00008F09 0A 07 01 00        		R3=R2+1
00008F0B 01 95              		R2=R1	// QImode move
00008F0C C2 D6              		[R2]=R3	// QImode move
00000C38                    	.debug
00000C38 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
00000C4C 86 00 00 00        		.dd LM56-_AdjustDay
00000C4E 0D 00 0A 00        		.dw 0x0d,0x0a
00008F0D                    	.code
                            	LM56:
00008F0D 05 95              		R2=BP	// QImode move
00008F0E 0D 03 01 00        		R1=BP+1
00008F10 02 94              		R2=[bp+2]	// QImode move
00008F11 02 98              		R4=[bp+2]	// QImode move
00008F12 0C 07 01 00        		R3=R4+1
00008F14 03 95              		R2=R3	// QImode move
00008F15 C2 98              		R4=[R2]	// QImode move
00008F16 0C 05 FF FF        		R2=R4+(-1)
00008F18 0C 99 59 87        		R4=_Month_Day	// QImode move
00008F1A 04 97              		R3=R4	// QImode move
00008F1B 02 07              		R3 = R3 + R2	//addqi3
00008F1C 01 99              		R4=R1	// QImode move
00008F1D C4 92              		R1=[R4]	// QImode move
00008F1E 03 95              		R2=R3	// QImode move
00008F1F C2 42              		CMP R1,[R2]	// QImode compare
00008F20 21 8E 01 EE        		NSJNA L47	//QImode LEU
         00 EE      
00000C50                    	.debug
00000C50 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000C64 9C 00 00 00        		.dd LM57-_AdjustDay
00000C66 0D 00 0A 00        		.dw 0x0d,0x0a
00008F23                    	.code
                            	LM57:
00008F23 05 93              		R1=BP	// QImode move
00008F24 0D 05 01 00        		R2=BP+1
00008F26 02 97              		R3=R2	// QImode move
00008F27 C3 92              		R1=[R3]	// QImode move
00008F28 5D 42              		CMP R1,29	// QImode compare
00008F29 12 4E 01 EE        		NSJNZ L48	//QImode NE
         00 EE      
00000C68                    	.debug
00000C68 2E 00 73 00        		.dw '.stabn 0x44,0,120,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         30 00 2C 00
         00 00 00 00
00000C7C A5 00 00 00        		.dd LM58-_AdjustDay
00000C7E 0D 00 0A 00        		.dw 0x0d,0x0a
00008F2C                    	.code
                            	LM58:
00008F2C 02 98              		R4=[bp+2]	// QImode move
00008F2D C4 98              		R4=[R4]	// QImode move
00008F2E 0C B3 03 00        		R1=R4&3
00008F30 40 42              		CMP R1,0	// QImode test
00008F31 08 5E 01 EE        		NSJZ L49	//QImode EQ
         00 EE      
00008F34 05 93              		R1=BP	// QImode move
00008F35 0D 05 01 00        		R2=BP+1
00008F37 41 92              		R1=1	// QImode move
00008F38 02 97              		R3=R2	// QImode move
00008F39 C3 D2              		[R3]=R1	// QImode move
                            	L49:
00000C80                    	.debug
00000C80 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
00000C94 B3 00 00 00        		.dd LM59-_AdjustDay
00000C96 0D 00 0A 00        		.dw 0x0d,0x0a
00008F3A                    	.code
                            	LM59:
00008F3A 0F 9F 42 8F        		pc=L47	// Indirect jump
                            	L48:
00000C98                    	.debug
00000C98 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000CAC B5 00 00 00        		.dd LM60-_AdjustDay
00000CAE 0D 00 0A 00        		.dw 0x0d,0x0a
00008F3C                    	.code
                            	LM60:
00008F3C 05 93              		R1=BP	// QImode move
00008F3D 0D 05 01 00        		R2=BP+1
00008F3F 41 92              		R1=1	// QImode move
00008F40 02 99              		R4=R2	// QImode move
00008F41 C4 D2              		[R4]=R1	// QImode move
                            	L50:
                            	L47:
00000CB0                    	.debug
00000CB0 2E 00 73 00        		.dw '.stabn 0x44,0,124,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         34 00 2C 00
         00 00 00 00
00000CC4 BB 00 00 00        		.dd LM61-_AdjustDay
00000CC6 0D 00 0A 00        		.dw 0x0d,0x0a
00008F42                    	.code
                            	LM61:
00008F42 05 93              		R1=BP	// QImode move
00008F43 0D 05 01 00        		R2=BP+1
00008F45 02 97              		R3=R2	// QImode move
00008F46 C3 92              		R1=[R3]	// QImode move
00008F47 C8 D2              		[SP--]=R1	// QImode move
00008F48 40 F0 B9 94        		call _PlayDay	// call without return value
00008F4A 41 00              		SP = SP + 1	//SP
00000CC8                    	.debug
00000CC8 2E 00 73 00        		.dw '.stabn 0x44,0,125,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         35 00 2C 00
         00 00 00 00
00000CDC C4 00 00 00        		.dd LM62-_AdjustDay
00000CDE 0D 00 0A 00        		.dw 0x0d,0x0a
00008F4B                    	.code
                            	LM62:
00008F4B 0F 9F 9F 8F        		pc=L44	// Indirect jump
                            	L51:
00000CE0                    	.debug
00000CE0 2E 00 73 00        		.dw '.stabn 0x44,0,127,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         37 00 2C 00
         00 00 00 00
00000CF4 C6 00 00 00        		.dd LM63-_AdjustDay
00000CF6 0D 00 0A 00        		.dw 0x0d,0x0a
00008F4D                    	.code
                            	LM63:
00008F4D 05 93              		R1=BP	// QImode move
00008F4E 0D 05 01 00        		R2=BP+1
00008F50 05 97              		R3=BP	// QImode move
00008F51 0D 03 01 00        		R1=BP+1
00008F53 05 95              		R2=BP	// QImode move
00008F54 0D 07 01 00        		R3=BP+1
00008F56 03 99              		R4=R3	// QImode move
00008F57 C4 94              		R2=[R4]	// QImode move
00008F58 0A 07 FF FF        		R3=R2+(-1)
00008F5A 01 95              		R2=R1	// QImode move
00008F5B C2 D6              		[R2]=R3	// QImode move
00000CF8                    	.debug
00000CF8 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
00000D0C D5 00 00 00        		.dd LM64-_AdjustDay
00000D0E 0D 00 0A 00        		.dw 0x0d,0x0a
00008F5C                    	.code
                            	LM64:
00008F5C 05 93              		R1=BP	// QImode move
00008F5D 0D 05 01 00        		R2=BP+1
00008F5F 02 97              		R3=R2	// QImode move
00008F60 C3 92              		R1=[R3]	// QImode move
00008F61 40 42              		CMP R1,0	// QImode test
00008F62 2F 4E 01 EE        		NSJNZ L52	//QImode NE
         00 EE      
00000D10                    	.debug
00000D10 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
00000D24 DE 00 00 00        		.dd LM65-_AdjustDay
00000D26 0D 00 0A 00        		.dw 0x0d,0x0a
00008F65                    	.code
                            	LM65:
00008F65 02 92              		R1=[bp+2]	// QImode move
00008F66 02 98              		R4=[bp+2]	// QImode move
00008F67 0C 05 01 00        		R2=R4+1
00008F69 02 97              		R3=R2	// QImode move
00008F6A C3 92              		R1=[R3]	// QImode move
00008F6B 42 42              		CMP R1,2	// QImode compare
00008F6C 12 4E 01 EE        		NSJNZ L53	//QImode NE
         00 EE      
00008F6F 02 98              		R4=[bp+2]	// QImode move
00008F70 C4 98              		R4=[R4]	// QImode move
00008F71 0C B3 03 00        		R1=R4&3
00008F73 40 42              		CMP R1,0	// QImode test
00008F74 0A 4E 01 EE        		NSJNZ L53	//QImode NE
         00 EE      
00008F77 05 93              		R1=BP	// QImode move
00008F78 0D 05 01 00        		R2=BP+1
00008F7A 5D 92              		R1=29	// QImode move
00008F7B 02 97              		R3=R2	// QImode move
00008F7C C3 D2              		[R3]=R1	// QImode move
00008F7D 0F 9F 92 8F        		pc=L52	// Indirect jump
                            	L53:
00000D28                    	.debug
00000D28 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000D3C F8 00 00 00        		.dd LM66-_AdjustDay
00000D3E 0D 00 0A 00        		.dw 0x0d,0x0a
00008F7F                    	.code
                            	LM66:
00008F7F 05 95              		R2=BP	// QImode move
00008F80 0D 03 01 00        		R1=BP+1
00008F82 02 94              		R2=[bp+2]	// QImode move
00008F83 02 98              		R4=[bp+2]	// QImode move
00008F84 0C 07 01 00        		R3=R4+1
00008F86 03 95              		R2=R3	// QImode move
00008F87 C2 98              		R4=[R2]	// QImode move
00008F88 0C 05 FF FF        		R2=R4+(-1)
00008F8A 0C 99 59 87        		R4=_Month_Day	// QImode move
00008F8C 04 97              		R3=R4	// QImode move
00008F8D 02 07              		R3 = R3 + R2	//addqi3
00008F8E 03 99              		R4=R3	// QImode move
00008F8F C4 94              		R2=[R4]	// QImode move
00008F90 01 97              		R3=R1	// QImode move
00008F91 C3 D4              		[R3]=R2	// QImode move
                            	L54:
                            	L52:
00000D40                    	.debug
00000D40 2E 00 73 00        		.dw '.stabn 0x44,0,133,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         33 00 2C 00
         00 00 00 00
00000D54 0B 01 00 00        		.dd LM67-_AdjustDay
00000D56 0D 00 0A 00        		.dw 0x0d,0x0a
00008F92                    	.code
                            	LM67:
00008F92 05 93              		R1=BP	// QImode move
00008F93 0D 05 01 00        		R2=BP+1
00008F95 02 99              		R4=R2	// QImode move
00008F96 C4 92              		R1=[R4]	// QImode move
00008F97 C8 D2              		[SP--]=R1	// QImode move
00008F98 40 F0 B9 94        		call _PlayDay	// call without return value
00008F9A 41 00              		SP = SP + 1	//SP
00000D58                    	.debug
00000D58 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
00000D6C 14 01 00 00        		.dd LM68-_AdjustDay
00000D6E 0D 00 0A 00        		.dw 0x0d,0x0a
00008F9B                    	.code
                            	LM68:
00008F9B 0F 9F 9F 8F        		pc=L44	// Indirect jump
                            	L55:
00000D70                    	.debug
00000D70 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
00000D84 16 01 00 00        		.dd LM69-_AdjustDay
00000D86 0D 00 0A 00        		.dw 0x0d,0x0a
00008F9D                    	.code
                            	LM69:
00008F9D 0F 9F 9F 8F        		pc=L44	// Indirect jump
                            	L44:
00000D88                    	.debug
00000D88 2E 00 73 00        		.dw '.stabn 0x44,0,138,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         38 00 2C 00
         00 00 00 00
00000D9C 18 01 00 00        		.dd LM70-_AdjustDay
00000D9E 0D 00 0A 00        		.dw 0x0d,0x0a
00008F9F                    	.code
                            	LM70:
00008F9F 0F 9F D7 8E        		pc=L41	// Indirect jump
                            	L42:
00000DA0                    	.debug
00000DA0 2E 00 73 00        		.dw '.stabn 0x44,0,139,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         39 00 2C 00
         00 00 00 00
00000DB4 1A 01 00 00        		.dd LM71-_AdjustDay
00000DB6 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA1                    	.code
                            	LM71:
                            	LBE4:
00000DB8                    	.debug
00000DB8 2E 00 73 00        		.dw '.stabn 0x44,0,139,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         39 00 2C 00
         00 00 00 00
00000DCC 1A 01 00 00        		.dd LM72-_AdjustDay
00000DCE 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA1                    	.code
                            	LM72:
                            	L36:
                            	
00008FA1 43 00              		sp+=3
00008FA2 88 98              		pop bp from [sp]
00008FA3 90 9A              		retf
                            		.endp	// end of AdjustDay
                            	
00000DD0                    	.debug
00000DD0 2E 00 73 00        		.dw '.stabs "Year:p4",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         59 00 65 00
         61 00 72 00
         3A 00 70 00
         34 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
00008FA4                    	.CODE
00000DEC                    	.debug
00000DEC 2E 00 73 00        		.dw '.stabs "Mon:p4",160,0,0,7',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 6F 00
         6E 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         37 00 0D 00
         0A 00      
00008FA4                    	.CODE
00000E07                    	.debug
00000E07 2E 00 73 00        		.dw '.stabs "Day:p4",160,0,0,8',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         44 00 61 00
         79 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         38 00 0D 00
         0A 00      
00008FA4                    	.CODE
00000E22                    	.debug
00000E22 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E34 07 00 00 00        		.dd LBB4-_AdjustDay
00000E36 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA4                    	.code
00000E38                    	.debug
00000E38 2E 00 73 00        		.dw '.stabs "KeyCode:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 43 00
         6F 00 64 00
         65 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008FA4                    	.CODE
00000E56                    	.debug
00000E56 2E 00 73 00        		.dw '.stabs "TempDay:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         44 00 61 00
         79 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
00008FA4                    	.CODE
00000E74                    	.debug
00000E74 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E86 1A 01 00 00        		.dd LBE4-_AdjustDay
00000E88 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA4                    	.code
00000E8A                    	.debug
00000E8A 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000E93 1D 01 00 00        		.dd LME3-_AdjustDay
00000E95 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA4                    	.code
                            	LME3:
00008FA4                    	.code
00000E97                    	.debug
00000E97 2E 00 73 00        		.dw '.stabs "AdjustHour:F4",36,0,0,',0,0,offset _AdjustHour,seg _AdjustHour,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         6A 00 75 00
         73 00 74 00
         48 00 6F 00
         75 00 72 00
         3A 00 46 00
         34 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         2D 02 00 00
         0D 00 0A 00
00008FA4                    	.CODE
                            	.public _AdjustHour
                            	_AdjustHour:	.proc
00000EBB                    	.debug
00000EBB 2E 00 73 00        		.dw '.stabn 0x44,0,148,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         38 00 2C 00
         00 00 00 00
00000ECF 00 00 00 00        		.dd LM73-_AdjustHour
00000ED1 0D 00 0A 00        		.dw 0x0d,0x0a
00008FA4                    	.code
                            	LM73:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008FA4 88 DA              		push bp to [sp]
00008FA5 43 20              		sp-=3
00008FA6 08 0B 01 00        		bp=sp+1
                            	
00008FA8 0D 03 06 00        		R1=BP+6
00008FAA 02 D2              		[bp+2]=R1	// QImode move
00000ED3                    	.debug
00000ED3 2E 00 73 00        		.dw '.stabn 0x44,0,149,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         39 00 2C 00
         00 00 00 00
00000EE7 07 00 00 00        		.dd LM74-_AdjustHour
00000EE9 0D 00 0A 00        		.dw 0x0d,0x0a
00008FAB                    	.code
                            	LM74:
                            	LBB5:
00000EEB                    	.debug
00000EEB 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
00000EFF 07 00 00 00        		.dd LM75-_AdjustHour
00000F01 0D 00 0A 00        		.dw 0x0d,0x0a
00008FAB                    	.code
                            	LM75:
00008FAB 05 93              		R1=BP	// QImode move
00008FAC 0D 05 01 00        		R2=BP+1
00008FAE 02 96              		R3=[bp+2]	// QImode move
00008FAF C3 92              		R1=[R3]	// QImode move
00008FB0 02 99              		R4=R2	// QImode move
00008FB1 C4 D2              		[R4]=R1	// QImode move
00000F03                    	.debug
00000F03 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
00000F17 0E 00 00 00        		.dd LM76-_AdjustHour
00000F19 0D 00 0A 00        		.dw 0x0d,0x0a
00008FB2                    	.code
                            	LM76:
00008FB2 05 93              		R1=BP	// QImode move
00008FB3 0D 05 01 00        		R2=BP+1
00008FB5 02 97              		R3=R2	// QImode move
00008FB6 C3 92              		R1=[R3]	// QImode move
00008FB7 C8 D2              		[SP--]=R1	// QImode move
00008FB8 40 F0 CE 94        		call _PlayHour	// call without return value
00008FBA 41 00              		SP = SP + 1	//SP
00000F1B                    	.debug
00000F1B 2E 00 73 00        		.dw '.stabn 0x44,0,153,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         33 00 2C 00
         00 00 00 00
00000F2F 17 00 00 00        		.dd LM77-_AdjustHour
00000F31 0D 00 0A 00        		.dw 0x0d,0x0a
00008FBB                    	.code
                            	LM77:
                            	L72:
00008FBB 0F 9F BF 8F        		pc=L74	// Indirect jump
00008FBD 0F 9F 3A 90        		pc=L73	// Indirect jump
                            	L74:
00000F33                    	.debug
00000F33 2E 00 73 00        		.dw '.stabn 0x44,0,155,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         35 00 2C 00
         00 00 00 00
00000F47 1B 00 00 00        		.dd LM78-_AdjustHour
00000F49 0D 00 0A 00        		.dw 0x0d,0x0a
00008FBF                    	.code
                            	LM78:
00008FBF 41 92              		R1=1	// QImode move
00008FC0 19 D3 12 70        		[28690]=R1	// QImode move
00000F4B                    	.debug
00000F4B 2E 00 73 00        		.dw '.stabn 0x44,0,156,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         36 00 2C 00
         00 00 00 00
00000F5F 1E 00 00 00        		.dd LM79-_AdjustHour
00000F61 0D 00 0A 00        		.dw 0x0d,0x0a
00008FC2                    	.code
                            	LM79:
00008FC2 40 F0 28 97        		call _Key_Get	// call with return value
00008FC4 C5 D2              		[BP]=R1	// QImode move
00000F63                    	.debug
00000F63 2E 00 73 00        		.dw '.stabn 0x44,0,157,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         37 00 2C 00
         00 00 00 00
00000F77 21 00 00 00        		.dd LM80-_AdjustHour
00000F79 0D 00 0A 00        		.dw 0x0d,0x0a
00008FC5                    	.code
                            	LM80:
00008FC5 C5 92              		R1=[BP]	// QImode move
00008FC6 42 42              		CMP R1,2	// QImode compare
00008FC7 1A 5E 01 EE        		NSJZ L77	//QImode EQ
         00 EE      
00008FCA 42 42              		CMP R1,2	// QImode compare
00008FCB 08 9E 01 EE        		NSJA L84	//QImode GTU
         00 EE      
00008FCE 41 42              		CMP R1,1	// QImode compare
00008FCF 0A 5E 01 EE        		NSJZ L76	//QImode EQ
         00 EE      
00008FD2 0F 9F 36 90        		pc=L82	// Indirect jump
                            	L84:
00008FD4 44 42              		CMP R1,4	// QImode compare
00008FD5 35 5E 01 EE        		NSJZ L79	//QImode EQ
         00 EE      
00008FD8 0F 9F 36 90        		pc=L82	// Indirect jump
                            	L76:
00000F7B                    	.debug
00000F7B 2E 00 73 00        		.dw '.stabn 0x44,0,160,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         30 00 2C 00
         00 00 00 00
00000F8F 36 00 00 00        		.dd LM81-_AdjustHour
00000F91 0D 00 0A 00        		.dw 0x0d,0x0a
00008FDA                    	.code
                            	LM81:
00008FDA 05 93              		R1=BP	// QImode move
00008FDB 0D 05 01 00        		R2=BP+1
00008FDD 02 99              		R4=R2	// QImode move
00008FDE C4 96              		R3=[R4]	// QImode move
00008FDF 03 93              		R1=R3	// QImode move
00008FE0 0F 9F 3A 90        		pc=L71	// Indirect jump
                            	L77:
00000F93                    	.debug
00000F93 2E 00 73 00        		.dw '.stabn 0x44,0,162,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         32 00 2C 00
         00 00 00 00
00000FA7 3E 00 00 00        		.dd LM82-_AdjustHour
00000FA9 0D 00 0A 00        		.dw 0x0d,0x0a
00008FE2                    	.code
                            	LM82:
00008FE2 05 93              		R1=BP	// QImode move
00008FE3 0D 05 01 00        		R2=BP+1
00008FE5 05 97              		R3=BP	// QImode move
00008FE6 0D 03 01 00        		R1=BP+1
00008FE8 05 95              		R2=BP	// QImode move
00008FE9 0D 07 01 00        		R3=BP+1
00008FEB 03 99              		R4=R3	// QImode move
00008FEC C4 94              		R2=[R4]	// QImode move
00008FED 0A 07 01 00        		R3=R2+1
00008FEF 01 95              		R2=R1	// QImode move
00008FF0 C2 D6              		[R2]=R3	// QImode move
00000FAB                    	.debug
00000FAB 2E 00 73 00        		.dw '.stabn 0x44,0,163,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         33 00 2C 00
         00 00 00 00
00000FBF 4D 00 00 00        		.dd LM83-_AdjustHour
00000FC1 0D 00 0A 00        		.dw 0x0d,0x0a
00008FF1                    	.code
                            	LM83:
00008FF1 05 93              		R1=BP	// QImode move
00008FF2 0D 05 01 00        		R2=BP+1
00008FF4 02 97              		R3=R2	// QImode move
00008FF5 C3 92              		R1=[R3]	// QImode move
00008FF6 57 42              		CMP R1,23	// QImode compare
00008FF7 08 8E 01 EE        		NSJNA L78	//QImode LEU
         00 EE      
00008FFA 05 93              		R1=BP	// QImode move
00008FFB 0D 05 01 00        		R2=BP+1
00008FFD 40 92              		R1=0	// QImode move
00008FFE 02 99              		R4=R2	// QImode move
00008FFF C4 D2              		[R4]=R1	// QImode move
                            	L78:
00000FC3                    	.debug
00000FC3 2E 00 73 00        		.dw '.stabn 0x44,0,164,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         34 00 2C 00
         00 00 00 00
00000FD7 5C 00 00 00        		.dd LM84-_AdjustHour
00000FD9 0D 00 0A 00        		.dw 0x0d,0x0a
00009000                    	.code
                            	LM84:
00009000 05 93              		R1=BP	// QImode move
00009001 0D 05 01 00        		R2=BP+1
00009003 02 97              		R3=R2	// QImode move
00009004 C3 92              		R1=[R3]	// QImode move
00009005 C8 D2              		[SP--]=R1	// QImode move
00009006 40 F0 CE 94        		call _PlayHour	// call without return value
00009008 41 00              		SP = SP + 1	//SP
00000FDB                    	.debug
00000FDB 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
00000FEF 65 00 00 00        		.dd LM85-_AdjustHour
00000FF1 0D 00 0A 00        		.dw 0x0d,0x0a
00009009                    	.code
                            	LM85:
00009009 0F 9F 38 90        		pc=L75	// Indirect jump
                            	L79:
00000FF3                    	.debug
00000FF3 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
00001007 67 00 00 00        		.dd LM86-_AdjustHour
00001009 0D 00 0A 00        		.dw 0x0d,0x0a
0000900B                    	.code
                            	LM86:
0000900B 05 93              		R1=BP	// QImode move
0000900C 0D 05 01 00        		R2=BP+1
0000900E 02 99              		R4=R2	// QImode move
0000900F C4 92              		R1=[R4]	// QImode move
00009010 40 42              		CMP R1,0	// QImode test
00009011 0A 4E 01 EE        		NSJNZ L80	//QImode NE
         00 EE      
00009014 05 93              		R1=BP	// QImode move
00009015 0D 05 01 00        		R2=BP+1
00009017 57 92              		R1=23	// QImode move
00009018 02 97              		R3=R2	// QImode move
00009019 C3 D2              		[R3]=R1	// QImode move
0000901A 0F 9F 2B 90        		pc=L81	// Indirect jump
                            	L80:
0000100B                    	.debug
0000100B 2E 00 73 00        		.dw '.stabn 0x44,0,168,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         38 00 2C 00
         00 00 00 00
0000101F 78 00 00 00        		.dd LM87-_AdjustHour
00001021 0D 00 0A 00        		.dw 0x0d,0x0a
0000901C                    	.code
                            	LM87:
0000901C 05 93              		R1=BP	// QImode move
0000901D 0D 05 01 00        		R2=BP+1
0000901F 05 97              		R3=BP	// QImode move
00009020 0D 03 01 00        		R1=BP+1
00009022 05 95              		R2=BP	// QImode move
00009023 0D 07 01 00        		R3=BP+1
00009025 03 99              		R4=R3	// QImode move
00009026 C4 94              		R2=[R4]	// QImode move
00009027 0A 07 FF FF        		R3=R2+(-1)
00009029 01 95              		R2=R1	// QImode move
0000902A C2 D6              		[R2]=R3	// QImode move
                            	L81:
00001023                    	.debug
00001023 2E 00 73 00        		.dw '.stabn 0x44,0,169,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         39 00 2C 00
         00 00 00 00
00001037 87 00 00 00        		.dd LM88-_AdjustHour
00001039 0D 00 0A 00        		.dw 0x0d,0x0a
0000902B                    	.code
                            	LM88:
0000902B 05 93              		R1=BP	// QImode move
0000902C 0D 05 01 00        		R2=BP+1
0000902E 02 97              		R3=R2	// QImode move
0000902F C3 92              		R1=[R3]	// QImode move
00009030 C8 D2              		[SP--]=R1	// QImode move
00009031 40 F0 CE 94        		call _PlayHour	// call without return value
00009033 41 00              		SP = SP + 1	//SP
0000103B                    	.debug
0000103B 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
0000104F 90 00 00 00        		.dd LM89-_AdjustHour
00001051 0D 00 0A 00        		.dw 0x0d,0x0a
00009034                    	.code
                            	LM89:
00009034 0F 9F 38 90        		pc=L75	// Indirect jump
                            	L82:
00001053                    	.debug
00001053 2E 00 73 00        		.dw '.stabn 0x44,0,172,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         32 00 2C 00
         00 00 00 00
00001067 92 00 00 00        		.dd LM90-_AdjustHour
00001069 0D 00 0A 00        		.dw 0x0d,0x0a
00009036                    	.code
                            	LM90:
00009036 0F 9F 38 90        		pc=L75	// Indirect jump
                            	L75:
0000106B                    	.debug
0000106B 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
0000107F 94 00 00 00        		.dd LM91-_AdjustHour
00001081 0D 00 0A 00        		.dw 0x0d,0x0a
00009038                    	.code
                            	LM91:
00009038 0F 9F BB 8F        		pc=L72	// Indirect jump
                            	L73:
00001083                    	.debug
00001083 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
00001097 96 00 00 00        		.dd LM92-_AdjustHour
00001099 0D 00 0A 00        		.dw 0x0d,0x0a
0000903A                    	.code
                            	LM92:
                            	LBE5:
0000109B                    	.debug
0000109B 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
000010AF 96 00 00 00        		.dd LM93-_AdjustHour
000010B1 0D 00 0A 00        		.dw 0x0d,0x0a
0000903A                    	.code
                            	LM93:
                            	L71:
                            	
0000903A 43 00              		sp+=3
0000903B 88 98              		pop bp from [sp]
0000903C 90 9A              		retf
                            		.endp	// end of AdjustHour
                            	
000010B3                    	.debug
000010B3 2E 00 73 00        		.dw '.stabs "Hour:p4",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         48 00 6F 00
         75 00 72 00
         3A 00 70 00
         34 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
0000903D                    	.CODE
000010CF                    	.debug
000010CF 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000010E1 07 00 00 00        		.dd LBB5-_AdjustHour
000010E3 0D 00 0A 00        		.dw 0x0d,0x0a
0000903D                    	.code
000010E5                    	.debug
000010E5 2E 00 73 00        		.dw '.stabs "KeyCode:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 43 00
         6F 00 64 00
         65 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000903D                    	.CODE
00001103                    	.debug
00001103 2E 00 73 00        		.dw '.stabs "TempHour:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         48 00 6F 00
         75 00 72 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
0000903D                    	.CODE
00001122                    	.debug
00001122 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001134 96 00 00 00        		.dd LBE5-_AdjustHour
00001136 0D 00 0A 00        		.dw 0x0d,0x0a
0000903D                    	.code
00001138                    	.debug
00001138 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001141 99 00 00 00        		.dd LME4-_AdjustHour
00001143 0D 00 0A 00        		.dw 0x0d,0x0a
0000903D                    	.code
                            	LME4:
0000903D                    	.code
00001145                    	.debug
00001145 2E 00 73 00        		.dw '.stabs "AdjustMin:F4",36,0,0,',0,0,offset _AdjustMin,seg _AdjustMin,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         6A 00 75 00
         73 00 74 00
         4D 00 69 00
         6E 00 3A 00
         46 00 34 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 C6 02
         00 00 0D 00
         0A 00      
0000903D                    	.CODE
                            	.public _AdjustMin
                            	_AdjustMin:	.proc
00001168                    	.debug
00001168 2E 00 73 00        		.dw '.stabn 0x44,0,184,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         34 00 2C 00
         00 00 00 00
0000117C 00 00 00 00        		.dd LM94-_AdjustMin
0000117E 0D 00 0A 00        		.dw 0x0d,0x0a
0000903D                    	.code
                            	LM94:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
0000903D 88 DA              		push bp to [sp]
0000903E 43 20              		sp-=3
0000903F 08 0B 01 00        		bp=sp+1
                            	
00009041 0D 03 06 00        		R1=BP+6
00009043 02 D2              		[bp+2]=R1	// QImode move
00001180                    	.debug
00001180 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
00001194 07 00 00 00        		.dd LM95-_AdjustMin
00001196 0D 00 0A 00        		.dw 0x0d,0x0a
00009044                    	.code
                            	LM95:
                            	LBB6:
00001198                    	.debug
00001198 2E 00 73 00        		.dw '.stabn 0x44,0,186,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         36 00 2C 00
         00 00 00 00
000011AC 07 00 00 00        		.dd LM96-_AdjustMin
000011AE 0D 00 0A 00        		.dw 0x0d,0x0a
00009044                    	.code
                            	LM96:
00009044 05 93              		R1=BP	// QImode move
00009045 0D 05 01 00        		R2=BP+1
00009047 02 96              		R3=[bp+2]	// QImode move
00009048 C3 92              		R1=[R3]	// QImode move
00009049 02 99              		R4=R2	// QImode move
0000904A C4 D2              		[R4]=R1	// QImode move
000011B0                    	.debug
000011B0 2E 00 73 00        		.dw '.stabn 0x44,0,188,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         38 00 2C 00
         00 00 00 00
000011C4 0E 00 00 00        		.dd LM97-_AdjustMin
000011C6 0D 00 0A 00        		.dw 0x0d,0x0a
0000904B                    	.code
                            	LM97:
0000904B 05 93              		R1=BP	// QImode move
0000904C 0D 05 01 00        		R2=BP+1
0000904E 02 97              		R3=R2	// QImode move
0000904F C3 92              		R1=[R3]	// QImode move
00009050 C8 D2              		[SP--]=R1	// QImode move
00009051 40 F0 0B 94        		call _PlayNum	// call without return value
00009053 41 00              		SP = SP + 1	//SP
000011C8                    	.debug
000011C8 2E 00 73 00        		.dw '.stabn 0x44,0,189,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         39 00 2C 00
         00 00 00 00
000011DC 17 00 00 00        		.dd LM98-_AdjustMin
000011DE 0D 00 0A 00        		.dw 0x0d,0x0a
00009054                    	.code
                            	LM98:
00009054 58 92              		R1=24	// QImode move
00009055 C8 D2              		[SP--]=R1	// QImode move
00009056 40 F0 CC 97        		call _PlaySnd	// call without return value
00009058 41 00              		SP = SP + 1	//SP
000011E0                    	.debug
000011E0 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
000011F4 1C 00 00 00        		.dd LM99-_AdjustMin
000011F6 0D 00 0A 00        		.dw 0x0d,0x0a
00009059                    	.code
                            	LM99:
                            	L92:
00009059 0F 9F 5D 90        		pc=L94	// Indirect jump
0000905B 0F 9F E2 90        		pc=L93	// Indirect jump
                            	L94:
000011F8                    	.debug
000011F8 2E 00 73 00        		.dw '.stabn 0x44,0,192,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         32 00 2C 00
         00 00 00 00
0000120C 20 00 00 00        		.dd LM100-_AdjustMin
0000120E 0D 00 0A 00        		.dw 0x0d,0x0a
0000905D                    	.code
                            	LM100:
0000905D 41 92              		R1=1	// QImode move
0000905E 19 D3 12 70        		[28690]=R1	// QImode move
00001210                    	.debug
00001210 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
00001224 23 00 00 00        		.dd LM101-_AdjustMin
00001226 0D 00 0A 00        		.dw 0x0d,0x0a
00009060                    	.code
                            	LM101:
00009060 40 F0 28 97        		call _Key_Get	// call with return value
00009062 C5 D2              		[BP]=R1	// QImode move
00001228                    	.debug
00001228 2E 00 73 00        		.dw '.stabn 0x44,0,194,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         34 00 2C 00
         00 00 00 00
0000123C 26 00 00 00        		.dd LM102-_AdjustMin
0000123E 0D 00 0A 00        		.dw 0x0d,0x0a
00009063                    	.code
                            	LM102:
00009063 C5 92              		R1=[BP]	// QImode move
00009064 42 42              		CMP R1,2	// QImode compare
00009065 1A 5E 01 EE        		NSJZ L97	//QImode EQ
         00 EE      
00009068 42 42              		CMP R1,2	// QImode compare
00009069 08 9E 01 EE        		NSJA L104	//QImode GTU
         00 EE      
0000906C 41 42              		CMP R1,1	// QImode compare
0000906D 0A 5E 01 EE        		NSJZ L96	//QImode EQ
         00 EE      
00009070 0F 9F DE 90        		pc=L102	// Indirect jump
                            	L104:
00009072 44 42              		CMP R1,4	// QImode compare
00009073 3A 5E 01 EE        		NSJZ L99	//QImode EQ
         00 EE      
00009076 0F 9F DE 90        		pc=L102	// Indirect jump
                            	L96:
00001240                    	.debug
00001240 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
00001254 3B 00 00 00        		.dd LM103-_AdjustMin
00001256 0D 00 0A 00        		.dw 0x0d,0x0a
00009078                    	.code
                            	LM103:
00009078 05 93              		R1=BP	// QImode move
00009079 0D 05 01 00        		R2=BP+1
0000907B 02 99              		R4=R2	// QImode move
0000907C C4 96              		R3=[R4]	// QImode move
0000907D 03 93              		R1=R3	// QImode move
0000907E 0F 9F E2 90        		pc=L91	// Indirect jump
                            	L97:
00001258                    	.debug
00001258 2E 00 73 00        		.dw '.stabn 0x44,0,199,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         39 00 2C 00
         00 00 00 00
0000126C 43 00 00 00        		.dd LM104-_AdjustMin
0000126E 0D 00 0A 00        		.dw 0x0d,0x0a
00009080                    	.code
                            	LM104:
00009080 05 93              		R1=BP	// QImode move
00009081 0D 05 01 00        		R2=BP+1
00009083 05 97              		R3=BP	// QImode move
00009084 0D 03 01 00        		R1=BP+1
00009086 05 95              		R2=BP	// QImode move
00009087 0D 07 01 00        		R3=BP+1
00009089 03 99              		R4=R3	// QImode move
0000908A C4 94              		R2=[R4]	// QImode move
0000908B 0A 07 01 00        		R3=R2+1
0000908D 01 95              		R2=R1	// QImode move
0000908E C2 D6              		[R2]=R3	// QImode move
00001270                    	.debug
00001270 2E 00 73 00        		.dw '.stabn 0x44,0,200,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         30 00 2C 00
         00 00 00 00
00001284 52 00 00 00        		.dd LM105-_AdjustMin
00001286 0D 00 0A 00        		.dw 0x0d,0x0a
0000908F                    	.code
                            	LM105:
0000908F 05 93              		R1=BP	// QImode move
00009090 0D 05 01 00        		R2=BP+1
00009092 02 97              		R3=R2	// QImode move
00009093 C3 92              		R1=[R3]	// QImode move
00009094 7B 42              		CMP R1,59	// QImode compare
00009095 08 8E 01 EE        		NSJNA L98	//QImode LEU
         00 EE      
00009098 05 93              		R1=BP	// QImode move
00009099 0D 05 01 00        		R2=BP+1
0000909B 40 92              		R1=0	// QImode move
0000909C 02 99              		R4=R2	// QImode move
0000909D C4 D2              		[R4]=R1	// QImode move
                            	L98:
00001288                    	.debug
00001288 2E 00 73 00        		.dw '.stabn 0x44,0,201,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         31 00 2C 00
         00 00 00 00
0000129C 61 00 00 00        		.dd LM106-_AdjustMin
0000129E 0D 00 0A 00        		.dw 0x0d,0x0a
0000909E                    	.code
                            	LM106:
0000909E 05 93              		R1=BP	// QImode move
0000909F 0D 05 01 00        		R2=BP+1
000090A1 02 97              		R3=R2	// QImode move
000090A2 C3 92              		R1=[R3]	// QImode move
000090A3 C8 D2              		[SP--]=R1	// QImode move
000090A4 40 F0 0B 94        		call _PlayNum	// call without return value
000090A6 41 00              		SP = SP + 1	//SP
000012A0                    	.debug
000012A0 2E 00 73 00        		.dw '.stabn 0x44,0,202,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         32 00 2C 00
         00 00 00 00
000012B4 6A 00 00 00        		.dd LM107-_AdjustMin
000012B6 0D 00 0A 00        		.dw 0x0d,0x0a
000090A7                    	.code
                            	LM107:
000090A7 58 92              		R1=24	// QImode move
000090A8 C8 D2              		[SP--]=R1	// QImode move
000090A9 40 F0 CC 97        		call _PlaySnd	// call without return value
000090AB 41 00              		SP = SP + 1	//SP
000012B8                    	.debug
000012B8 2E 00 73 00        		.dw '.stabn 0x44,0,203,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         33 00 2C 00
         00 00 00 00
000012CC 6F 00 00 00        		.dd LM108-_AdjustMin
000012CE 0D 00 0A 00        		.dw 0x0d,0x0a
000090AC                    	.code
                            	LM108:
000090AC 0F 9F E0 90        		pc=L95	// Indirect jump
                            	L99:
000012D0                    	.debug
000012D0 2E 00 73 00        		.dw '.stabn 0x44,0,205,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         35 00 2C 00
         00 00 00 00
000012E4 71 00 00 00        		.dd LM109-_AdjustMin
000012E6 0D 00 0A 00        		.dw 0x0d,0x0a
000090AE                    	.code
                            	LM109:
000090AE 05 93              		R1=BP	// QImode move
000090AF 0D 05 01 00        		R2=BP+1
000090B1 02 99              		R4=R2	// QImode move
000090B2 C4 92              		R1=[R4]	// QImode move
000090B3 40 42              		CMP R1,0	// QImode test
000090B4 0A 4E 01 EE        		NSJNZ L100	//QImode NE
         00 EE      
000090B7 05 93              		R1=BP	// QImode move
000090B8 0D 05 01 00        		R2=BP+1
000090BA 7B 92              		R1=59	// QImode move
000090BB 02 97              		R3=R2	// QImode move
000090BC C3 D2              		[R3]=R1	// QImode move
000090BD 0F 9F CE 90        		pc=L101	// Indirect jump
                            	L100:
000012E8                    	.debug
000012E8 2E 00 73 00        		.dw '.stabn 0x44,0,206,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         36 00 2C 00
         00 00 00 00
000012FC 82 00 00 00        		.dd LM110-_AdjustMin
000012FE 0D 00 0A 00        		.dw 0x0d,0x0a
000090BF                    	.code
                            	LM110:
000090BF 05 93              		R1=BP	// QImode move
000090C0 0D 05 01 00        		R2=BP+1
000090C2 05 97              		R3=BP	// QImode move
000090C3 0D 03 01 00        		R1=BP+1
000090C5 05 95              		R2=BP	// QImode move
000090C6 0D 07 01 00        		R3=BP+1
000090C8 03 99              		R4=R3	// QImode move
000090C9 C4 94              		R2=[R4]	// QImode move
000090CA 0A 07 FF FF        		R3=R2+(-1)
000090CC 01 95              		R2=R1	// QImode move
000090CD C2 D6              		[R2]=R3	// QImode move
                            	L101:
00001300                    	.debug
00001300 2E 00 73 00        		.dw '.stabn 0x44,0,207,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         37 00 2C 00
         00 00 00 00
00001314 91 00 00 00        		.dd LM111-_AdjustMin
00001316 0D 00 0A 00        		.dw 0x0d,0x0a
000090CE                    	.code
                            	LM111:
000090CE 05 93              		R1=BP	// QImode move
000090CF 0D 05 01 00        		R2=BP+1
000090D1 02 97              		R3=R2	// QImode move
000090D2 C3 92              		R1=[R3]	// QImode move
000090D3 C8 D2              		[SP--]=R1	// QImode move
000090D4 40 F0 0B 94        		call _PlayNum	// call without return value
000090D6 41 00              		SP = SP + 1	//SP
00001318                    	.debug
00001318 2E 00 73 00        		.dw '.stabn 0x44,0,208,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         38 00 2C 00
         00 00 00 00
0000132C 9A 00 00 00        		.dd LM112-_AdjustMin
0000132E 0D 00 0A 00        		.dw 0x0d,0x0a
000090D7                    	.code
                            	LM112:
000090D7 58 92              		R1=24	// QImode move
000090D8 C8 D2              		[SP--]=R1	// QImode move
000090D9 40 F0 CC 97        		call _PlaySnd	// call without return value
000090DB 41 00              		SP = SP + 1	//SP
00001330                    	.debug
00001330 2E 00 73 00        		.dw '.stabn 0x44,0,209,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         39 00 2C 00
         00 00 00 00
00001344 9F 00 00 00        		.dd LM113-_AdjustMin
00001346 0D 00 0A 00        		.dw 0x0d,0x0a
000090DC                    	.code
                            	LM113:
000090DC 0F 9F E0 90        		pc=L95	// Indirect jump
                            	L102:
00001348                    	.debug
00001348 2E 00 73 00        		.dw '.stabn 0x44,0,211,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         31 00 2C 00
         00 00 00 00
0000135C A1 00 00 00        		.dd LM114-_AdjustMin
0000135E 0D 00 0A 00        		.dw 0x0d,0x0a
000090DE                    	.code
                            	LM114:
000090DE 0F 9F E0 90        		pc=L95	// Indirect jump
                            	L95:
00001360                    	.debug
00001360 2E 00 73 00        		.dw '.stabn 0x44,0,213,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         33 00 2C 00
         00 00 00 00
00001374 A3 00 00 00        		.dd LM115-_AdjustMin
00001376 0D 00 0A 00        		.dw 0x0d,0x0a
000090E0                    	.code
                            	LM115:
000090E0 0F 9F 59 90        		pc=L92	// Indirect jump
                            	L93:
00001378                    	.debug
00001378 2E 00 73 00        		.dw '.stabn 0x44,0,214,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         34 00 2C 00
         00 00 00 00
0000138C A5 00 00 00        		.dd LM116-_AdjustMin
0000138E 0D 00 0A 00        		.dw 0x0d,0x0a
000090E2                    	.code
                            	LM116:
                            	LBE6:
00001390                    	.debug
00001390 2E 00 73 00        		.dw '.stabn 0x44,0,214,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         34 00 2C 00
         00 00 00 00
000013A4 A5 00 00 00        		.dd LM117-_AdjustMin
000013A6 0D 00 0A 00        		.dw 0x0d,0x0a
000090E2                    	.code
                            	LM117:
                            	L91:
                            	
000090E2 43 00              		sp+=3
000090E3 88 98              		pop bp from [sp]
000090E4 90 9A              		retf
                            		.endp	// end of AdjustMin
                            	
000013A8                    	.debug
000013A8 2E 00 73 00        		.dw '.stabs "Min:p4",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4D 00 69 00
         6E 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
000090E5                    	.CODE
000013C3                    	.debug
000013C3 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000013D5 07 00 00 00        		.dd LBB6-_AdjustMin
000013D7 0D 00 0A 00        		.dw 0x0d,0x0a
000090E5                    	.code
000013D9                    	.debug
000013D9 2E 00 73 00        		.dw '.stabs "KeyCode:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 43 00
         6F 00 64 00
         65 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000090E5                    	.CODE
000013F7                    	.debug
000013F7 2E 00 73 00        		.dw '.stabs "TempMin:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         4D 00 69 00
         6E 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
000090E5                    	.CODE
00001415                    	.debug
00001415 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001427 A5 00 00 00        		.dd LBE6-_AdjustMin
00001429 0D 00 0A 00        		.dw 0x0d,0x0a
000090E5                    	.code
0000142B                    	.debug
0000142B 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001434 A8 00 00 00        		.dd LME5-_AdjustMin
00001436 0D 00 0A 00        		.dw 0x0d,0x0a
000090E5                    	.code
                            	LME5:
000090E5                    	.code
00001438                    	.debug
00001438 2E 00 73 00        		.dw '.stabs "AdjustSec:F4",36,0,0,',0,0,offset _AdjustSec,seg _AdjustSec,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         6A 00 75 00
         73 00 74 00
         53 00 65 00
         63 00 3A 00
         46 00 34 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 6E 03
         00 00 0D 00
         0A 00      
000090E5                    	.CODE
                            	.public _AdjustSec
                            	_AdjustSec:	.proc
0000145B                    	.debug
0000145B 2E 00 73 00        		.dw '.stabn 0x44,0,223,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         33 00 2C 00
         00 00 00 00
0000146F 00 00 00 00        		.dd LM118-_AdjustSec
00001471 0D 00 0A 00        		.dw 0x0d,0x0a
000090E5                    	.code
                            	LM118:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
000090E5 88 DA              		push bp to [sp]
000090E6 43 20              		sp-=3
000090E7 08 0B 01 00        		bp=sp+1
                            	
000090E9 0D 03 06 00        		R1=BP+6
000090EB 02 D2              		[bp+2]=R1	// QImode move
00001473                    	.debug
00001473 2E 00 73 00        		.dw '.stabn 0x44,0,224,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         34 00 2C 00
         00 00 00 00
00001487 07 00 00 00        		.dd LM119-_AdjustSec
00001489 0D 00 0A 00        		.dw 0x0d,0x0a
000090EC                    	.code
                            	LM119:
                            	LBB7:
0000148B                    	.debug
0000148B 2E 00 73 00        		.dw '.stabn 0x44,0,225,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         35 00 2C 00
         00 00 00 00
0000149F 07 00 00 00        		.dd LM120-_AdjustSec
000014A1 0D 00 0A 00        		.dw 0x0d,0x0a
000090EC                    	.code
                            	LM120:
000090EC 05 93              		R1=BP	// QImode move
000090ED 0D 05 01 00        		R2=BP+1
000090EF 02 96              		R3=[bp+2]	// QImode move
000090F0 C3 92              		R1=[R3]	// QImode move
000090F1 02 99              		R4=R2	// QImode move
000090F2 C4 D2              		[R4]=R1	// QImode move
000014A3                    	.debug
000014A3 2E 00 73 00        		.dw '.stabn 0x44,0,227,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         37 00 2C 00
         00 00 00 00
000014B7 0E 00 00 00        		.dd LM121-_AdjustSec
000014B9 0D 00 0A 00        		.dw 0x0d,0x0a
000090F3                    	.code
                            	LM121:
000090F3 05 93              		R1=BP	// QImode move
000090F4 0D 05 01 00        		R2=BP+1
000090F6 02 97              		R3=R2	// QImode move
000090F7 C3 92              		R1=[R3]	// QImode move
000090F8 C8 D2              		[SP--]=R1	// QImode move
000090F9 40 F0 56 95        		call _PlaySec	// call without return value
000090FB 41 00              		SP = SP + 1	//SP
000014BB                    	.debug
000014BB 2E 00 73 00        		.dw '.stabn 0x44,0,228,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         38 00 2C 00
         00 00 00 00
000014CF 17 00 00 00        		.dd LM122-_AdjustSec
000014D1 0D 00 0A 00        		.dw 0x0d,0x0a
000090FC                    	.code
                            	LM122:
                            	L112:
000090FC 0F 9F 00 91        		pc=L114	// Indirect jump
000090FE 0F 9F 7B 91        		pc=L113	// Indirect jump
                            	L114:
000014D3                    	.debug
000014D3 2E 00 73 00        		.dw '.stabn 0x44,0,230,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         30 00 2C 00
         00 00 00 00
000014E7 1B 00 00 00        		.dd LM123-_AdjustSec
000014E9 0D 00 0A 00        		.dw 0x0d,0x0a
00009100                    	.code
                            	LM123:
00009100 41 92              		R1=1	// QImode move
00009101 19 D3 12 70        		[28690]=R1	// QImode move
000014EB                    	.debug
000014EB 2E 00 73 00        		.dw '.stabn 0x44,0,231,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         31 00 2C 00
         00 00 00 00
000014FF 1E 00 00 00        		.dd LM124-_AdjustSec
00001501 0D 00 0A 00        		.dw 0x0d,0x0a
00009103                    	.code
                            	LM124:
00009103 40 F0 28 97        		call _Key_Get	// call with return value
00009105 C5 D2              		[BP]=R1	// QImode move
00001503                    	.debug
00001503 2E 00 73 00        		.dw '.stabn 0x44,0,232,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         32 00 2C 00
         00 00 00 00
00001517 21 00 00 00        		.dd LM125-_AdjustSec
00001519 0D 00 0A 00        		.dw 0x0d,0x0a
00009106                    	.code
                            	LM125:
00009106 C5 92              		R1=[BP]	// QImode move
00009107 42 42              		CMP R1,2	// QImode compare
00009108 1A 5E 01 EE        		NSJZ L117	//QImode EQ
         00 EE      
0000910B 42 42              		CMP R1,2	// QImode compare
0000910C 08 9E 01 EE        		NSJA L124	//QImode GTU
         00 EE      
0000910F 41 42              		CMP R1,1	// QImode compare
00009110 0A 5E 01 EE        		NSJZ L116	//QImode EQ
         00 EE      
00009113 0F 9F 77 91        		pc=L122	// Indirect jump
                            	L124:
00009115 44 42              		CMP R1,4	// QImode compare
00009116 35 5E 01 EE        		NSJZ L119	//QImode EQ
         00 EE      
00009119 0F 9F 77 91        		pc=L122	// Indirect jump
                            	L116:
0000151B                    	.debug
0000151B 2E 00 73 00        		.dw '.stabn 0x44,0,235,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         35 00 2C 00
         00 00 00 00
0000152F 36 00 00 00        		.dd LM126-_AdjustSec
00001531 0D 00 0A 00        		.dw 0x0d,0x0a
0000911B                    	.code
                            	LM126:
0000911B 05 93              		R1=BP	// QImode move
0000911C 0D 05 01 00        		R2=BP+1
0000911E 02 99              		R4=R2	// QImode move
0000911F C4 96              		R3=[R4]	// QImode move
00009120 03 93              		R1=R3	// QImode move
00009121 0F 9F 7B 91        		pc=L111	// Indirect jump
                            	L117:
00001533                    	.debug
00001533 2E 00 73 00        		.dw '.stabn 0x44,0,237,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         37 00 2C 00
         00 00 00 00
00001547 3E 00 00 00        		.dd LM127-_AdjustSec
00001549 0D 00 0A 00        		.dw 0x0d,0x0a
00009123                    	.code
                            	LM127:
00009123 05 93              		R1=BP	// QImode move
00009124 0D 05 01 00        		R2=BP+1
00009126 05 97              		R3=BP	// QImode move
00009127 0D 03 01 00        		R1=BP+1
00009129 05 95              		R2=BP	// QImode move
0000912A 0D 07 01 00        		R3=BP+1
0000912C 03 99              		R4=R3	// QImode move
0000912D C4 94              		R2=[R4]	// QImode move
0000912E 0A 07 01 00        		R3=R2+1
00009130 01 95              		R2=R1	// QImode move
00009131 C2 D6              		[R2]=R3	// QImode move
0000154B                    	.debug
0000154B 2E 00 73 00        		.dw '.stabn 0x44,0,238,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         38 00 2C 00
         00 00 00 00
0000155F 4D 00 00 00        		.dd LM128-_AdjustSec
00001561 0D 00 0A 00        		.dw 0x0d,0x0a
00009132                    	.code
                            	LM128:
00009132 05 93              		R1=BP	// QImode move
00009133 0D 05 01 00        		R2=BP+1
00009135 02 97              		R3=R2	// QImode move
00009136 C3 92              		R1=[R3]	// QImode move
00009137 7B 42              		CMP R1,59	// QImode compare
00009138 08 8E 01 EE        		NSJNA L118	//QImode LEU
         00 EE      
0000913B 05 93              		R1=BP	// QImode move
0000913C 0D 05 01 00        		R2=BP+1
0000913E 40 92              		R1=0	// QImode move
0000913F 02 99              		R4=R2	// QImode move
00009140 C4 D2              		[R4]=R1	// QImode move
                            	L118:
00001563                    	.debug
00001563 2E 00 73 00        		.dw '.stabn 0x44,0,239,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         39 00 2C 00
         00 00 00 00
00001577 5C 00 00 00        		.dd LM129-_AdjustSec
00001579 0D 00 0A 00        		.dw 0x0d,0x0a
00009141                    	.code
                            	LM129:
00009141 05 93              		R1=BP	// QImode move
00009142 0D 05 01 00        		R2=BP+1
00009144 02 97              		R3=R2	// QImode move
00009145 C3 92              		R1=[R3]	// QImode move
00009146 C8 D2              		[SP--]=R1	// QImode move
00009147 40 F0 56 95        		call _PlaySec	// call without return value
00009149 41 00              		SP = SP + 1	//SP
0000157B                    	.debug
0000157B 2E 00 73 00        		.dw '.stabn 0x44,0,240,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         30 00 2C 00
         00 00 00 00
0000158F 65 00 00 00        		.dd LM130-_AdjustSec
00001591 0D 00 0A 00        		.dw 0x0d,0x0a
0000914A                    	.code
                            	LM130:
0000914A 0F 9F 79 91        		pc=L115	// Indirect jump
                            	L119:
00001593                    	.debug
00001593 2E 00 73 00        		.dw '.stabn 0x44,0,242,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         32 00 2C 00
         00 00 00 00
000015A7 67 00 00 00        		.dd LM131-_AdjustSec
000015A9 0D 00 0A 00        		.dw 0x0d,0x0a
0000914C                    	.code
                            	LM131:
0000914C 05 93              		R1=BP	// QImode move
0000914D 0D 05 01 00        		R2=BP+1
0000914F 02 99              		R4=R2	// QImode move
00009150 C4 92              		R1=[R4]	// QImode move
00009151 40 42              		CMP R1,0	// QImode test
00009152 0A 4E 01 EE        		NSJNZ L120	//QImode NE
         00 EE      
00009155 05 93              		R1=BP	// QImode move
00009156 0D 05 01 00        		R2=BP+1
00009158 7B 92              		R1=59	// QImode move
00009159 02 97              		R3=R2	// QImode move
0000915A C3 D2              		[R3]=R1	// QImode move
0000915B 0F 9F 6C 91        		pc=L121	// Indirect jump
                            	L120:
000015AB                    	.debug
000015AB 2E 00 73 00        		.dw '.stabn 0x44,0,243,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         33 00 2C 00
         00 00 00 00
000015BF 78 00 00 00        		.dd LM132-_AdjustSec
000015C1 0D 00 0A 00        		.dw 0x0d,0x0a
0000915D                    	.code
                            	LM132:
0000915D 05 93              		R1=BP	// QImode move
0000915E 0D 05 01 00        		R2=BP+1
00009160 05 97              		R3=BP	// QImode move
00009161 0D 03 01 00        		R1=BP+1
00009163 05 95              		R2=BP	// QImode move
00009164 0D 07 01 00        		R3=BP+1
00009166 03 99              		R4=R3	// QImode move
00009167 C4 94              		R2=[R4]	// QImode move
00009168 0A 07 FF FF        		R3=R2+(-1)
0000916A 01 95              		R2=R1	// QImode move
0000916B C2 D6              		[R2]=R3	// QImode move
                            	L121:
000015C3                    	.debug
000015C3 2E 00 73 00        		.dw '.stabn 0x44,0,244,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         34 00 2C 00
         00 00 00 00
000015D7 87 00 00 00        		.dd LM133-_AdjustSec
000015D9 0D 00 0A 00        		.dw 0x0d,0x0a
0000916C                    	.code
                            	LM133:
0000916C 05 93              		R1=BP	// QImode move
0000916D 0D 05 01 00        		R2=BP+1
0000916F 02 97              		R3=R2	// QImode move
00009170 C3 92              		R1=[R3]	// QImode move
00009171 C8 D2              		[SP--]=R1	// QImode move
00009172 40 F0 56 95        		call _PlaySec	// call without return value
00009174 41 00              		SP = SP + 1	//SP
000015DB                    	.debug
000015DB 2E 00 73 00        		.dw '.stabn 0x44,0,245,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         35 00 2C 00
         00 00 00 00
000015EF 90 00 00 00        		.dd LM134-_AdjustSec
000015F1 0D 00 0A 00        		.dw 0x0d,0x0a
00009175                    	.code
                            	LM134:
00009175 0F 9F 79 91        		pc=L115	// Indirect jump
                            	L122:
000015F3                    	.debug
000015F3 2E 00 73 00        		.dw '.stabn 0x44,0,247,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         37 00 2C 00
         00 00 00 00
00001607 92 00 00 00        		.dd LM135-_AdjustSec
00001609 0D 00 0A 00        		.dw 0x0d,0x0a
00009177                    	.code
                            	LM135:
00009177 0F 9F 79 91        		pc=L115	// Indirect jump
                            	L115:
0000160B                    	.debug
0000160B 2E 00 73 00        		.dw '.stabn 0x44,0,249,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         39 00 2C 00
         00 00 00 00
0000161F 94 00 00 00        		.dd LM136-_AdjustSec
00001621 0D 00 0A 00        		.dw 0x0d,0x0a
00009179                    	.code
                            	LM136:
00009179 0F 9F FC 90        		pc=L112	// Indirect jump
                            	L113:
00001623                    	.debug
00001623 2E 00 73 00        		.dw '.stabn 0x44,0,250,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         30 00 2C 00
         00 00 00 00
00001637 96 00 00 00        		.dd LM137-_AdjustSec
00001639 0D 00 0A 00        		.dw 0x0d,0x0a
0000917B                    	.code
                            	LM137:
                            	LBE7:
0000163B                    	.debug
0000163B 2E 00 73 00        		.dw '.stabn 0x44,0,250,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         30 00 2C 00
         00 00 00 00
0000164F 96 00 00 00        		.dd LM138-_AdjustSec
00001651 0D 00 0A 00        		.dw 0x0d,0x0a
0000917B                    	.code
                            	LM138:
                            	L111:
                            	
0000917B 43 00              		sp+=3
0000917C 88 98              		pop bp from [sp]
0000917D 90 9A              		retf
                            		.endp	// end of AdjustSec
                            	
00001653                    	.debug
00001653 2E 00 73 00        		.dw '.stabs "Sec:p4",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 65 00
         63 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000917E                    	.CODE
0000166E                    	.debug
0000166E 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001680 07 00 00 00        		.dd LBB7-_AdjustSec
00001682 0D 00 0A 00        		.dw 0x0d,0x0a
0000917E                    	.code
00001684                    	.debug
00001684 2E 00 73 00        		.dw '.stabs "KeyCode:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 43 00
         6F 00 64 00
         65 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000917E                    	.CODE
000016A2                    	.debug
000016A2 2E 00 73 00        		.dw '.stabs "TempSec:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         53 00 65 00
         63 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000917E                    	.CODE
000016C0                    	.debug
000016C0 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000016D2 96 00 00 00        		.dd LBE7-_AdjustSec
000016D4 0D 00 0A 00        		.dw 0x0d,0x0a
0000917E                    	.code
000016D6                    	.debug
000016D6 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000016DF 99 00 00 00        		.dd LME6-_AdjustSec
000016E1 0D 00 0A 00        		.dw 0x0d,0x0a
0000917E                    	.code
                            	LME6:
0000917E                    	.code
000016E3                    	.debug
000016E3 2E 00 73 00        		.dw '.stabs "Adjust:F19",36,0,0,',0,0,offset _Adjust,seg _Adjust,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         6A 00 75 00
         73 00 74 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 07 04
         00 00 0D 00
         0A 00      
0000917E                    	.CODE
                            	.public _Adjust
                            	_Adjust:	.proc
00001704                    	.debug
00001704 2E 00 73 00        		.dw '.stabn 0x44,0,259,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         39 00 2C 00
         00 00 00 00
00001718 00 00 00 00        		.dd LM139-_Adjust
0000171A 0D 00 0A 00        		.dw 0x0d,0x0a
0000917E                    	.code
                            	LM139:
                            		// total=7, vars=7
                            		// frame_pointer_needed: 1
0000917E 88 DA              		push bp to [sp]
0000917F 47 20              		sp-=7
00009180 08 0B 01 00        		bp=sp+1
                            	
00009182 0D 03 0A 00        		R1=BP+10
00009184 06 D2              		[bp+6]=R1	// QImode move
0000171C                    	.debug
0000171C 2E 00 73 00        		.dw '.stabn 0x44,0,260,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         30 00 2C 00
         00 00 00 00
00001730 07 00 00 00        		.dd LM140-_Adjust
00001732 0D 00 0A 00        		.dw 0x0d,0x0a
00009185                    	.code
                            	LM140:
                            	LBB8:
00001734                    	.debug
00001734 2E 00 73 00        		.dw '.stabn 0x44,0,262,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         32 00 2C 00
         00 00 00 00
00001748 07 00 00 00        		.dd LM141-_Adjust
0000174A 0D 00 0A 00        		.dw 0x0d,0x0a
00009185                    	.code
                            	LM141:
00009185 40 F0 56 96        		call _Clock_GetYear	// call with return value
00009187 C8 D2              		[SP--]=R1	// QImode move
00009188 40 F0 77 8D        		call _AdjustYear	// call with return value
0000918A 41 00              		SP = SP + 1	//SP
0000918B C5 D2              		[BP]=R1	// QImode move
0000174C                    	.debug
0000174C 2E 00 73 00        		.dw '.stabn 0x44,0,263,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         33 00 2C 00
         00 00 00 00
00001760 0E 00 00 00        		.dd LM142-_Adjust
00001762 0D 00 0A 00        		.dw 0x0d,0x0a
0000918C                    	.code
                            	LM142:
0000918C 40 F0 62 96        		call _Clock_GetMon	// call with return value
0000918E C8 D2              		[SP--]=R1	// QImode move
0000918F 40 F0 F0 8D        		call _AdjustMon	// call with return value
00009191 41 00              		SP = SP + 1	//SP
00009192 05 95              		R2=BP	// QImode move
00009193 0D 07 01 00        		R3=BP+1
00009195 03 95              		R2=R3	// QImode move
00009196 C2 D2              		[R2]=R1	// QImode move
00001764                    	.debug
00001764 2E 00 73 00        		.dw '.stabn 0x44,0,264,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         34 00 2C 00
         00 00 00 00
00001778 19 00 00 00        		.dd LM143-_Adjust
0000177A 0D 00 0A 00        		.dw 0x0d,0x0a
00009197                    	.code
                            	LM143:
00009197 40 F0 6E 96        		call _Clock_GetDay	// call with return value
00009199 C8 D2              		[SP--]=R1	// QImode move
0000919A 05 93              		R1=BP	// QImode move
0000919B 0D 05 01 00        		R2=BP+1
0000919D 02 97              		R3=R2	// QImode move
0000919E C3 92              		R1=[R3]	// QImode move
0000919F C8 D2              		[SP--]=R1	// QImode move
000091A0 C5 92              		R1=[BP]	// QImode move
000091A1 C8 D2              		[SP--]=R1	// QImode move
000091A2 40 F0 87 8E        		call _AdjustDay	// call with return value
000091A4 43 00              		SP = SP + 3	//SP
000091A5 05 95              		R2=BP	// QImode move
000091A6 0D 07 02 00        		R3=BP+2
000091A8 03 95              		R2=R3	// QImode move
000091A9 C2 D2              		[R2]=R1	// QImode move
0000177C                    	.debug
0000177C 2E 00 73 00        		.dw '.stabn 0x44,0,265,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         35 00 2C 00
         00 00 00 00
00001790 2C 00 00 00        		.dd LM144-_Adjust
00001792 0D 00 0A 00        		.dw 0x0d,0x0a
000091AA                    	.code
                            	LM144:
000091AA 40 F0 7A 96        		call _Clock_GetHour	// call with return value
000091AC C8 D2              		[SP--]=R1	// QImode move
000091AD 40 F0 A4 8F        		call _AdjustHour	// call with return value
000091AF 41 00              		SP = SP + 1	//SP
000091B0 05 95              		R2=BP	// QImode move
000091B1 0D 07 03 00        		R3=BP+3
000091B3 03 95              		R2=R3	// QImode move
000091B4 C2 D2              		[R2]=R1	// QImode move
00001794                    	.debug
00001794 2E 00 73 00        		.dw '.stabn 0x44,0,266,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         36 00 2C 00
         00 00 00 00
000017A8 37 00 00 00        		.dd LM145-_Adjust
000017AA 0D 00 0A 00        		.dw 0x0d,0x0a
000091B5                    	.code
                            	LM145:
000091B5 40 F0 86 96        		call _Clock_GetMin	// call with return value
000091B7 C8 D2              		[SP--]=R1	// QImode move
000091B8 40 F0 3D 90        		call _AdjustMin	// call with return value
000091BA 41 00              		SP = SP + 1	//SP
000091BB 05 95              		R2=BP	// QImode move
000091BC 0D 07 04 00        		R3=BP+4
000091BE 03 95              		R2=R3	// QImode move
000091BF C2 D2              		[R2]=R1	// QImode move
000017AC                    	.debug
000017AC 2E 00 73 00        		.dw '.stabn 0x44,0,267,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         37 00 2C 00
         00 00 00 00
000017C0 42 00 00 00        		.dd LM146-_Adjust
000017C2 0D 00 0A 00        		.dw 0x0d,0x0a
000091C0                    	.code
                            	LM146:
000091C0 40 F0 92 96        		call _Clock_GetSec	// call with return value
000091C2 C8 D2              		[SP--]=R1	// QImode move
000091C3 40 F0 E5 90        		call _AdjustSec	// call with return value
000091C5 41 00              		SP = SP + 1	//SP
000091C6 05 95              		R2=BP	// QImode move
000091C7 0D 07 05 00        		R3=BP+5
000091C9 03 95              		R2=R3	// QImode move
000091CA C2 D2              		[R2]=R1	// QImode move
000017C4                    	.debug
000017C4 2E 00 73 00        		.dw '.stabn 0x44,0,269,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         39 00 2C 00
         00 00 00 00
000017D8 4D 00 00 00        		.dd LM147-_Adjust
000017DA 0D 00 0A 00        		.dw 0x0d,0x0a
000091CB                    	.code
                            	LM147:
000091CB C5 92              		R1=[BP]	// QImode move
000091CC C8 D2              		[SP--]=R1	// QImode move
000091CD 40 F0 9E 96        		call _Clock_SetYear	// call without return value
000091CF 41 00              		SP = SP + 1	//SP
000017DC                    	.debug
000017DC 2E 00 73 00        		.dw '.stabn 0x44,0,270,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         30 00 2C 00
         00 00 00 00
000017F0 52 00 00 00        		.dd LM148-_Adjust
000017F2 0D 00 0A 00        		.dw 0x0d,0x0a
000091D0                    	.code
                            	LM148:
000091D0 05 93              		R1=BP	// QImode move
000091D1 0D 05 01 00        		R2=BP+1
000091D3 02 97              		R3=R2	// QImode move
000091D4 C3 92              		R1=[R3]	// QImode move
000091D5 C8 D2              		[SP--]=R1	// QImode move
000091D6 40 F0 A9 96        		call _Clock_SetMon	// call without return value
000091D8 41 00              		SP = SP + 1	//SP
000017F4                    	.debug
000017F4 2E 00 73 00        		.dw '.stabn 0x44,0,271,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         31 00 2C 00
         00 00 00 00
00001808 5B 00 00 00        		.dd LM149-_Adjust
0000180A 0D 00 0A 00        		.dw 0x0d,0x0a
000091D9                    	.code
                            	LM149:
000091D9 05 93              		R1=BP	// QImode move
000091DA 0D 05 02 00        		R2=BP+2
000091DC 02 97              		R3=R2	// QImode move
000091DD C3 92              		R1=[R3]	// QImode move
000091DE C8 D2              		[SP--]=R1	// QImode move
000091DF 40 F0 B4 96        		call _Clock_SetDay	// call without return value
000091E1 41 00              		SP = SP + 1	//SP
0000180C                    	.debug
0000180C 2E 00 73 00        		.dw '.stabn 0x44,0,272,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         32 00 2C 00
         00 00 00 00
00001820 64 00 00 00        		.dd LM150-_Adjust
00001822 0D 00 0A 00        		.dw 0x0d,0x0a
000091E2                    	.code
                            	LM150:
000091E2 05 93              		R1=BP	// QImode move
000091E3 0D 05 03 00        		R2=BP+3
000091E5 02 97              		R3=R2	// QImode move
000091E6 C3 92              		R1=[R3]	// QImode move
000091E7 C8 D2              		[SP--]=R1	// QImode move
000091E8 40 F0 BF 96        		call _Clock_SetHour	// call without return value
000091EA 41 00              		SP = SP + 1	//SP
00001824                    	.debug
00001824 2E 00 73 00        		.dw '.stabn 0x44,0,273,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         33 00 2C 00
         00 00 00 00
00001838 6D 00 00 00        		.dd LM151-_Adjust
0000183A 0D 00 0A 00        		.dw 0x0d,0x0a
000091EB                    	.code
                            	LM151:
000091EB 05 93              		R1=BP	// QImode move
000091EC 0D 05 04 00        		R2=BP+4
000091EE 02 97              		R3=R2	// QImode move
000091EF C3 92              		R1=[R3]	// QImode move
000091F0 C8 D2              		[SP--]=R1	// QImode move
000091F1 40 F0 CA 96        		call _Clock_SetMin	// call without return value
000091F3 41 00              		SP = SP + 1	//SP
0000183C                    	.debug
0000183C 2E 00 73 00        		.dw '.stabn 0x44,0,274,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         34 00 2C 00
         00 00 00 00
00001850 76 00 00 00        		.dd LM152-_Adjust
00001852 0D 00 0A 00        		.dw 0x0d,0x0a
000091F4                    	.code
                            	LM152:
000091F4 05 93              		R1=BP	// QImode move
000091F5 0D 05 05 00        		R2=BP+5
000091F7 02 97              		R3=R2	// QImode move
000091F8 C3 92              		R1=[R3]	// QImode move
000091F9 C8 D2              		[SP--]=R1	// QImode move
000091FA 40 F0 D5 96        		call _Clock_SetSec	// call without return value
000091FC 41 00              		SP = SP + 1	//SP
00001854                    	.debug
00001854 2E 00 73 00        		.dw '.stabn 0x44,0,276,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         36 00 2C 00
         00 00 00 00
00001868 7F 00 00 00        		.dd LM153-_Adjust
0000186A 0D 00 0A 00        		.dw 0x0d,0x0a
000091FD                    	.code
                            	LM153:
000091FD 4E 92              		R1=14	// QImode move
000091FE C8 D2              		[SP--]=R1	// QImode move
000091FF 40 F0 CC 97        		call _PlaySnd	// call without return value
00009201 41 00              		SP = SP + 1	//SP
0000186C                    	.debug
0000186C 2E 00 73 00        		.dw '.stabn 0x44,0,277,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         37 00 2C 00
         00 00 00 00
00001880 84 00 00 00        		.dd LM154-_Adjust
00001882 0D 00 0A 00        		.dw 0x0d,0x0a
00009202                    	.code
                            	LM154:
00009202 C5 92              		R1=[BP]	// QImode move
00009203 C8 D2              		[SP--]=R1	// QImode move
00009204 40 F0 50 94        		call _PlayYear	// call without return value
00009206 41 00              		SP = SP + 1	//SP
00001884                    	.debug
00001884 2E 00 73 00        		.dw '.stabn 0x44,0,278,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         38 00 2C 00
         00 00 00 00
00001898 89 00 00 00        		.dd LM155-_Adjust
0000189A 0D 00 0A 00        		.dw 0x0d,0x0a
00009207                    	.code
                            	LM155:
00009207 05 93              		R1=BP	// QImode move
00009208 0D 05 01 00        		R2=BP+1
0000920A 02 97              		R3=R2	// QImode move
0000920B C3 92              		R1=[R3]	// QImode move
0000920C C8 D2              		[SP--]=R1	// QImode move
0000920D 40 F0 A4 94        		call _PlayMon	// call without return value
0000920F 41 00              		SP = SP + 1	//SP
0000189C                    	.debug
0000189C 2E 00 73 00        		.dw '.stabn 0x44,0,279,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         39 00 2C 00
         00 00 00 00
000018B0 92 00 00 00        		.dd LM156-_Adjust
000018B2 0D 00 0A 00        		.dw 0x0d,0x0a
00009210                    	.code
                            	LM156:
00009210 05 93              		R1=BP	// QImode move
00009211 0D 05 02 00        		R2=BP+2
00009213 02 97              		R3=R2	// QImode move
00009214 C3 92              		R1=[R3]	// QImode move
00009215 C8 D2              		[SP--]=R1	// QImode move
00009216 40 F0 B9 94        		call _PlayDay	// call without return value
00009218 41 00              		SP = SP + 1	//SP
000018B4                    	.debug
000018B4 2E 00 73 00        		.dw '.stabn 0x44,0,280,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         30 00 2C 00
         00 00 00 00
000018C8 9B 00 00 00        		.dd LM157-_Adjust
000018CA 0D 00 0A 00        		.dw 0x0d,0x0a
00009219                    	.code
                            	LM157:
00009219 05 93              		R1=BP	// QImode move
0000921A 0D 05 03 00        		R2=BP+3
0000921C 02 97              		R3=R2	// QImode move
0000921D C3 92              		R1=[R3]	// QImode move
0000921E C8 D2              		[SP--]=R1	// QImode move
0000921F 40 F0 CE 94        		call _PlayHour	// call without return value
00009221 41 00              		SP = SP + 1	//SP
000018CC                    	.debug
000018CC 2E 00 73 00        		.dw '.stabn 0x44,0,281,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         31 00 2C 00
         00 00 00 00
000018E0 A4 00 00 00        		.dd LM158-_Adjust
000018E2 0D 00 0A 00        		.dw 0x0d,0x0a
00009222                    	.code
                            	LM158:
00009222 05 93              		R1=BP	// QImode move
00009223 0D 05 04 00        		R2=BP+4
00009225 02 97              		R3=R2	// QImode move
00009226 C3 92              		R1=[R3]	// QImode move
00009227 C8 D2              		[SP--]=R1	// QImode move
00009228 40 F0 34 95        		call _PlayMin	// call without return value
0000922A 41 00              		SP = SP + 1	//SP
000018E4                    	.debug
000018E4 2E 00 73 00        		.dw '.stabn 0x44,0,282,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         32 00 2C 00
         00 00 00 00
000018F8 AD 00 00 00        		.dd LM159-_Adjust
000018FA 0D 00 0A 00        		.dw 0x0d,0x0a
0000922B                    	.code
                            	LM159:
                            	LBE8:
000018FC                    	.debug
000018FC 2E 00 73 00        		.dw '.stabn 0x44,0,282,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         32 00 2C 00
         00 00 00 00
00001910 AD 00 00 00        		.dd LM160-_Adjust
00001912 0D 00 0A 00        		.dw 0x0d,0x0a
0000922B                    	.code
                            	LM160:
                            	L131:
                            	
0000922B 47 00              		sp+=7
0000922C 88 98              		pop bp from [sp]
0000922D 90 9A              		retf
                            		.endp	// end of Adjust
                            	
00001914                    	.debug
00001914 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001926 07 00 00 00        		.dd LBB8-_Adjust
00001928 0D 00 0A 00        		.dw 0x0d,0x0a
0000922E                    	.code
0000192A                    	.debug
0000192A 2E 00 73 00        		.dw '.stabs "TempYear:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         59 00 65 00
         61 00 72 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000922E                    	.CODE
00001949                    	.debug
00001949 2E 00 73 00        		.dw '.stabs "TempMon:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         4D 00 6F 00
         6E 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000922E                    	.CODE
00001967                    	.debug
00001967 2E 00 73 00        		.dw '.stabs "TempDay:4",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         44 00 61 00
         79 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000922E                    	.CODE
00001985                    	.debug
00001985 2E 00 73 00        		.dw '.stabs "TempHour:4",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         48 00 6F 00
         75 00 72 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         33 00 0D 00
         0A 00      
0000922E                    	.CODE
000019A4                    	.debug
000019A4 2E 00 73 00        		.dw '.stabs "TempMin:4",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         4D 00 69 00
         6E 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000922E                    	.CODE
000019C2                    	.debug
000019C2 2E 00 73 00        		.dw '.stabs "TempSec:4",128,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 65 00
         6D 00 70 00
         53 00 65 00
         63 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000922E                    	.CODE
000019E0                    	.debug
000019E0 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000019F2 AD 00 00 00        		.dd LBE8-_Adjust
000019F4 0D 00 0A 00        		.dw 0x0d,0x0a
0000922E                    	.code
000019F6                    	.debug
000019F6 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000019FF B0 00 00 00        		.dd LME7-_Adjust
00001A01 0D 00 0A 00        		.dw 0x0d,0x0a
0000922E                    	.code
                            	LME7:
                            	.external _PlayMin
                            	.external _Clock_SetSec
                            	.external _Clock_SetMin
                            	.external _Clock_SetHour
                            	.external _Clock_SetDay
                            	.external _Clock_SetMon
                            	.external _Clock_SetYear
                            	.external _Clock_GetSec
                            	.external _Clock_GetMin
                            	.external _Clock_GetHour
                            	.external _Clock_GetDay
                            	.external _Clock_GetMon
                            	.external _Clock_GetYear
                            	.external _PlaySec
                            	.external _PlaySnd
                            	.external _PlayNum
                            	.external _PlayHour
                            	.external _PlayDay
                            	.external _Month_Day
                            	.external _PlayMon
                            	.external _Key_Get
                            	.external _PlayYear
                            		.end
0 error(s), 0 warning(s).


