Sunplus u'nSP Assembler - Ver. 1.14.12
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.23
                            	// Command: C:\PROGRA~1\Sunplus\UNSPID~1.2D\toolchain\cc1.exe C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccW8aaaa.i -fkeep-inline-functions -quiet -dumpbase main.c -mglobal-var-iram -gstabs -Wall -o .\Debug/main.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "E:/kkk  yuyinshibie/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         45 00 3A 00
         2F 00 6B 00
         6B 00 6B 00
         20 00 20 00
         79 00 75 00
         79 00 69 00
         6E 00 73 00
         68 00 69 00
         62 00 69 00
         65 00 2F 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
0000A6C9                    	.code
0000002D                    	.debug
0000002D 2E 00 73 00        		.dw '.stabs "E:/kkk  yuyinshibie/main.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         45 00 3A 00
         2F 00 6B 00
         6B 00 6B 00
         20 00 20 00
         79 00 75 00
         79 00 69 00
         6E 00 73 00
         68 00 69 00
         62 00 69 00
         65 00 2F 00
         6D 00 61 00
         69 00 6E 00
         2E 00 63 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
0000A6C9                    	.code
0000A6C9                    	.code
                            	Ltext0:
00000060                    	.debug
00000060 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
0000008C                    	.debug
0000008C 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
000000B2                    	.debug
000000B2 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6C9                    	.CODE
000000ED                    	.debug
000000ED 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
0000011D                    	.debug
0000011D 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
00000157                    	.debug
00000157 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
00000197                    	.debug
00000197 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6C9                    	.CODE
000001D6                    	.debug
000001D6 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
00000208                    	.debug
00000208 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
0000023E                    	.debug
0000023E 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
00000274                    	.debug
00000274 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6C9                    	.CODE
000002A7                    	.debug
000002A7 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
000002CD                    	.debug
000002CD 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6C9                    	.CODE
000002F4                    	.debug
000002F4 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
00000320                    	.debug
00000320 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6C9                    	.CODE
00000361                    	.debug
00000361 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6C9                    	.CODE
00000390                    	.debug
00000390 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
000003C0                    	.debug
000003C0 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A6C9                    	.CODE
000003F5                    	.debug
000003F5 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6C9                    	.CODE
0000A6C9                    	.code
00000415                    	.debug
00000415 2E 00 73 00        		.dw '.stabs "Delay:F19",36,0,0,',0,0,offset _Delay,seg _Delay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         44 00 65 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000A6C9                    	.CODE
                            	.public _Delay
                            	_Delay:	.proc
00000435                    	.debug
00000435 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
00000448 00 00 00 00        		.dd LM1-_Delay
0000044A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6C9                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000044C                    	.debug
0000044C 2E 00 73 00        		.dw '.stabn 0xa6,0,0,1',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
0000A6C9                    	.code
0000A6C9 88 DA              		PUSH BP to [SP]
0000A6CA 41 20              		SP-=1
0000A6CB 08 0B 01 00        		BP=SP+1
                            	
0000A6CD 0D 03 04 00        		R1=BP+4
                            	LBB2:
0000045F                    	.debug
0000045F 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
00000472 06 00 00 00        		.dd LM2-_Delay
00000474 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6CF                    	.code
                            	LM2:
0000A6CF 40 94              		R2=0	// QImode move
0000A6D0 C5 D4              		[BP]=R2	// QImode move
                            	L3:
0000A6D1 C5 94              		R2=[BP]	// QImode move
0000A6D2 0A 45 FE 3F        		CMP R2,16382	// QImode compare
0000A6D4 04 8E 01 EE        		NSJNA L6	//QImode LEU
         00 EE      
0000A6D7 0F 9F E2 A6        		PC=L4	// jump
                            	L6:
00000476                    	.debug
00000476 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00000489 10 00 00 00        		.dd LM3-_Delay
0000048B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6D9                    	.code
                            	LM3:
0000A6D9 41 94              		R2=1	// QImode move
0000A6DA 1A D5 12 70        		[28690]=R2	// QImode move
0000048D                    	.debug
0000048D 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
000004A0 13 00 00 00        		.dd LM4-_Delay
000004A2 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6DC                    	.code
                            	LM4:
                            	L5:
0000A6DC C5 94              		R2=[BP]	// QImode move
0000A6DD 0A 07 01 00        		R3=R2+1
0000A6DF C5 D6              		[BP]=R3	// QImode move
0000A6E0 0F 9F D1 A6        		PC=L3	// jump
                            	L4:
000004A4                    	.debug
000004A4 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
000004B7 19 00 00 00        		.dd LM5-_Delay
000004B9 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E2                    	.code
                            	LM5:
                            	LBE2:
000004BB                    	.debug
000004BB 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
000004CE 19 00 00 00        		.dd LM6-_Delay
000004D0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E2                    	.code
                            	LM6:
                            	L2:
                            	
0000A6E2 41 00              		SP+=1
0000A6E3 88 98              		POP BP from [SP]
0000A6E4 90 9A              		RETF
                            		.endp	// end of Delay
                            	
000004D2                    	.debug
000004D2 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000004E4 06 00 00 00        		.dd LBB2-_Delay
000004E6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E5                    	.code
000004E8                    	.debug
000004E8 2E 00 73 00        		.dw '.stabs "i:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A6E5                    	.CODE
00000500                    	.debug
00000500 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000512 19 00 00 00        		.dd LBE2-_Delay
00000514 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E5                    	.code
00000516                    	.debug
00000516 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000051F 1C 00 00 00        		.dd LME1-_Delay
00000521 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E5                    	.code
                            	LME1:
0000A6E5                    	.code
00000523                    	.debug
00000523 2E 00 73 00        		.dw '.stabs "PlaySnd:F19",36,0,0,',0,0,offset _PlaySnd,seg _PlaySnd,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         53 00 6E 00
         64 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         1C 00 00 00
         0D 00 0A 00
0000A6E5                    	.CODE
                            	.public _PlaySnd
                            	_PlaySnd:	.proc
00000545                    	.debug
00000545 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
00000558 00 00 00 00        		.dd LM7-_PlaySnd
0000055A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6E5                    	.code
                            	LM7:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000055C                    	.debug
0000055C 2E 00 73 00        		.dw '.stabn 0xa6,0,0,1',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
0000A6E5                    	.code
0000A6E5 88 DA              		PUSH BP to [SP]
0000A6E6 41 20              		SP-=1
0000A6E7 08 0B 01 00        		BP=SP+1
                            	
0000A6E9 0D 03 04 00        		R1=BP+4
0000A6EB C5 D2              		[BP]=R1	// QImode move
0000056F                    	.debug
0000056F 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
00000582 07 00 00 00        		.dd LM8-_PlaySnd
00000584 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6EC                    	.code
                            	LM8:
0000A6EC 40 F0 DB 9B        		CALL _BSR_StopRecognizer	// call without return value
00000586                    	.debug
00000586 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
00000599 09 00 00 00        		.dd LM9-_PlaySnd
0000059B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6EE                    	.code
                            	LM9:
0000A6EE 41 92              		R1=1	// QImode move
0000A6EF C8 D2              		[SP--]=R1	// QImode move
0000A6F0 40 F0 C0 9F        		CALL _SACM_S480_Initial	// call with return value
0000A6F2 41 00              		SP = SP + 1	//SP
0000059D                    	.debug
0000059D 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
000005B0 0E 00 00 00        		.dd LM10-_PlaySnd
000005B2 0D 00 0A 00        		.dw 0x0d,0x0a
0000A6F3                    	.code
                            	LM10:
0000A6F3 43 92              		R1=3	// QImode move
0000A6F4 C8 D2              		[SP--]=R1	// QImode move
0000A6F5 C5 92              		R1=[BP]	// QImode move
0000A6F6 C5 96              		R3=[BP]	// QImode move
0000A6F7 0B 05 01 00        		R2=R3+1
0000A6F9 02 97              		R3=R2	// QImode move
0000A6FA C3 92              		R1=[R3]	// QImode move
0000A6FB C8 D2              		[SP--]=R1	// QImode move
0000A6FC C5 94              		R2=[BP]	// QImode move
0000A6FD C2 92              		R1=[R2]	// QImode move
0000A6FE C8 D2              		[SP--]=R1	// QImode move
0000A6FF 40 F0 F7 9F        		CALL _SACM_S480_Play	// call with return value
0000A701 43 00              		SP = SP + 3	//SP
000005B4                    	.debug
000005B4 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
000005C7 1D 00 00 00        		.dd LM11-_PlaySnd
000005C9 0D 00 0A 00        		.dw 0x0d,0x0a
0000A702                    	.code
                            	LM11:
                            	L9:
0000A702 40 F0 D9 A0        		CALL _SACM_S480_Status	// call with return value
0000A704 09 B5 01 00        		R2=R1&1
0000A706 40 44              		CMP R2,0	// QImode test
0000A707 04 4E 01 EE        		NSJNZ L11	//QImode NE
         00 EE      
0000A70A 0F 9F 13 A7        		PC=L10	// jump
                            	L11:
000005CB                    	.debug
000005CB 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
000005DE 27 00 00 00        		.dd LM12-_PlaySnd
000005E0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A70C                    	.code
                            	LM12:
0000A70C 40 F0 30 A1        		CALL _SACM_S480_ServiceLoop	// call with return value
000005E2                    	.debug
000005E2 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
000005F5 29 00 00 00        		.dd LM13-_PlaySnd
000005F7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A70E                    	.code
                            	LM13:
0000A70E 41 92              		R1=1	// QImode move
0000A70F 19 D3 12 70        		[28690]=R1	// QImode move
000005F9                    	.debug
000005F9 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
0000060C 2C 00 00 00        		.dd LM14-_PlaySnd
0000060E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A711                    	.code
                            	LM14:
0000A711 0F 9F 02 A7        		PC=L9	// jump
                            	L10:
00000610                    	.debug
00000610 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000623 2E 00 00 00        		.dd LM15-_PlaySnd
00000625 0D 00 0A 00        		.dw 0x0d,0x0a
0000A713                    	.code
                            	LM15:
0000A713 40 F0 8F A0        		CALL _SACM_S480_Stop	// call with return value
00000627                    	.debug
00000627 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
0000063A 30 00 00 00        		.dd LM16-_PlaySnd
0000063C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A715                    	.code
                            	LM16:
0000A715 40 92              		R1=0	// QImode move
0000A716 C8 D2              		[SP--]=R1	// QImode move
0000A717 40 F0 E8 9B        		CALL _BSR_InitRecognizer	// call with return value
0000A719 41 00              		SP = SP + 1	//SP
0000063E                    	.debug
0000063E 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000651 35 00 00 00        		.dd LM17-_PlaySnd
00000653 0D 00 0A 00        		.dw 0x0d,0x0a
0000A71A                    	.code
                            	LM17:
00000655                    	.debug
00000655 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000668 35 00 00 00        		.dd LM18-_PlaySnd
0000066A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A71A                    	.code
                            	LM18:
                            	L8:
                            	
0000A71A 41 00              		SP+=1
0000A71B 88 98              		POP BP from [SP]
0000A71C 90 9A              		RETF
                            		.endp	// end of PlaySnd
                            	
0000066C                    	.debug
0000066C 2E 00 73 00        		.dw '.stabs "SndIndex:p4",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 6E 00
         64 00 49 00
         6E 00 64 00
         65 00 78 00
         3A 00 70 00
         34 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000A71D                    	.CODE
0000068C                    	.debug
0000068C 2E 00 73 00        		.dw '.stabs "DAC_Channel:p4",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         44 00 41 00
         43 00 5F 00
         43 00 68 00
         61 00 6E 00
         6E 00 65 00
         6C 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         35 00 0D 00
         0A 00      
0000A71D                    	.CODE
000006AF                    	.debug
000006AF 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000006B8 38 00 00 00        		.dd LME2-_PlaySnd
000006BA 0D 00 0A 00        		.dw 0x0d,0x0a
0000A71D                    	.code
                            	LME2:
0000A71D                    	.code
000006BC                    	.debug
000006BC 2E 00 73 00        		.dw '.stabs "TrainWord:F1",36,0,0,',0,0,offset _TrainWord,seg _TrainWord,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 72 00
         61 00 69 00
         6E 00 57 00
         6F 00 72 00
         64 00 3A 00
         46 00 31 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 54 00
         00 00 0D 00
         0A 00      
0000A71D                    	.CODE
                            	.public _TrainWord
                            	_TrainWord:	.proc
000006DF                    	.debug
000006DF 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
000006F3 00 00 00 00        		.dd LM19-_TrainWord
000006F5 0D 00 0A 00        		.dw 0x0d,0x0a
0000A71D                    	.code
                            	LM19:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
000006F7                    	.debug
000006F7 2E 00 73 00        		.dw '.stabn 0xa6,0,0,2',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 0D 00
         0A 00      
0000A71D                    	.code
0000A71D 88 DA              		PUSH BP to [SP]
0000A71E 42 20              		SP-=2
0000A71F 08 0B 01 00        		BP=SP+1
                            	
0000A721 0D 03 05 00        		R1=BP+5
0000A723 01 D2              		[BP+1]=R1	// QImode move
                            	LBB3:
0000070A                    	.debug
0000070A 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
0000071E 07 00 00 00        		.dd LM20-_TrainWord
00000720 0D 00 0A 00        		.dw 0x0d,0x0a
0000A724                    	.code
                            	LM20:
0000A724 43 92              		R1=3	// QImode move
0000A725 C8 D2              		[SP--]=R1	// QImode move
0000A726 01 92              		R1=[BP+1]	// QImode move
0000A727 01 96              		R3=[BP+1]	// QImode move
0000A728 0B 05 01 00        		R2=R3+1
0000A72A 02 97              		R3=R2	// QImode move
0000A72B C3 92              		R1=[R3]	// QImode move
0000A72C C8 D2              		[SP--]=R1	// QImode move
0000A72D 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A72F 42 00              		SP = SP + 2	//SP
00000722                    	.debug
00000722 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000736 13 00 00 00        		.dd LM21-_TrainWord
00000738 0D 00 0A 00        		.dw 0x0d,0x0a
0000A730                    	.code
                            	LM21:
                            	L14:
0000A730 0F 9F 34 A7        		PC=L16	// jump
0000A732 0F 9F 83 A7        		PC=L15	// jump
                            	L16:
0000073A                    	.debug
0000073A 2E 00 73 00        		.dw '.stabn 0x44,0,109,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         39 00 2C 00
         00 00 00 00
0000074E 17 00 00 00        		.dd LM22-_TrainWord
00000750 0D 00 0A 00        		.dw 0x0d,0x0a
0000A734                    	.code
                            	LM22:
0000A734 40 92              		R1=0	// QImode move
0000A735 C8 D2              		[SP--]=R1	// QImode move
0000A736 01 94              		R2=[BP+1]	// QImode move
0000A737 C2 92              		R1=[R2]	// QImode move
0000A738 C8 D2              		[SP--]=R1	// QImode move
0000A739 40 F0 5A 88        		CALL _BSR_Train	// call with return value
0000A73B 42 00              		SP = SP + 2	//SP
0000A73C C5 D2              		[BP]=R1	// QImode move
00000752                    	.debug
00000752 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
00000766 20 00 00 00        		.dd LM23-_TrainWord
00000768 0D 00 0A 00        		.dw 0x0d,0x0a
0000A73D                    	.code
                            	LM23:
0000A73D C5 92              		R1=[BP]	// QImode move
0000A73E 40 42              		CMP R1,0	// QImode test
0000A73F 04 4E 01 EE        		NSJNZ L17	//QImode NE
         00 EE      
0000A742 0F 9F 83 A7        		PC=L15	// jump
                            	L17:
0000076A                    	.debug
0000076A 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
0000077E 27 00 00 00        		.dd LM24-_TrainWord
00000780 0D 00 0A 00        		.dw 0x0d,0x0a
0000A744                    	.code
                            	LM24:
0000A744 C5 94              		R2=[BP]	// QImode move
0000A745 02 93              		R1=R2	// QImode move
0000A746 09 23 FA FF        		R1=R1-(-6)
0000A748 45 42              		CMP R1,5	// QImode compare
0000A749 35 9E 01 EE        		NSJA L25	//QImode GTU
         00 EE      
0000A74C 0A 95 5D 80        		R2=L26	// QImode move
0000A74E 02 03              		R1 = R1 + R2	//addqi3
0000A74F 01 97              		R3=R1	// QImode move
0000A750 C3 92              		R1=[R3]	// QImode move
0000A751 01 9F              		PC=R1	// tablejump
0000805D                    	.text
                            	L26:
0000805D 7C A7              		.dw L24
0000805E 72 A7              		.dw L23
0000805F 6F A7              		.dw L22
00008060 65 A7              		.dw L21
00008061 5C A7              		.dw L20
00008062 52 A7              		.dw L19
0000A752                    	.code
                            	L19:
00000782                    	.debug
00000782 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
00000796 35 00 00 00        		.dd LM25-_TrainWord
00000798 0D 00 0A 00        		.dw 0x0d,0x0a
0000A752                    	.code
                            	LM25:
0000A752 43 92              		R1=3	// QImode move
0000A753 C8 D2              		[SP--]=R1	// QImode move
0000A754 47 92              		R1=7	// QImode move
0000A755 C8 D2              		[SP--]=R1	// QImode move
0000A756 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A758 42 00              		SP = SP + 2	//SP
0000079A                    	.debug
0000079A 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
000007AE 3C 00 00 00        		.dd LM26-_TrainWord
000007B0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A759                    	.code
                            	LM26:
0000A759 41 62              		R1=(-1)	// QImode move
0000A75A 0F 9F 86 A7        		PC=L13	// jump
                            	L20:
000007B2                    	.debug
000007B2 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
000007C6 3F 00 00 00        		.dd LM27-_TrainWord
000007C8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A75C                    	.code
                            	LM27:
0000A75C 43 92              		R1=3	// QImode move
0000A75D C8 D2              		[SP--]=R1	// QImode move
0000A75E 46 92              		R1=6	// QImode move
0000A75F C8 D2              		[SP--]=R1	// QImode move
0000A760 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A762 42 00              		SP = SP + 2	//SP
000007CA                    	.debug
000007CA 2E 00 73 00        		.dw '.stabn 0x44,0,119,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         39 00 2C 00
         00 00 00 00
000007DE 46 00 00 00        		.dd LM28-_TrainWord
000007E0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A763                    	.code
                            	LM28:
0000A763 0F 9F 81 A7        		PC=L18	// jump
                            	L21:
000007E2                    	.debug
000007E2 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
000007F6 48 00 00 00        		.dd LM29-_TrainWord
000007F8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A765                    	.code
                            	LM29:
0000A765 43 92              		R1=3	// QImode move
0000A766 C8 D2              		[SP--]=R1	// QImode move
0000A767 48 92              		R1=8	// QImode move
0000A768 C8 D2              		[SP--]=R1	// QImode move
0000A769 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A76B 42 00              		SP = SP + 2	//SP
000007FA                    	.debug
000007FA 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
0000080E 4F 00 00 00        		.dd LM30-_TrainWord
00000810 0D 00 0A 00        		.dw 0x0d,0x0a
0000A76C                    	.code
                            	LM30:
0000A76C 43 62              		R1=(-3)	// QImode move
0000A76D 0F 9F 86 A7        		PC=L13	// jump
                            	L22:
00000812                    	.debug
00000812 2E 00 73 00        		.dw '.stabn 0x44,0,124,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         34 00 2C 00
         00 00 00 00
00000826 52 00 00 00        		.dd LM31-_TrainWord
00000828 0D 00 0A 00        		.dw 0x0d,0x0a
0000A76F                    	.code
                            	LM31:
0000A76F 44 62              		R1=(-4)	// QImode move
0000A770 0F 9F 86 A7        		PC=L13	// jump
                            	L23:
0000082A                    	.debug
0000082A 2E 00 73 00        		.dw '.stabn 0x44,0,126,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         36 00 2C 00
         00 00 00 00
0000083E 55 00 00 00        		.dd LM32-_TrainWord
00000840 0D 00 0A 00        		.dw 0x0d,0x0a
0000A772                    	.code
                            	LM32:
0000A772 43 92              		R1=3	// QImode move
0000A773 C8 D2              		[SP--]=R1	// QImode move
0000A774 48 92              		R1=8	// QImode move
0000A775 C8 D2              		[SP--]=R1	// QImode move
0000A776 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A778 42 00              		SP = SP + 2	//SP
00000842                    	.debug
00000842 2E 00 73 00        		.dw '.stabn 0x44,0,127,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         37 00 2C 00
         00 00 00 00
00000856 5C 00 00 00        		.dd LM33-_TrainWord
00000858 0D 00 0A 00        		.dw 0x0d,0x0a
0000A779                    	.code
                            	LM33:
0000A779 45 62              		R1=(-5)	// QImode move
0000A77A 0F 9F 86 A7        		PC=L13	// jump
                            	L24:
0000085A                    	.debug
0000085A 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
0000086E 5F 00 00 00        		.dd LM34-_TrainWord
00000870 0D 00 0A 00        		.dw 0x0d,0x0a
0000A77C                    	.code
                            	LM34:
0000A77C 46 62              		R1=(-6)	// QImode move
0000A77D 0F 9F 86 A7        		PC=L13	// jump
                            	L25:
00000872                    	.debug
00000872 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000886 62 00 00 00        		.dd LM35-_TrainWord
00000888 0D 00 0A 00        		.dw 0x0d,0x0a
0000A77F                    	.code
                            	LM35:
0000A77F 0F 9F 81 A7        		PC=L18	// jump
                            	L18:
0000088A                    	.debug
0000088A 2E 00 73 00        		.dw '.stabn 0x44,0,133,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         33 00 2C 00
         00 00 00 00
0000089E 64 00 00 00        		.dd LM36-_TrainWord
000008A0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A781                    	.code
                            	LM36:
0000A781 0F 9F 30 A7        		PC=L14	// jump
                            	L15:
000008A2                    	.debug
000008A2 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
000008B6 66 00 00 00        		.dd LM37-_TrainWord
000008B8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A783                    	.code
                            	LM37:
0000A783 40 92              		R1=0	// QImode move
0000A784 0F 9F 86 A7        		PC=L13	// jump
000008BA                    	.debug
000008BA 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
000008CE 69 00 00 00        		.dd LM38-_TrainWord
000008D0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A786                    	.code
                            	LM38:
                            	LBE3:
000008D2                    	.debug
000008D2 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
000008E6 69 00 00 00        		.dd LM39-_TrainWord
000008E8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A786                    	.code
                            	LM39:
                            	L13:
                            	
0000A786 42 00              		SP+=2
0000A787 88 98              		POP BP from [SP]
0000A788 90 9A              		RETF
                            		.endp	// end of TrainWord
                            	
000008EA                    	.debug
000008EA 2E 00 73 00        		.dw '.stabs "WordID:p4",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         57 00 6F 00
         72 00 64 00
         49 00 44 00
         3A 00 70 00
         34 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000A789                    	.CODE
00000908                    	.debug
00000908 2E 00 73 00        		.dw '.stabs "SndID:p4",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 6E 00
         64 00 49 00
         44 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000A789                    	.CODE
00000925                    	.debug
00000925 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000937 07 00 00 00        		.dd LBB3-_TrainWord
00000939 0D 00 0A 00        		.dw 0x0d,0x0a
0000A789                    	.code
0000093B                    	.debug
0000093B 2E 00 73 00        		.dw '.stabs "Result:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 75 00
         6C 00 74 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A789                    	.CODE
00000958                    	.debug
00000958 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000096A 69 00 00 00        		.dd LBE3-_TrainWord
0000096C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A789                    	.code
0000096E                    	.debug
0000096E 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000977 6C 00 00 00        		.dd LME3-_TrainWord
00000979 0D 00 0A 00        		.dw 0x0d,0x0a
0000A789                    	.code
                            	LME3:
0000A789                    	.code
0000097B                    	.debug
0000097B 2E 00 73 00        		.dw '.stabs "TrainSD:F19",36,0,0,',0,0,offset _TrainSD,seg _TrainSD,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 72 00
         61 00 69 00
         6E 00 53 00
         44 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         C0 00 00 00
         0D 00 0A 00
0000A789                    	.CODE
                            	.public _TrainSD
                            	_TrainSD:	.proc
0000099D                    	.debug
0000099D 2E 00 73 00        		.dw '.stabn 0x44,0,144,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         34 00 2C 00
         00 00 00 00
000009B1 00 00 00 00        		.dd LM40-_TrainSD
000009B3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A789                    	.code
                            	LM40:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000009B5                    	.debug
000009B5 2E 00 73 00        		.dw '.stabn 0xa6,0,0,1',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
0000A789                    	.code
0000A789 88 DA              		PUSH BP to [SP]
0000A78A 41 20              		SP-=1
0000A78B 08 0B 01 00        		BP=SP+1
                            	
0000A78D 0D 03 04 00        		R1=BP+4
0000A78F C5 D2              		[BP]=R1	// QImode move
000009C8                    	.debug
000009C8 2E 00 73 00        		.dw '.stabn 0x44,0,145,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         35 00 2C 00
         00 00 00 00
000009DC 07 00 00 00        		.dd LM41-_TrainSD
000009DE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A790                    	.code
                            	LM41:
                            	L30:
0000A790 40 92              		R1=0	// QImode move
0000A791 C8 D2              		[SP--]=R1	// QImode move
0000A792 09 93 00 01        		R1=256	// QImode move
0000A794 C8 D2              		[SP--]=R1	// QImode move
0000A795 40 F0 1D A7        		CALL _TrainWord	// call with return value
0000A797 42 00              		SP = SP + 2	//SP
0000A798 40 42              		CMP R1,0	// QImode test
0000A799 04 4E 01 EE        		NSJNZ L32	//QImode NE
         00 EE      
0000A79C 0F 9F A0 A7        		PC=L31	// jump
                            	L32:
0000A79E 0F 9F 90 A7        		PC=L30	// jump
                            	L31:
000009E0                    	.debug
000009E0 2E 00 73 00        		.dw '.stabn 0x44,0,146,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         36 00 2C 00
         00 00 00 00
000009F4 17 00 00 00        		.dd LM42-_TrainSD
000009F6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7A0                    	.code
                            	LM42:
                            	L33:
0000A7A0 41 92              		R1=1	// QImode move
0000A7A1 C8 D2              		[SP--]=R1	// QImode move
0000A7A2 09 93 01 01        		R1=257	// QImode move
0000A7A4 C8 D2              		[SP--]=R1	// QImode move
0000A7A5 40 F0 1D A7        		CALL _TrainWord	// call with return value
0000A7A7 42 00              		SP = SP + 2	//SP
0000A7A8 40 42              		CMP R1,0	// QImode test
0000A7A9 04 4E 01 EE        		NSJNZ L35	//QImode NE
         00 EE      
0000A7AC 0F 9F B0 A7        		PC=L34	// jump
                            	L35:
0000A7AE 0F 9F A0 A7        		PC=L33	// jump
                            	L34:
000009F8                    	.debug
000009F8 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
00000A0C 27 00 00 00        		.dd LM43-_TrainSD
00000A0E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7B0                    	.code
                            	LM43:
00000A10                    	.debug
00000A10 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
00000A24 27 00 00 00        		.dd LM44-_TrainSD
00000A26 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7B0                    	.code
                            	LM44:
                            	L29:
                            	
0000A7B0 41 00              		SP+=1
0000A7B1 88 98              		POP BP from [SP]
0000A7B2 90 9A              		RETF
                            		.endp	// end of TrainSD
                            	
00000A28                    	.debug
00000A28 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000A31 2A 00 00 00        		.dd LME4-_TrainSD
00000A33 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7B3                    	.code
                            	LME4:
0000A7B3                    	.code
00000A35                    	.debug
00000A35 2E 00 73 00        		.dw '.stabs "StoreSD:F19",36,0,0,',0,0,offset _StoreSD,seg _StoreSD,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 74 00
         6F 00 72 00
         65 00 53 00
         44 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         EA 00 00 00
         0D 00 0A 00
0000A7B3                    	.CODE
                            	.public _StoreSD
                            	_StoreSD:	.proc
00000A57                    	.debug
00000A57 2E 00 73 00        		.dw '.stabn 0x44,0,159,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         39 00 2C 00
         00 00 00 00
00000A6B 00 00 00 00        		.dd LM45-_StoreSD
00000A6D 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7B3                    	.code
                            	LM45:
                            		// total=7, vars=7
                            		// frame_pointer_needed: 1
00000A6F                    	.debug
00000A6F 2E 00 73 00        		.dw '.stabn 0xa6,0,0,7',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         37 00 0D 00
         0A 00      
0000A7B3                    	.code
0000A7B3 88 DA              		PUSH BP to [SP]
0000A7B4 47 20              		SP-=7
0000A7B5 08 0B 01 00        		BP=SP+1
                            	
0000A7B7 0D 03 0A 00        		R1=BP+10
0000A7B9 04 D2              		[BP+4]=R1	// QImode move
                            	LBB4:
00000A82                    	.debug
00000A82 2E 00 73 00        		.dw '.stabn 0x44,0,160,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         30 00 2C 00
         00 00 00 00
00000A96 07 00 00 00        		.dd LM46-_StoreSD
00000A98 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7BA                    	.code
                            	LM46:
0000A7BA 09 63 00 20        		R1=(-8192)	// QImode move
0000A7BC C8 D2              		[SP--]=R1	// QImode move
0000A7BD 40 F0 6A AC        		CALL _F_FlashErase	// call without return value
0000A7BF 41 00              		SP = SP + 1	//SP
00000A9A                    	.debug
00000A9A 2E 00 73 00        		.dw '.stabn 0x44,0,161,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         31 00 2C 00
         00 00 00 00
00000AAE 0D 00 00 00        		.dd LM47-_StoreSD
00000AB0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7C0                    	.code
                            	LM47:
0000A7C0 09 63 00 1F        		R1=(-7936)	// QImode move
0000A7C2 C8 D2              		[SP--]=R1	// QImode move
0000A7C3 40 F0 6A AC        		CALL _F_FlashErase	// call without return value
0000A7C5 41 00              		SP = SP + 1	//SP
00000AB2                    	.debug
00000AB2 2E 00 73 00        		.dw '.stabn 0x44,0,162,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         32 00 2C 00
         00 00 00 00
00000AC6 13 00 00 00        		.dd LM48-_StoreSD
00000AC8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7C6                    	.code
                            	LM48:
0000A7C6 09 63 00 20        		R1=(-8192)	// QImode move
0000A7C8 C5 D2              		[BP]=R1	// QImode move
00000ACA                    	.debug
00000ACA 2E 00 73 00        		.dw '.stabn 0x44,0,163,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         33 00 2C 00
         00 00 00 00
00000ADE 16 00 00 00        		.dd LM49-_StoreSD
00000AE0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7C9                    	.code
                            	LM49:
0000A7C9 05 93              		R1=BP	// QImode move
0000A7CA 0D 05 02 00        		R2=BP+2
0000A7CC 09 93 00 01        		R1=256	// QImode move
0000A7CE 02 97              		R3=R2	// QImode move
0000A7CF C3 D2              		[R3]=R1	// QImode move
                            	L39:
0000A7D0 05 93              		R1=BP	// QImode move
0000A7D1 0D 05 02 00        		R2=BP+2
0000A7D3 02 99              		R4=R2	// QImode move
0000A7D4 C4 92              		R1=[R4]	// QImode move
0000A7D5 09 43 01 01        		CMP R1,257	// QImode compare
0000A7D7 04 8E 01 EE        		NSJNA L42	//QImode LEU
         00 EE      
0000A7DA 0F 9F 51 A8        		PC=L40	// jump
                            	L42:
00000AE2                    	.debug
00000AE2 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
00000AF6 29 00 00 00        		.dd LM50-_StoreSD
00000AF8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7DC                    	.code
                            	LM50:
0000A7DC 05 93              		R1=BP	// QImode move
0000A7DD 0D 03 03 00        		R1=BP+3
0000A7DF 05 D2              		[BP+5]=R1	// QImode move
0000A7E0 05 93              		R1=BP	// QImode move
0000A7E1 0D 05 02 00        		R2=BP+2
0000A7E3 02 97              		R3=R2	// QImode move
0000A7E4 C3 92              		R1=[R3]	// QImode move
0000A7E5 C8 D2              		[SP--]=R1	// QImode move
0000A7E6 40 F0 80 85        		CALL _BSR_ExportSDWord	// call with return value
0000A7E8 41 00              		SP = SP + 1	//SP
0000A7E9 05 98              		R4=[BP+5]	// QImode move
0000A7EA C4 D2              		[R4]=R1	// QImode move
00000AFA                    	.debug
00000AFA 2E 00 73 00        		.dw '.stabn 0x44,0,166,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         36 00 2C 00
         00 00 00 00
00000B0E 38 00 00 00        		.dd LM51-_StoreSD
00000B10 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7EB                    	.code
                            	LM51:
                            	L43:
0000A7EB 05 93              		R1=BP	// QImode move
0000A7EC 0D 05 03 00        		R2=BP+3
0000A7EE 02 97              		R3=R2	// QImode move
0000A7EF C3 92              		R1=[R3]	// QImode move
0000A7F0 40 42              		CMP R1,0	// QImode test
0000A7F1 04 4E 01 EE        		NSJNZ L45	//QImode NE
         00 EE      
0000A7F4 0F 9F 07 A8        		PC=L44	// jump
                            	L45:
00000B12                    	.debug
00000B12 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
00000B26 43 00 00 00        		.dd LM52-_StoreSD
00000B28 0D 00 0A 00        		.dw 0x0d,0x0a
0000A7F6                    	.code
                            	LM52:
0000A7F6 05 93              		R1=BP	// QImode move
0000A7F7 0D 09 03 00        		R4=BP+3
0000A7F9 06 D8              		[BP+6]=R4	// QImode move
0000A7FA 05 93              		R1=BP	// QImode move
0000A7FB 0D 05 02 00        		R2=BP+2
0000A7FD 02 97              		R3=R2	// QImode move
0000A7FE C3 92              		R1=[R3]	// QImode move
0000A7FF C8 D2              		[SP--]=R1	// QImode move
0000A800 40 F0 80 85        		CALL _BSR_ExportSDWord	// call with return value
0000A802 41 00              		SP = SP + 1	//SP
0000A803 06 98              		R4=[BP+6]	// QImode move
0000A804 C4 D2              		[R4]=R1	// QImode move
0000A805 0F 9F EB A7        		PC=L43	// jump
                            	L44:
00000B2A                    	.debug
00000B2A 2E 00 73 00        		.dw '.stabn 0x44,0,168,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         38 00 2C 00
         00 00 00 00
00000B3E 54 00 00 00        		.dd LM53-_StoreSD
00000B40 0D 00 0A 00        		.dw 0x0d,0x0a
0000A807                    	.code
                            	LM53:
0000A807 05 93              		R1=BP	// QImode move
0000A808 0D 05 01 00        		R2=BP+1
0000A80A 40 92              		R1=0	// QImode move
0000A80B 02 97              		R3=R2	// QImode move
0000A80C C3 D2              		[R3]=R1	// QImode move
                            	L46:
0000A80D 05 93              		R1=BP	// QImode move
0000A80E 0D 05 01 00        		R2=BP+1
0000A810 02 99              		R4=R2	// QImode move
0000A811 C4 92              		R1=[R4]	// QImode move
0000A812 09 43 63 00        		CMP R1,99	// QImode compare
0000A814 04 8E 01 EE        		NSJNA L49	//QImode LEU
         00 EE      
0000A817 0F 9F 40 A8        		PC=L41	// jump
                            	L49:
00000B42                    	.debug
00000B42 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
00000B56 66 00 00 00        		.dd LM54-_StoreSD
00000B58 0D 00 0A 00        		.dw 0x0d,0x0a
0000A819                    	.code
                            	LM54:
0000A819 05 93              		R1=BP	// QImode move
0000A81A 0D 05 01 00        		R2=BP+1
0000A81C 02 93              		R1=R2	// QImode move
0000A81D C1 96              		R3=[R1]
0000A81E 40 98              		R4=0
0000A81F 09 93 78 03        		R1=_BSR_SDModel	// QImode move
0000A821 03 95              		R2=R3	// QImode move
0000A822 02 03              		R1 = R1 + R2	//addqi3
0000A823 01 97              		R3=R1	// QImode move
0000A824 C3 94              		R2=[R3]	// QImode move
0000A825 C8 D4              		[SP--]=R2	// QImode move
0000A826 C5 92              		R1=[BP]	// QImode move
0000A827 C8 D2              		[SP--]=R1	// QImode move
0000A828 40 F0 44 AC        		CALL _F_FlashWrite1Word	// call without return value
0000A82A 42 00              		SP = SP + 2	//SP
00000B5A                    	.debug
00000B5A 2E 00 73 00        		.dw '.stabn 0x44,0,171,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         31 00 2C 00
         00 00 00 00
00000B6E 78 00 00 00        		.dd LM55-_StoreSD
00000B70 0D 00 0A 00        		.dw 0x0d,0x0a
0000A82B                    	.code
                            	LM55:
0000A82B C5 92              		R1=[BP]	// QImode move
0000A82C 09 05 01 00        		R2=R1+1
0000A82E C5 D4              		[BP]=R2	// QImode move
00000B72                    	.debug
00000B72 2E 00 73 00        		.dw '.stabn 0x44,0,168,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         38 00 2C 00
         00 00 00 00
00000B86 7C 00 00 00        		.dd LM56-_StoreSD
00000B88 0D 00 0A 00        		.dw 0x0d,0x0a
0000A82F                    	.code
                            	LM56:
                            	L48:
0000A82F 05 93              		R1=BP	// QImode move
0000A830 0D 05 01 00        		R2=BP+1
0000A832 05 97              		R3=BP	// QImode move
0000A833 0D 03 01 00        		R1=BP+1
0000A835 05 95              		R2=BP	// QImode move
0000A836 0D 07 01 00        		R3=BP+1
0000A838 03 99              		R4=R3	// QImode move
0000A839 C4 94              		R2=[R4]	// QImode move
0000A83A 0A 07 01 00        		R3=R2+1
0000A83C 01 95              		R2=R1	// QImode move
0000A83D C2 D6              		[R2]=R3	// QImode move
0000A83E 0F 9F 0D A8        		PC=L46	// jump
                            	L47:
00000B8A                    	.debug
00000B8A 2E 00 73 00        		.dw '.stabn 0x44,0,163,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         33 00 2C 00
         00 00 00 00
00000B9E 8D 00 00 00        		.dd LM57-_StoreSD
00000BA0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A840                    	.code
                            	LM57:
                            	L41:
0000A840 05 93              		R1=BP	// QImode move
0000A841 0D 05 02 00        		R2=BP+2
0000A843 05 97              		R3=BP	// QImode move
0000A844 0D 03 02 00        		R1=BP+2
0000A846 05 95              		R2=BP	// QImode move
0000A847 0D 07 02 00        		R3=BP+2
0000A849 03 99              		R4=R3	// QImode move
0000A84A C4 94              		R2=[R4]	// QImode move
0000A84B 0A 07 01 00        		R3=R2+1
0000A84D 01 95              		R2=R1	// QImode move
0000A84E C2 D6              		[R2]=R3	// QImode move
0000A84F 0F 9F D0 A7        		PC=L39	// jump
                            	L40:
00000BA2                    	.debug
00000BA2 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
00000BB6 9E 00 00 00        		.dd LM58-_StoreSD
00000BB8 0D 00 0A 00        		.dw 0x0d,0x0a
0000A851                    	.code
                            	LM58:
                            	LBE4:
00000BBA                    	.debug
00000BBA 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
00000BCE 9E 00 00 00        		.dd LM59-_StoreSD
00000BD0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A851                    	.code
                            	LM59:
                            	L38:
                            	
0000A851 47 00              		SP+=7
0000A852 88 98              		POP BP from [SP]
0000A853 90 9A              		RETF
                            		.endp	// end of StoreSD
                            	
00000BD2                    	.debug
00000BD2 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000BE4 07 00 00 00        		.dd LBB4-_StoreSD
00000BE6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A854                    	.code
00000BE8                    	.debug
00000BE8 2E 00 73 00        		.dw '.stabs "ulAddr:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6C 00
         41 00 64 00
         64 00 72 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A854                    	.CODE
00000C05                    	.debug
00000C05 2E 00 73 00        		.dw '.stabs "i:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000A854                    	.CODE
00000C1D                    	.debug
00000C1D 2E 00 73 00        		.dw '.stabs "commandID:4",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 6D 00
         61 00 6E 00
         64 00 49 00
         44 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000A854                    	.CODE
00000C3D                    	.debug
00000C3D 2E 00 73 00        		.dw '.stabs "g_Ret:4",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 5F 00
         52 00 65 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
0000A854                    	.CODE
00000C59                    	.debug
00000C59 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000C6B 9E 00 00 00        		.dd LBE4-_StoreSD
00000C6D 0D 00 0A 00        		.dw 0x0d,0x0a
0000A854                    	.code
00000C6F                    	.debug
00000C6F 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000C78 A1 00 00 00        		.dd LME5-_StoreSD
00000C7A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A854                    	.code
                            	LME5:
0000A854                    	.code
00000C7C                    	.debug
00000C7C 2E 00 73 00        		.dw '.stabs "LoadSD:F19",36,0,0,',0,0,offset _LoadSD,seg _LoadSD,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4C 00 6F 00
         61 00 64 00
         53 00 44 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 8B 01
         00 00 0D 00
         0A 00      
0000A854                    	.CODE
                            	.public _LoadSD
                            	_LoadSD:	.proc
00000C9D                    	.debug
00000C9D 2E 00 73 00        		.dw '.stabn 0x44,0,183,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         33 00 2C 00
         00 00 00 00
00000CB1 00 00 00 00        		.dd LM60-_LoadSD
00000CB3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A854                    	.code
                            	LM60:
                            		// total=8, vars=8
                            		// frame_pointer_needed: 1
00000CB5                    	.debug
00000CB5 2E 00 73 00        		.dw '.stabn 0xa6,0,0,8',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         38 00 0D 00
         0A 00      
0000A854                    	.code
0000A854 88 DA              		PUSH BP to [SP]
0000A855 48 20              		SP-=8
0000A856 08 0B 01 00        		BP=SP+1
                            	
0000A858 0D 03 0B 00        		R1=BP+11
0000A85A 05 D2              		[BP+5]=R1	// QImode move
                            	LBB5:
00000CC8                    	.debug
00000CC8 2E 00 73 00        		.dw '.stabn 0x44,0,184,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         34 00 2C 00
         00 00 00 00
00000CDC 07 00 00 00        		.dd LM61-_LoadSD
00000CDE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A85B                    	.code
                            	LM61:
0000A85B 09 63 00 20        		R1=(-8192)	// QImode move
0000A85D C5 D2              		[BP]=R1	// QImode move
00000CE0                    	.debug
00000CE0 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
00000CF4 0A 00 00 00        		.dd LM62-_LoadSD
00000CF6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A85E                    	.code
                            	LM62:
0000A85E 05 93              		R1=BP	// QImode move
0000A85F 0D 05 02 00        		R2=BP+2
0000A861 40 92              		R1=0	// QImode move
0000A862 02 97              		R3=R2	// QImode move
0000A863 C3 D2              		[R3]=R1	// QImode move
                            	L54:
0000A864 05 93              		R1=BP	// QImode move
0000A865 0D 05 02 00        		R2=BP+2
0000A867 02 99              		R4=R2	// QImode move
0000A868 C4 92              		R1=[R4]	// QImode move
0000A869 41 42              		CMP R1,1	// QImode compare
0000A86A 04 8E 01 EE        		NSJNA L57	//QImode LEU
         00 EE      
0000A86D 0F 9F DD A8        		PC=L55	// jump
                            	L57:
00000CF8                    	.debug
00000CF8 2E 00 73 00        		.dw '.stabn 0x44,0,187,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         37 00 2C 00
         00 00 00 00
00000D0C 1B 00 00 00        		.dd LM63-_LoadSD
00000D0E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A86F                    	.code
                            	LM63:
0000A86F 05 93              		R1=BP	// QImode move
0000A870 0D 05 01 00        		R2=BP+1
0000A872 40 92              		R1=0	// QImode move
0000A873 02 97              		R3=R2	// QImode move
0000A874 C3 D2              		[R3]=R1	// QImode move
                            	L58:
0000A875 05 93              		R1=BP	// QImode move
0000A876 0D 05 01 00        		R2=BP+1
0000A878 02 99              		R4=R2	// QImode move
0000A879 C4 92              		R1=[R4]	// QImode move
0000A87A 09 43 63 00        		CMP R1,99	// QImode compare
0000A87C 04 8E 01 EE        		NSJNA L61	//QImode LEU
         00 EE      
0000A87F 0F 9F AF A8        		PC=L59	// jump
                            	L61:
00000D10                    	.debug
00000D10 2E 00 73 00        		.dw '.stabn 0x44,0,189,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         39 00 2C 00
         00 00 00 00
00000D24 2D 00 00 00        		.dd LM64-_LoadSD
00000D26 0D 00 0A 00        		.dw 0x0d,0x0a
0000A881                    	.code
                            	LM64:
0000A881 05 95              		R2=BP	// QImode move
0000A882 0D 03 03 00        		R1=BP+3
0000A884 C5 94              		R2=[BP]	// QImode move
0000A885 02 99              		R4=R2	// QImode move
0000A886 C4 96              		R3=[R4]	// QImode move
0000A887 01 95              		R2=R1	// QImode move
0000A888 C2 D6              		[R2]=R3	// QImode move
00000D28                    	.debug
00000D28 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
00000D3C 35 00 00 00        		.dd LM65-_LoadSD
00000D3E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A889                    	.code
                            	LM65:
0000A889 05 93              		R1=BP	// QImode move
0000A88A 0D 05 01 00        		R2=BP+1
0000A88C 02 93              		R1=R2	// QImode move
0000A88D C1 96              		R3=[R1]
0000A88E 40 98              		R4=0
0000A88F 09 93 78 03        		R1=_BSR_SDModel	// QImode move
0000A891 03 95              		R2=R3	// QImode move
0000A892 02 03              		R1 = R1 + R2	//addqi3
0000A893 05 95              		R2=BP	// QImode move
0000A894 0D 07 03 00        		R3=BP+3
0000A896 03 99              		R4=R3	// QImode move
0000A897 C4 94              		R2=[R4]	// QImode move
0000A898 01 97              		R3=R1	// QImode move
0000A899 C3 D4              		[R3]=R2	// QImode move
00000D40                    	.debug
00000D40 2E 00 73 00        		.dw '.stabn 0x44,0,191,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         31 00 2C 00
         00 00 00 00
00000D54 46 00 00 00        		.dd LM66-_LoadSD
00000D56 0D 00 0A 00        		.dw 0x0d,0x0a
0000A89A                    	.code
                            	LM66:
0000A89A C5 92              		R1=[BP]	// QImode move
0000A89B 09 05 01 00        		R2=R1+1
0000A89D C5 D4              		[BP]=R2	// QImode move
00000D58                    	.debug
00000D58 2E 00 73 00        		.dw '.stabn 0x44,0,187,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         37 00 2C 00
         00 00 00 00
00000D6C 4A 00 00 00        		.dd LM67-_LoadSD
00000D6E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A89E                    	.code
                            	LM67:
                            	L60:
0000A89E 05 93              		R1=BP	// QImode move
0000A89F 0D 05 01 00        		R2=BP+1
0000A8A1 05 97              		R3=BP	// QImode move
0000A8A2 0D 03 01 00        		R1=BP+1
0000A8A4 05 95              		R2=BP	// QImode move
0000A8A5 0D 07 01 00        		R3=BP+1
0000A8A7 03 99              		R4=R3	// QImode move
0000A8A8 C4 94              		R2=[R4]	// QImode move
0000A8A9 0A 07 01 00        		R3=R2+1
0000A8AB 01 95              		R2=R1	// QImode move
0000A8AC C2 D6              		[R2]=R3	// QImode move
0000A8AD 0F 9F 75 A8        		PC=L58	// jump
                            	L59:
00000D70                    	.debug
00000D70 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
00000D84 5B 00 00 00        		.dd LM68-_LoadSD
00000D86 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8AF                    	.code
                            	LM68:
0000A8AF 05 93              		R1=BP	// QImode move
0000A8B0 0D 07 04 00        		R3=BP+4
0000A8B2 06 D6              		[BP+6]=R3	// QImode move
0000A8B3 40 F0 37 85        		CALL _BSR_ImportSDWord	// call with return value
0000A8B5 06 98              		R4=[BP+6]	// QImode move
0000A8B6 C4 D2              		[R4]=R1	// QImode move
00000D88                    	.debug
00000D88 2E 00 73 00        		.dw '.stabn 0x44,0,194,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         34 00 2C 00
         00 00 00 00
00000D9C 63 00 00 00        		.dd LM69-_LoadSD
00000D9E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8B7                    	.code
                            	LM69:
                            	L62:
0000A8B7 05 93              		R1=BP	// QImode move
0000A8B8 0D 05 04 00        		R2=BP+4
0000A8BA 02 97              		R3=R2	// QImode move
0000A8BB C3 92              		R1=[R3]	// QImode move
0000A8BC 40 42              		CMP R1,0	// QImode test
0000A8BD 04 4E 01 EE        		NSJNZ L64	//QImode NE
         00 EE      
0000A8C0 0F 9F CC A8        		PC=L56	// jump
                            	L64:
00000DA0                    	.debug
00000DA0 2E 00 73 00        		.dw '.stabn 0x44,0,195,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         35 00 2C 00
         00 00 00 00
00000DB4 6E 00 00 00        		.dd LM70-_LoadSD
00000DB6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8C2                    	.code
                            	LM70:
0000A8C2 05 93              		R1=BP	// QImode move
0000A8C3 0D 09 04 00        		R4=BP+4
0000A8C5 07 D8              		[BP+7]=R4	// QImode move
0000A8C6 40 F0 37 85        		CALL _BSR_ImportSDWord	// call with return value
0000A8C8 07 94              		R2=[BP+7]	// QImode move
0000A8C9 C2 D2              		[R2]=R1	// QImode move
0000A8CA 0F 9F B7 A8        		PC=L62	// jump
                            	L63:
00000DB8                    	.debug
00000DB8 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
00000DCC 78 00 00 00        		.dd LM71-_LoadSD
00000DCE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8CC                    	.code
                            	LM71:
                            	L56:
0000A8CC 05 93              		R1=BP	// QImode move
0000A8CD 0D 05 02 00        		R2=BP+2
0000A8CF 05 97              		R3=BP	// QImode move
0000A8D0 0D 03 02 00        		R1=BP+2
0000A8D2 05 95              		R2=BP	// QImode move
0000A8D3 0D 07 02 00        		R3=BP+2
0000A8D5 03 99              		R4=R3	// QImode move
0000A8D6 C4 94              		R2=[R4]	// QImode move
0000A8D7 0A 07 01 00        		R3=R2+1
0000A8D9 01 95              		R2=R1	// QImode move
0000A8DA C2 D6              		[R2]=R3	// QImode move
0000A8DB 0F 9F 64 A8        		PC=L54	// jump
                            	L55:
00000DD0                    	.debug
00000DD0 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
00000DE4 89 00 00 00        		.dd LM72-_LoadSD
00000DE6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8DD                    	.code
                            	LM72:
                            	LBE5:
00000DE8                    	.debug
00000DE8 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
00000DFC 89 00 00 00        		.dd LM73-_LoadSD
00000DFE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8DD                    	.code
                            	LM73:
                            	L53:
                            	
0000A8DD 48 00              		SP+=8
0000A8DE 88 98              		POP BP from [SP]
0000A8DF 90 9A              		RETF
                            		.endp	// end of LoadSD
                            	
00000E00                    	.debug
00000E00 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E12 07 00 00 00        		.dd LBB5-_LoadSD
00000E14 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8E0                    	.code
00000E16                    	.debug
00000E16 2E 00 73 00        		.dw '.stabs "p:20=*4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         70 00 3A 00
         32 00 30 00
         3D 00 2A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A8E0                    	.CODE
00000E32                    	.debug
00000E32 2E 00 73 00        		.dw '.stabs "k:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6B 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000A8E0                    	.CODE
00000E4A                    	.debug
00000E4A 2E 00 73 00        		.dw '.stabs "jk:4",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 6B 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 0D 00
         0A 00      
0000A8E0                    	.CODE
00000E63                    	.debug
00000E63 2E 00 73 00        		.dw '.stabs "Ret:4",128,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 33 00
         0D 00 0A 00
0000A8E0                    	.CODE
00000E7D                    	.debug
00000E7D 2E 00 73 00        		.dw '.stabs "g_Ret:4",128,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 5F 00
         52 00 65 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000A8E0                    	.CODE
00000E99                    	.debug
00000E99 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000EAB 89 00 00 00        		.dd LBE5-_LoadSD
00000EAD 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8E0                    	.code
00000EAF                    	.debug
00000EAF 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000EB8 8C 00 00 00        		.dd LME6-_LoadSD
00000EBA 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8E0                    	.code
                            	LME6:
0000A8E0                    	.code
00000EBC                    	.debug
00000EBC 2E 00 73 00        		.dw '.stabs "GoAhead:F19",36,0,0,',0,0,offset _GoAhead,seg _GoAhead,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         47 00 6F 00
         41 00 68 00
         65 00 61 00
         64 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         17 02 00 00
         0D 00 0A 00
0000A8E0                    	.CODE
                            	.public _GoAhead
                            	_GoAhead:	.proc
00000EDE                    	.debug
00000EDE 2E 00 73 00        		.dw '.stabn 0x44,0,206,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         36 00 2C 00
         00 00 00 00
00000EF2 00 00 00 00        		.dd LM74-_GoAhead
00000EF4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8E0                    	.code
                            	LM74:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
00000EF6                    	.debug
00000EF6 2E 00 73 00        		.dw '.stabn 0xa6,0,0,2',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 0D 00
         0A 00      
0000A8E0                    	.code
0000A8E0 88 DA              		PUSH BP to [SP]
0000A8E1 42 20              		SP-=2
0000A8E2 08 0B 01 00        		BP=SP+1
                            	
0000A8E4 0D 03 05 00        		R1=BP+5
0000A8E6 01 D2              		[BP+1]=R1	// QImode move
                            	LBB6:
00000F09                    	.debug
00000F09 2E 00 73 00        		.dw '.stabn 0x44,0,208,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         38 00 2C 00
         00 00 00 00
00000F1D 07 00 00 00        		.dd LM75-_GoAhead
00000F1F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8E7                    	.code
                            	LM75:
0000A8E7 43 92              		R1=3	// QImode move
0000A8E8 C8 D2              		[SP--]=R1	// QImode move
0000A8E9 41 92              		R1=1	// QImode move
0000A8EA C8 D2              		[SP--]=R1	// QImode move
0000A8EB 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A8ED 42 00              		SP = SP + 2	//SP
00000F21                    	.debug
00000F21 2E 00 73 00        		.dw '.stabn 0x44,0,209,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         39 00 2C 00
         00 00 00 00
00000F35 0E 00 00 00        		.dd LM76-_GoAhead
00000F37 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8EE                    	.code
                            	LM76:
0000A8EE 09 93 00 28        		R1=10240	// QImode move
0000A8F0 19 D3 05 70        		[28677]=R1	// QImode move
00000F39                    	.debug
00000F39 2E 00 73 00        		.dw '.stabn 0x44,0,210,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         30 00 2C 00
         00 00 00 00
00000F4D 12 00 00 00        		.dd LM77-_GoAhead
00000F4F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8F2                    	.code
                            	LM77:
0000A8F2 40 92              		R1=0	// QImode move
0000A8F3 C5 D2              		[BP]=R1	// QImode move
                            	L69:
0000A8F4 C5 92              		R1=[BP]	// QImode move
0000A8F5 67 42              		CMP R1,39	// QImode compare
0000A8F6 04 8E 01 EE        		NSJNA L72	//QImode LEU
         00 EE      
0000A8F9 0F 9F 03 A9        		PC=L70	// jump
                            	L72:
00000F51                    	.debug
00000F51 2E 00 73 00        		.dw '.stabn 0x44,0,211,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         31 00 2C 00
         00 00 00 00
00000F65 1B 00 00 00        		.dd LM78-_GoAhead
00000F67 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8FB                    	.code
                            	LM78:
0000A8FB 40 F0 C9 A6        		CALL _Delay	// call without return value
00000F69                    	.debug
00000F69 2E 00 73 00        		.dw '.stabn 0x44,0,210,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         30 00 2C 00
         00 00 00 00
00000F7D 1D 00 00 00        		.dd LM79-_GoAhead
00000F7F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A8FD                    	.code
                            	LM79:
                            	L71:
0000A8FD C5 92              		R1=[BP]	// QImode move
0000A8FE 09 05 01 00        		R2=R1+1
0000A900 C5 D4              		[BP]=R2	// QImode move
0000A901 0F 9F F4 A8        		PC=L69	// jump
                            	L70:
00000F81                    	.debug
00000F81 2E 00 73 00        		.dw '.stabn 0x44,0,212,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         32 00 2C 00
         00 00 00 00
00000F95 23 00 00 00        		.dd LM80-_GoAhead
00000F97 0D 00 0A 00        		.dw 0x0d,0x0a
0000A903                    	.code
                            	LM80:
0000A903 40 92              		R1=0	// QImode move
0000A904 19 D3 05 70        		[28677]=R1	// QImode move
00000F99                    	.debug
00000F99 2E 00 73 00        		.dw '.stabn 0x44,0,213,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         33 00 2C 00
         00 00 00 00
00000FAD 26 00 00 00        		.dd LM81-_GoAhead
00000FAF 0D 00 0A 00        		.dw 0x0d,0x0a
0000A906                    	.code
                            	LM81:
                            	LBE6:
00000FB1                    	.debug
00000FB1 2E 00 73 00        		.dw '.stabn 0x44,0,213,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         33 00 2C 00
         00 00 00 00
00000FC5 26 00 00 00        		.dd LM82-_GoAhead
00000FC7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A906                    	.code
                            	LM82:
                            	L68:
                            	
0000A906 42 00              		SP+=2
0000A907 88 98              		POP BP from [SP]
0000A908 90 9A              		RETF
                            		.endp	// end of GoAhead
                            	
00000FC9                    	.debug
00000FC9 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000FDB 07 00 00 00        		.dd LBB6-_GoAhead
00000FDD 0D 00 0A 00        		.dw 0x0d,0x0a
0000A909                    	.code
00000FDF                    	.debug
00000FDF 2E 00 73 00        		.dw '.stabs "j:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A909                    	.CODE
00000FF7                    	.debug
00000FF7 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001009 26 00 00 00        		.dd LBE6-_GoAhead
0000100B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A909                    	.code
0000100D                    	.debug
0000100D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001016 29 00 00 00        		.dd LME7-_GoAhead
00001018 0D 00 0A 00        		.dw 0x0d,0x0a
0000A909                    	.code
                            	LME7:
0000A909                    	.code
0000101A                    	.debug
0000101A 2E 00 73 00        		.dw '.stabs "BackUp:F19",36,0,0,',0,0,offset _BackUp,seg _BackUp,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         42 00 61 00
         63 00 6B 00
         55 00 70 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 40 02
         00 00 0D 00
         0A 00      
0000A909                    	.CODE
                            	.public _BackUp
                            	_BackUp:	.proc
0000103B                    	.debug
0000103B 2E 00 73 00        		.dw '.stabn 0x44,0,221,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         31 00 2C 00
         00 00 00 00
0000104F 00 00 00 00        		.dd LM83-_BackUp
00001051 0D 00 0A 00        		.dw 0x0d,0x0a
0000A909                    	.code
                            	LM83:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
00001053                    	.debug
00001053 2E 00 73 00        		.dw '.stabn 0xa6,0,0,2',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 0D 00
         0A 00      
0000A909                    	.code
0000A909 88 DA              		PUSH BP to [SP]
0000A90A 42 20              		SP-=2
0000A90B 08 0B 01 00        		BP=SP+1
                            	
0000A90D 0D 03 05 00        		R1=BP+5
0000A90F 01 D2              		[BP+1]=R1	// QImode move
                            	LBB7:
00001066                    	.debug
00001066 2E 00 73 00        		.dw '.stabn 0x44,0,223,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         33 00 2C 00
         00 00 00 00
0000107A 07 00 00 00        		.dd LM84-_BackUp
0000107C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A910                    	.code
                            	LM84:
0000A910 43 92              		R1=3	// QImode move
0000A911 C8 D2              		[SP--]=R1	// QImode move
0000A912 42 92              		R1=2	// QImode move
0000A913 C8 D2              		[SP--]=R1	// QImode move
0000A914 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A916 42 00              		SP = SP + 2	//SP
0000107E                    	.debug
0000107E 2E 00 73 00        		.dw '.stabn 0x44,0,224,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         34 00 2C 00
         00 00 00 00
00001092 0E 00 00 00        		.dd LM85-_BackUp
00001094 0D 00 0A 00        		.dw 0x0d,0x0a
0000A917                    	.code
                            	LM85:
0000A917 09 93 00 14        		R1=5120	// QImode move
0000A919 19 D3 05 70        		[28677]=R1	// QImode move
00001096                    	.debug
00001096 2E 00 73 00        		.dw '.stabn 0x44,0,225,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         35 00 2C 00
         00 00 00 00
000010AA 12 00 00 00        		.dd LM86-_BackUp
000010AC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A91B                    	.code
                            	LM86:
0000A91B 40 92              		R1=0	// QImode move
0000A91C C5 D2              		[BP]=R1	// QImode move
                            	L75:
0000A91D C5 92              		R1=[BP]	// QImode move
0000A91E 67 42              		CMP R1,39	// QImode compare
0000A91F 04 8E 01 EE        		NSJNA L78	//QImode LEU
         00 EE      
0000A922 0F 9F 2C A9        		PC=L76	// jump
                            	L78:
000010AE                    	.debug
000010AE 2E 00 73 00        		.dw '.stabn 0x44,0,226,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         36 00 2C 00
         00 00 00 00
000010C2 1B 00 00 00        		.dd LM87-_BackUp
000010C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A924                    	.code
                            	LM87:
0000A924 40 F0 C9 A6        		CALL _Delay	// call without return value
000010C6                    	.debug
000010C6 2E 00 73 00        		.dw '.stabn 0x44,0,225,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         35 00 2C 00
         00 00 00 00
000010DA 1D 00 00 00        		.dd LM88-_BackUp
000010DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000A926                    	.code
                            	LM88:
                            	L77:
0000A926 C5 92              		R1=[BP]	// QImode move
0000A927 09 05 01 00        		R2=R1+1
0000A929 C5 D4              		[BP]=R2	// QImode move
0000A92A 0F 9F 1D A9        		PC=L75	// jump
                            	L76:
000010DE                    	.debug
000010DE 2E 00 73 00        		.dw '.stabn 0x44,0,227,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         37 00 2C 00
         00 00 00 00
000010F2 23 00 00 00        		.dd LM89-_BackUp
000010F4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A92C                    	.code
                            	LM89:
0000A92C 40 92              		R1=0	// QImode move
0000A92D 19 D3 05 70        		[28677]=R1	// QImode move
000010F6                    	.debug
000010F6 2E 00 73 00        		.dw '.stabn 0x44,0,228,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         38 00 2C 00
         00 00 00 00
0000110A 26 00 00 00        		.dd LM90-_BackUp
0000110C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A92F                    	.code
                            	LM90:
                            	LBE7:
0000110E                    	.debug
0000110E 2E 00 73 00        		.dw '.stabn 0x44,0,228,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         38 00 2C 00
         00 00 00 00
00001122 26 00 00 00        		.dd LM91-_BackUp
00001124 0D 00 0A 00        		.dw 0x0d,0x0a
0000A92F                    	.code
                            	LM91:
                            	L74:
                            	
0000A92F 42 00              		SP+=2
0000A930 88 98              		POP BP from [SP]
0000A931 90 9A              		RETF
                            		.endp	// end of BackUp
                            	
00001126                    	.debug
00001126 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001138 07 00 00 00        		.dd LBB7-_BackUp
0000113A 0D 00 0A 00        		.dw 0x0d,0x0a
0000A932                    	.code
0000113C                    	.debug
0000113C 2E 00 73 00        		.dw '.stabs "j:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A932                    	.CODE
00001154                    	.debug
00001154 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001166 26 00 00 00        		.dd LBE7-_BackUp
00001168 0D 00 0A 00        		.dw 0x0d,0x0a
0000A932                    	.code
0000116A                    	.debug
0000116A 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001173 29 00 00 00        		.dd LME8-_BackUp
00001175 0D 00 0A 00        		.dw 0x0d,0x0a
0000A932                    	.code
                            	LME8:
0000A932                    	.code
00001177                    	.debug
00001177 2E 00 73 00        		.dw '.stabs "TurnLeft:F19",36,0,0,',0,0,offset _TurnLeft,seg _TurnLeft,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 75 00
         72 00 6E 00
         4C 00 65 00
         66 00 74 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 69 02
         00 00 0D 00
         0A 00      
0000A932                    	.CODE
                            	.public _TurnLeft
                            	_TurnLeft:	.proc
0000119A                    	.debug
0000119A 2E 00 73 00        		.dw '.stabn 0x44,0,237,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         37 00 2C 00
         00 00 00 00
000011AE 00 00 00 00        		.dd LM92-_TurnLeft
000011B0 0D 00 0A 00        		.dw 0x0d,0x0a
0000A932                    	.code
                            	LM92:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
000011B2                    	.debug
000011B2 2E 00 73 00        		.dw '.stabn 0xa6,0,0,2',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 0D 00
         0A 00      
0000A932                    	.code
0000A932 88 DA              		PUSH BP to [SP]
0000A933 42 20              		SP-=2
0000A934 08 0B 01 00        		BP=SP+1
                            	
0000A936 0D 03 05 00        		R1=BP+5
0000A938 01 D2              		[BP+1]=R1	// QImode move
                            	LBB8:
000011C5                    	.debug
000011C5 2E 00 73 00        		.dw '.stabn 0x44,0,239,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         39 00 2C 00
         00 00 00 00
000011D9 07 00 00 00        		.dd LM93-_TurnLeft
000011DB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A939                    	.code
                            	LM93:
0000A939 43 92              		R1=3	// QImode move
0000A93A C8 D2              		[SP--]=R1	// QImode move
0000A93B 4A 92              		R1=10	// QImode move
0000A93C C8 D2              		[SP--]=R1	// QImode move
0000A93D 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A93F 42 00              		SP = SP + 2	//SP
000011DD                    	.debug
000011DD 2E 00 73 00        		.dw '.stabn 0x44,0,240,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         30 00 2C 00
         00 00 00 00
000011F1 0E 00 00 00        		.dd LM94-_TurnLeft
000011F3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A940                    	.code
                            	LM94:
0000A940 40 92              		R1=0	// QImode move
0000A941 C5 D2              		[BP]=R1	// QImode move
                            	L81:
0000A942 C5 92              		R1=[BP]	// QImode move
0000A943 5D 42              		CMP R1,29	// QImode compare
0000A944 04 8E 01 EE        		NSJNA L84	//QImode LEU
         00 EE      
0000A947 0F 9F 5D A9        		PC=L82	// jump
                            	L84:
000011F5                    	.debug
000011F5 2E 00 73 00        		.dw '.stabn 0x44,0,242,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         32 00 2C 00
         00 00 00 00
00001209 17 00 00 00        		.dd LM95-_TurnLeft
0000120B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A949                    	.code
                            	LM95:
0000A949 09 93 00 24        		R1=9216	// QImode move
0000A94B 19 D3 05 70        		[28677]=R1	// QImode move
0000120D                    	.debug
0000120D 2E 00 73 00        		.dw '.stabn 0x44,0,243,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         33 00 2C 00
         00 00 00 00
00001221 1B 00 00 00        		.dd LM96-_TurnLeft
00001223 0D 00 0A 00        		.dw 0x0d,0x0a
0000A94D                    	.code
                            	LM96:
0000A94D 40 F0 C9 A6        		CALL _Delay	// call without return value
00001225                    	.debug
00001225 2E 00 73 00        		.dw '.stabn 0x44,0,244,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         34 00 2C 00
         00 00 00 00
00001239 1D 00 00 00        		.dd LM97-_TurnLeft
0000123B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A94F                    	.code
                            	LM97:
0000A94F 40 F0 C9 A6        		CALL _Delay	// call without return value
0000123D                    	.debug
0000123D 2E 00 73 00        		.dw '.stabn 0x44,0,245,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         35 00 2C 00
         00 00 00 00
00001251 1F 00 00 00        		.dd LM98-_TurnLeft
00001253 0D 00 0A 00        		.dw 0x0d,0x0a
0000A951                    	.code
                            	LM98:
0000A951 09 93 00 28        		R1=10240	// QImode move
0000A953 19 D3 05 70        		[28677]=R1	// QImode move
00001255                    	.debug
00001255 2E 00 73 00        		.dw '.stabn 0x44,0,246,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         36 00 2C 00
         00 00 00 00
00001269 23 00 00 00        		.dd LM99-_TurnLeft
0000126B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A955                    	.code
                            	LM99:
0000A955 40 F0 C9 A6        		CALL _Delay	// call without return value
0000126D                    	.debug
0000126D 2E 00 73 00        		.dw '.stabn 0x44,0,240,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         30 00 2C 00
         00 00 00 00
00001281 25 00 00 00        		.dd LM100-_TurnLeft
00001283 0D 00 0A 00        		.dw 0x0d,0x0a
0000A957                    	.code
                            	LM100:
                            	L83:
0000A957 C5 92              		R1=[BP]	// QImode move
0000A958 09 05 01 00        		R2=R1+1
0000A95A C5 D4              		[BP]=R2	// QImode move
0000A95B 0F 9F 42 A9        		PC=L81	// jump
                            	L82:
00001285                    	.debug
00001285 2E 00 73 00        		.dw '.stabn 0x44,0,248,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         38 00 2C 00
         00 00 00 00
00001299 2B 00 00 00        		.dd LM101-_TurnLeft
0000129B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A95D                    	.code
                            	LM101:
0000A95D 40 92              		R1=0	// QImode move
0000A95E 19 D3 05 70        		[28677]=R1	// QImode move
0000129D                    	.debug
0000129D 2E 00 73 00        		.dw '.stabn 0x44,0,249,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         39 00 2C 00
         00 00 00 00
000012B1 2E 00 00 00        		.dd LM102-_TurnLeft
000012B3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A960                    	.code
                            	LM102:
                            	LBE8:
000012B5                    	.debug
000012B5 2E 00 73 00        		.dw '.stabn 0x44,0,249,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         39 00 2C 00
         00 00 00 00
000012C9 2E 00 00 00        		.dd LM103-_TurnLeft
000012CB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A960                    	.code
                            	LM103:
                            	L80:
                            	
0000A960 42 00              		SP+=2
0000A961 88 98              		POP BP from [SP]
0000A962 90 9A              		RETF
                            		.endp	// end of TurnLeft
                            	
000012CD                    	.debug
000012CD 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000012DF 07 00 00 00        		.dd LBB8-_TurnLeft
000012E1 0D 00 0A 00        		.dw 0x0d,0x0a
0000A963                    	.code
000012E3                    	.debug
000012E3 2E 00 73 00        		.dw '.stabs "j:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A963                    	.CODE
000012FB                    	.debug
000012FB 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000130D 2E 00 00 00        		.dd LBE8-_TurnLeft
0000130F 0D 00 0A 00        		.dw 0x0d,0x0a
0000A963                    	.code
00001311                    	.debug
00001311 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000131A 31 00 00 00        		.dd LME9-_TurnLeft
0000131C 0D 00 0A 00        		.dw 0x0d,0x0a
0000A963                    	.code
                            	LME9:
0000A963                    	.code
0000131E                    	.debug
0000131E 2E 00 73 00        		.dw '.stabs "TurnRight:F19",36,0,0,',0,0,offset _TurnRight,seg _TurnRight,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 75 00
         72 00 6E 00
         52 00 69 00
         67 00 68 00
         74 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         9A 02 00 00
         0D 00 0A 00
0000A963                    	.CODE
                            	.public _TurnRight
                            	_TurnRight:	.proc
00001342                    	.debug
00001342 2E 00 73 00        		.dw '.stabn 0x44,0,257,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         37 00 2C 00
         00 00 00 00
00001356 00 00 00 00        		.dd LM104-_TurnRight
00001358 0D 00 0A 00        		.dw 0x0d,0x0a
0000A963                    	.code
                            	LM104:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
0000135A                    	.debug
0000135A 2E 00 73 00        		.dw '.stabn 0xa6,0,0,2',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         32 00 0D 00
         0A 00      
0000A963                    	.code
0000A963 88 DA              		PUSH BP to [SP]
0000A964 42 20              		SP-=2
0000A965 08 0B 01 00        		BP=SP+1
                            	
0000A967 0D 03 05 00        		R1=BP+5
0000A969 01 D2              		[BP+1]=R1	// QImode move
                            	LBB9:
0000136D                    	.debug
0000136D 2E 00 73 00        		.dw '.stabn 0x44,0,259,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         39 00 2C 00
         00 00 00 00
00001381 07 00 00 00        		.dd LM105-_TurnRight
00001383 0D 00 0A 00        		.dw 0x0d,0x0a
0000A96A                    	.code
                            	LM105:
0000A96A 43 92              		R1=3	// QImode move
0000A96B C8 D2              		[SP--]=R1	// QImode move
0000A96C 4A 92              		R1=10	// QImode move
0000A96D C8 D2              		[SP--]=R1	// QImode move
0000A96E 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A970 42 00              		SP = SP + 2	//SP
00001385                    	.debug
00001385 2E 00 73 00        		.dw '.stabn 0x44,0,260,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         30 00 2C 00
         00 00 00 00
00001399 0E 00 00 00        		.dd LM106-_TurnRight
0000139B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A971                    	.code
                            	LM106:
0000A971 40 92              		R1=0	// QImode move
0000A972 C5 D2              		[BP]=R1	// QImode move
                            	L87:
0000A973 C5 92              		R1=[BP]	// QImode move
0000A974 5D 42              		CMP R1,29	// QImode compare
0000A975 04 8E 01 EE        		NSJNA L90	//QImode LEU
         00 EE      
0000A978 0F 9F 8E A9        		PC=L88	// jump
                            	L90:
0000139D                    	.debug
0000139D 2E 00 73 00        		.dw '.stabn 0x44,0,262,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         32 00 2C 00
         00 00 00 00
000013B1 17 00 00 00        		.dd LM107-_TurnRight
000013B3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A97A                    	.code
                            	LM107:
0000A97A 09 93 00 18        		R1=6144	// QImode move
0000A97C 19 D3 05 70        		[28677]=R1	// QImode move
000013B5                    	.debug
000013B5 2E 00 73 00        		.dw '.stabn 0x44,0,263,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         33 00 2C 00
         00 00 00 00
000013C9 1B 00 00 00        		.dd LM108-_TurnRight
000013CB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A97E                    	.code
                            	LM108:
0000A97E 40 F0 C9 A6        		CALL _Delay	// call without return value
000013CD                    	.debug
000013CD 2E 00 73 00        		.dw '.stabn 0x44,0,264,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         34 00 2C 00
         00 00 00 00
000013E1 1D 00 00 00        		.dd LM109-_TurnRight
000013E3 0D 00 0A 00        		.dw 0x0d,0x0a
0000A980                    	.code
                            	LM109:
0000A980 40 F0 C9 A6        		CALL _Delay	// call without return value
000013E5                    	.debug
000013E5 2E 00 73 00        		.dw '.stabn 0x44,0,265,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         35 00 2C 00
         00 00 00 00
000013F9 1F 00 00 00        		.dd LM110-_TurnRight
000013FB 0D 00 0A 00        		.dw 0x0d,0x0a
0000A982                    	.code
                            	LM110:
0000A982 09 93 00 28        		R1=10240	// QImode move
0000A984 19 D3 05 70        		[28677]=R1	// QImode move
000013FD                    	.debug
000013FD 2E 00 73 00        		.dw '.stabn 0x44,0,266,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         36 00 2C 00
         00 00 00 00
00001411 23 00 00 00        		.dd LM111-_TurnRight
00001413 0D 00 0A 00        		.dw 0x0d,0x0a
0000A986                    	.code
                            	LM111:
0000A986 40 F0 C9 A6        		CALL _Delay	// call without return value
00001415                    	.debug
00001415 2E 00 73 00        		.dw '.stabn 0x44,0,260,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         30 00 2C 00
         00 00 00 00
00001429 25 00 00 00        		.dd LM112-_TurnRight
0000142B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A988                    	.code
                            	LM112:
                            	L89:
0000A988 C5 92              		R1=[BP]	// QImode move
0000A989 09 05 01 00        		R2=R1+1
0000A98B C5 D4              		[BP]=R2	// QImode move
0000A98C 0F 9F 73 A9        		PC=L87	// jump
                            	L88:
0000142D                    	.debug
0000142D 2E 00 73 00        		.dw '.stabn 0x44,0,268,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         38 00 2C 00
         00 00 00 00
00001441 2B 00 00 00        		.dd LM113-_TurnRight
00001443 0D 00 0A 00        		.dw 0x0d,0x0a
0000A98E                    	.code
                            	LM113:
0000A98E 40 92              		R1=0	// QImode move
0000A98F 19 D3 05 70        		[28677]=R1	// QImode move
00001445                    	.debug
00001445 2E 00 73 00        		.dw '.stabn 0x44,0,269,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         39 00 2C 00
         00 00 00 00
00001459 2E 00 00 00        		.dd LM114-_TurnRight
0000145B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A991                    	.code
                            	LM114:
                            	LBE9:
0000145D                    	.debug
0000145D 2E 00 73 00        		.dw '.stabn 0x44,0,269,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         39 00 2C 00
         00 00 00 00
00001471 2E 00 00 00        		.dd LM115-_TurnRight
00001473 0D 00 0A 00        		.dw 0x0d,0x0a
0000A991                    	.code
                            	LM115:
                            	L86:
                            	
0000A991 42 00              		SP+=2
0000A992 88 98              		POP BP from [SP]
0000A993 90 9A              		RETF
                            		.endp	// end of TurnRight
                            	
00001475                    	.debug
00001475 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001487 07 00 00 00        		.dd LBB9-_TurnRight
00001489 0D 00 0A 00        		.dw 0x0d,0x0a
0000A994                    	.code
0000148B                    	.debug
0000148B 2E 00 73 00        		.dw '.stabs "j:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000A994                    	.CODE
000014A3                    	.debug
000014A3 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000014B5 2E 00 00 00        		.dd LBE9-_TurnRight
000014B7 0D 00 0A 00        		.dw 0x0d,0x0a
0000A994                    	.code
000014B9                    	.debug
000014B9 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000014C2 31 00 00 00        		.dd LME10-_TurnRight
000014C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000A994                    	.code
                            	LME10:
0000A994                    	.code
000014C6                    	.debug
000014C6 2E 00 73 00        		.dw '.stabs "led_on:F19",36,0,0,',0,0,offset _led_on,seg _led_on,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 65 00
         64 00 5F 00
         6F 00 6E 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 CB 02
         00 00 0D 00
         0A 00      
0000A994                    	.CODE
                            	.public _led_on
                            	_led_on:	.proc
000014E7                    	.debug
000014E7 2E 00 73 00        		.dw '.stabn 0x44,0,277,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         37 00 2C 00
         00 00 00 00
000014FB 00 00 00 00        		.dd LM116-_led_on
000014FD 0D 00 0A 00        		.dw 0x0d,0x0a
0000A994                    	.code
                            	LM116:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
000014FF                    	.debug
000014FF 2E 00 73 00        		.dw '.stabn 0xa6,0,0,0',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000A994                    	.code
0000A994 88 DA              		PUSH BP to [SP]
0000A995 08 0B 01 00        		BP=SP+1
                            	
0000A997 0D 03 03 00        		R1=BP+3
00001512                    	.debug
00001512 2E 00 73 00        		.dw '.stabn 0x44,0,278,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         38 00 2C 00
         00 00 00 00
00001526 05 00 00 00        		.dd LM117-_led_on
00001528 0D 00 0A 00        		.dw 0x0d,0x0a
0000A999                    	.code
                            	LM117:
0000A999 40 94              		R2=0	// QImode move
0000A99A 1A D5 05 70        		[28677]=R2	// QImode move
0000152A                    	.debug
0000152A 2E 00 73 00        		.dw '.stabn 0x44,0,279,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         39 00 2C 00
         00 00 00 00
0000153E 08 00 00 00        		.dd LM118-_led_on
00001540 0D 00 0A 00        		.dw 0x0d,0x0a
0000A99C                    	.code
                            	LM118:
00001542                    	.debug
00001542 2E 00 73 00        		.dw '.stabn 0x44,0,279,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         39 00 2C 00
         00 00 00 00
00001556 08 00 00 00        		.dd LM119-_led_on
00001558 0D 00 0A 00        		.dw 0x0d,0x0a
0000A99C                    	.code
                            	LM119:
                            	L92:
                            	
0000A99C 88 98              		POP BP from [SP]
0000A99D 90 9A              		RETF
                            		.endp	// end of led_on
                            	
0000155A                    	.debug
0000155A 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001563 0A 00 00 00        		.dd LME11-_led_on
00001565 0D 00 0A 00        		.dw 0x0d,0x0a
0000A99E                    	.code
                            	LME11:
0000A99E                    	.code
00001567                    	.debug
00001567 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         D5 02 00 00
         0D 00 0A 00
0000A99E                    	.CODE
                            	.public _main
                            	_main:	.proc
00001585                    	.debug
00001585 2E 00 73 00        		.dw '.stabn 0x44,0,281,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         31 00 2C 00
         00 00 00 00
00001599 00 00 00 00        		.dd LM120-_main
0000159B 0D 00 0A 00        		.dw 0x0d,0x0a
0000A99E                    	.code
                            	LM120:
                            		// total=4, vars=4
                            		// frame_pointer_needed: 1
0000159D                    	.debug
0000159D 2E 00 73 00        		.dw '.stabn 0xa6,0,0,4',0x0d, 0x0a
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 61 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
0000A99E                    	.code
0000A99E 88 DA              		PUSH BP to [SP]
0000A99F 44 20              		SP-=4
0000A9A0 08 0B 01 00        		BP=SP+1
                            	
0000A9A2 0D 03 07 00        		R1=BP+7
0000A9A4 03 D2              		[BP+3]=R1	// QImode move
                            	LBB10:
000015B0                    	.debug
000015B0 2E 00 73 00        		.dw '.stabn 0x44,0,282,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         32 00 2C 00
         00 00 00 00
000015C4 07 00 00 00        		.dd LM121-_main
000015C6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9A5                    	.code
                            	LM121:
0000A9A5 05 93              		R1=BP	// QImode move
0000A9A6 0D 05 01 00        		R2=BP+1
0000A9A8 40 92              		R1=0	// QImode move
0000A9A9 02 97              		R3=R2	// QImode move
0000A9AA C3 D2              		[R3]=R1	// QImode move
000015C8                    	.debug
000015C8 2E 00 73 00        		.dw '.stabn 0x44,0,285,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         35 00 2C 00
         00 00 00 00
000015DC 0D 00 00 00        		.dd LM122-_main
000015DE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9AB                    	.code
                            	LM122:
0000A9AB 09 63 00 01        		R1=(-256)	// QImode move
0000A9AD 19 D3 02 70        		[28674]=R1	// QImode move
000015E0                    	.debug
000015E0 2E 00 73 00        		.dw '.stabn 0x44,0,286,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         36 00 2C 00
         00 00 00 00
000015F4 11 00 00 00        		.dd LM123-_main
000015F6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9AF                    	.code
                            	LM123:
0000A9AF 09 63 00 01        		R1=(-256)	// QImode move
0000A9B1 19 D3 03 70        		[28675]=R1	// QImode move
000015F8                    	.debug
000015F8 2E 00 73 00        		.dw '.stabn 0x44,0,287,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         37 00 2C 00
         00 00 00 00
0000160C 15 00 00 00        		.dd LM124-_main
0000160E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9B3                    	.code
                            	LM124:
0000A9B3 40 92              		R1=0	// QImode move
0000A9B4 19 D3 00 70        		[28672]=R1	// QImode move
00001610                    	.debug
00001610 2E 00 73 00        		.dw '.stabn 0x44,0,293,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         33 00 2C 00
         00 00 00 00
00001624 18 00 00 00        		.dd LM125-_main
00001626 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9B6                    	.code
                            	LM125:
0000A9B6 41 62              		R1=(-1)	// QImode move
0000A9B7 19 D3 07 70        		[28679]=R1	// QImode move
00001628                    	.debug
00001628 2E 00 73 00        		.dw '.stabn 0x44,0,294,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         34 00 2C 00
         00 00 00 00
0000163C 1B 00 00 00        		.dd LM126-_main
0000163E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9B9                    	.code
                            	LM126:
0000A9B9 41 62              		R1=(-1)	// QImode move
0000A9BA 19 D3 08 70        		[28680]=R1	// QImode move
00001640                    	.debug
00001640 2E 00 73 00        		.dw '.stabn 0x44,0,295,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         35 00 2C 00
         00 00 00 00
00001654 1E 00 00 00        		.dd LM127-_main
00001656 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9BC                    	.code
                            	LM127:
0000A9BC 41 62              		R1=(-1)	// QImode move
0000A9BD 19 D3 05 70        		[28677]=R1	// QImode move
00001658                    	.debug
00001658 2E 00 73 00        		.dw '.stabn 0x44,0,297,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         37 00 2C 00
         00 00 00 00
0000166C 21 00 00 00        		.dd LM128-_main
0000166E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9BF                    	.code
                            	LM128:
0000A9BF 40 92              		R1=0	// QImode move
0000A9C0 C8 D2              		[SP--]=R1	// QImode move
0000A9C1 40 F0 8A 86        		CALL _BSR_DeleteSDGroup	// call with return value
0000A9C3 41 00              		SP = SP + 1	//SP
00001670                    	.debug
00001670 2E 00 73 00        		.dw '.stabn 0x44,0,298,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         38 00 2C 00
         00 00 00 00
00001684 26 00 00 00        		.dd LM129-_main
00001686 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9C4                    	.code
                            	LM129:
0000A9C4 05 93              		R1=BP	// QImode move
0000A9C5 0D 05 02 00        		R2=BP+2
0000A9C7 11 93 00 E0        		R1=[0xe000]
0000A9C9 02 97              		R3=R2	// QImode move
0000A9CA C3 D2              		[R3]=R1	// QImode move
00001688                    	.debug
00001688 2E 00 73 00        		.dw '.stabn 0x44,0,299,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         39 00 2C 00
         00 00 00 00
0000169C 2D 00 00 00        		.dd LM130-_main
0000169E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9CB                    	.code
                            	LM130:
0000A9CB 05 93              		R1=BP	// QImode move
0000A9CC 0D 05 02 00        		R2=BP+2
0000A9CE 02 97              		R3=R2	// QImode move
0000A9CF C3 92              		R1=[R3]	// QImode move
0000A9D0 09 43 FF FF        		CMP R1,(-1)	// QImode compare
0000A9D2 08 4E 01 EE        		NSJNZ L94	//QImode NE
         00 EE      
000016A0                    	.debug
000016A0 2E 00 73 00        		.dw '.stabn 0x44,0,301,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         31 00 2C 00
         00 00 00 00
000016B4 37 00 00 00        		.dd LM131-_main
000016B6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9D5                    	.code
                            	LM131:
0000A9D5 40 F0 89 A7        		CALL _TrainSD	// call without return value
000016B8                    	.debug
000016B8 2E 00 73 00        		.dw '.stabn 0x44,0,302,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         32 00 2C 00
         00 00 00 00
000016CC 39 00 00 00        		.dd LM132-_main
000016CE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9D7                    	.code
                            	LM132:
0000A9D7 40 F0 B3 A7        		CALL _StoreSD	// call without return value
000016D0                    	.debug
000016D0 2E 00 73 00        		.dw '.stabn 0x44,0,303,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         33 00 2C 00
         00 00 00 00
000016E4 3B 00 00 00        		.dd LM133-_main
000016E6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9D9                    	.code
                            	LM133:
0000A9D9 0F 9F DD A9        		PC=L95	// jump
                            	L94:
000016E8                    	.debug
000016E8 2E 00 73 00        		.dw '.stabn 0x44,0,306,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         36 00 2C 00
         00 00 00 00
000016FC 3D 00 00 00        		.dd LM134-_main
000016FE 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9DB                    	.code
                            	LM134:
0000A9DB 40 F0 54 A8        		CALL _LoadSD	// call without return value
                            	L95:
00001700                    	.debug
00001700 2E 00 73 00        		.dw '.stabn 0x44,0,309,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         39 00 2C 00
         00 00 00 00
00001714 3F 00 00 00        		.dd LM135-_main
00001716 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9DD                    	.code
                            	LM135:
0000A9DD 43 92              		R1=3	// QImode move
0000A9DE C8 D2              		[SP--]=R1	// QImode move
0000A9DF 49 92              		R1=9	// QImode move
0000A9E0 C8 D2              		[SP--]=R1	// QImode move
0000A9E1 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000A9E3 42 00              		SP = SP + 2	//SP
00001718                    	.debug
00001718 2E 00 73 00        		.dw '.stabn 0x44,0,310,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         30 00 2C 00
         00 00 00 00
0000172C 46 00 00 00        		.dd LM136-_main
0000172E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9E4                    	.code
                            	LM136:
0000A9E4 40 92              		R1=0	// QImode move
0000A9E5 C8 D2              		[SP--]=R1	// QImode move
0000A9E6 40 F0 E8 9B        		CALL _BSR_InitRecognizer	// call with return value
0000A9E8 41 00              		SP = SP + 1	//SP
00001730                    	.debug
00001730 2E 00 73 00        		.dw '.stabn 0x44,0,312,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         32 00 2C 00
         00 00 00 00
00001744 4B 00 00 00        		.dd LM137-_main
00001746 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9E9                    	.code
                            	LM137:
                            	L96:
0000A9E9 0F 9F ED A9        		PC=L98	// jump
0000A9EB 0F 9F 62 AA        		PC=L97	// jump
                            	L98:
00001748                    	.debug
00001748 2E 00 73 00        		.dw '.stabn 0x44,0,314,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         34 00 2C 00
         00 00 00 00
0000175C 4F 00 00 00        		.dd LM138-_main
0000175E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9ED                    	.code
                            	LM138:
0000A9ED 40 F0 15 9C        		CALL _BSR_GetResult	// call with return value
0000A9EF C5 D2              		[BP]=R1	// QImode move
00001760                    	.debug
00001760 2E 00 73 00        		.dw '.stabn 0x44,0,316,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         36 00 2C 00
         00 00 00 00
00001774 52 00 00 00        		.dd LM139-_main
00001776 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9F0                    	.code
                            	LM139:
0000A9F0 C5 92              		R1=[BP]	// QImode move
0000A9F1 40 42              		CMP R1,0	// QImode test
0000A9F2 02 BE 0F 9F        		NSJNG L99	//QImode LE
         49 AA      
00001778                    	.debug
00001778 2E 00 73 00        		.dw '.stabn 0x44,0,318,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         38 00 2C 00
         00 00 00 00
0000178C 57 00 00 00        		.dd LM140-_main
0000178E 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9F5                    	.code
                            	LM140:
0000A9F5 C5 92              		R1=[BP]	// QImode move
0000A9F6 09 43 00 01        		CMP R1,256	// QImode compare
0000A9F8 0F 4E 01 EE        		NSJNZ L100	//QImode NE
         00 EE      
00001790                    	.debug
00001790 2E 00 73 00        		.dw '.stabn 0x44,0,320,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         30 00 2C 00
         00 00 00 00
000017A4 5D 00 00 00        		.dd LM141-_main
000017A6 0D 00 0A 00        		.dw 0x0d,0x0a
0000A9FB                    	.code
                            	LM141:
0000A9FB 43 92              		R1=3	// QImode move
0000A9FC C8 D2              		[SP--]=R1	// QImode move
0000A9FD 45 92              		R1=5	// QImode move
0000A9FE C8 D2              		[SP--]=R1	// QImode move
0000A9FF 40 F0 E5 A6        		CALL _PlaySnd	// call without return value
0000AA01 42 00              		SP = SP + 2	//SP
000017A8                    	.debug
000017A8 2E 00 73 00        		.dw '.stabn 0x44,0,321,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         31 00 2C 00
         00 00 00 00
000017BC 64 00 00 00        		.dd LM142-_main
000017BE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA02                    	.code
                            	LM142:
0000AA02 05 93              		R1=BP	// QImode move
0000AA03 0D 05 01 00        		R2=BP+1
0000AA05 41 92              		R1=1	// QImode move
0000AA06 02 97              		R3=R2	// QImode move
0000AA07 C3 D2              		[R3]=R1	// QImode move
                            	L100:
000017C0                    	.debug
000017C0 2E 00 73 00        		.dw '.stabn 0x44,0,324,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         34 00 2C 00
         00 00 00 00
000017D4 6A 00 00 00        		.dd LM143-_main
000017D6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA08                    	.code
                            	LM143:
0000AA08 05 93              		R1=BP	// QImode move
0000AA09 0D 05 01 00        		R2=BP+1
0000AA0B 02 97              		R3=R2	// QImode move
0000AA0C C3 92              		R1=[R3]	// QImode move
0000AA0D 41 42              		CMP R1,1	// QImode compare
0000AA0E 3A 4E 01 EE        		NSJNZ L99	//QImode NE
         00 EE      
000017D8                    	.debug
000017D8 2E 00 73 00        		.dw '.stabn 0x44,0,326,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         36 00 2C 00
         00 00 00 00
000017EC 73 00 00 00        		.dd LM144-_main
000017EE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA11                    	.code
                            	LM144:
0000AA11 C5 94              		R2=[BP]	// QImode move
0000AA12 02 93              		R1=R2	// QImode move
0000AA13 09 23 01 01        		R1=R1-257
0000AA15 43 42              		CMP R1,3	// QImode compare
0000AA16 30 9E 01 EE        		NSJA L107	//QImode GTU
         00 EE      
0000AA19 0A 95 63 80        		R2=L108	// QImode move
0000AA1B 02 03              		R1 = R1 + R2	//addqi3
0000AA1C 01 95              		R2=R1	// QImode move
0000AA1D C2 92              		R1=[R2]	// QImode move
0000AA1E 01 9F              		PC=R1	// tablejump
00008063                    	.text
                            	L108:
00008063 1F AA              		.dw L103
00008064 29 AA              		.dw L104
00008065 33 AA              		.dw L105
00008066 3D AA              		.dw L106
0000AA1F                    	.code
                            	L103:
000017F0                    	.debug
000017F0 2E 00 73 00        		.dw '.stabn 0x44,0,329,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         39 00 2C 00
         00 00 00 00
00001804 81 00 00 00        		.dd LM145-_main
00001806 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA1F                    	.code
                            	LM145:
0000AA1F 40 F0 94 A9        		CALL _led_on	// call without return value
00001808                    	.debug
00001808 2E 00 73 00        		.dw '.stabn 0x44,0,331,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         31 00 2C 00
         00 00 00 00
0000181C 83 00 00 00        		.dd LM146-_main
0000181E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA21                    	.code
                            	LM146:
0000AA21 05 93              		R1=BP	// QImode move
0000AA22 0D 05 01 00        		R2=BP+1
0000AA24 40 92              		R1=0	// QImode move
0000AA25 02 97              		R3=R2	// QImode move
0000AA26 C3 D2              		[R3]=R1	// QImode move
00001820                    	.debug
00001820 2E 00 73 00        		.dw '.stabn 0x44,0,332,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         32 00 2C 00
         00 00 00 00
00001834 89 00 00 00        		.dd LM147-_main
00001836 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA27                    	.code
                            	LM147:
0000AA27 0F 9F 49 AA        		PC=L99	// jump
                            	L104:
00001838                    	.debug
00001838 2E 00 73 00        		.dw '.stabn 0x44,0,334,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         34 00 2C 00
         00 00 00 00
0000184C 8B 00 00 00        		.dd LM148-_main
0000184E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA29                    	.code
                            	LM148:
0000AA29 40 F0 09 A9        		CALL _BackUp	// call without return value
00001850                    	.debug
00001850 2E 00 73 00        		.dw '.stabn 0x44,0,335,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         35 00 2C 00
         00 00 00 00
00001864 8D 00 00 00        		.dd LM149-_main
00001866 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA2B                    	.code
                            	LM149:
0000AA2B 05 93              		R1=BP	// QImode move
0000AA2C 0D 05 01 00        		R2=BP+1
0000AA2E 40 92              		R1=0	// QImode move
0000AA2F 02 97              		R3=R2	// QImode move
0000AA30 C3 D2              		[R3]=R1	// QImode move
00001868                    	.debug
00001868 2E 00 73 00        		.dw '.stabn 0x44,0,336,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         36 00 2C 00
         00 00 00 00
0000187C 93 00 00 00        		.dd LM150-_main
0000187E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA31                    	.code
                            	LM150:
0000AA31 0F 9F 49 AA        		PC=L99	// jump
                            	L105:
00001880                    	.debug
00001880 2E 00 73 00        		.dw '.stabn 0x44,0,338,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         38 00 2C 00
         00 00 00 00
00001894 95 00 00 00        		.dd LM151-_main
00001896 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA33                    	.code
                            	LM151:
0000AA33 40 F0 32 A9        		CALL _TurnLeft	// call without return value
00001898                    	.debug
00001898 2E 00 73 00        		.dw '.stabn 0x44,0,339,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         39 00 2C 00
         00 00 00 00
000018AC 97 00 00 00        		.dd LM152-_main
000018AE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA35                    	.code
                            	LM152:
0000AA35 05 93              		R1=BP	// QImode move
0000AA36 0D 05 01 00        		R2=BP+1
0000AA38 40 92              		R1=0	// QImode move
0000AA39 02 97              		R3=R2	// QImode move
0000AA3A C3 D2              		[R3]=R1	// QImode move
000018B0                    	.debug
000018B0 2E 00 73 00        		.dw '.stabn 0x44,0,340,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         30 00 2C 00
         00 00 00 00
000018C4 9D 00 00 00        		.dd LM153-_main
000018C6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA3B                    	.code
                            	LM153:
0000AA3B 0F 9F 49 AA        		PC=L99	// jump
                            	L106:
000018C8                    	.debug
000018C8 2E 00 73 00        		.dw '.stabn 0x44,0,342,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         32 00 2C 00
         00 00 00 00
000018DC 9F 00 00 00        		.dd LM154-_main
000018DE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA3D                    	.code
                            	LM154:
0000AA3D 40 F0 63 A9        		CALL _TurnRight	// call without return value
000018E0                    	.debug
000018E0 2E 00 73 00        		.dw '.stabn 0x44,0,343,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         33 00 2C 00
         00 00 00 00
000018F4 A1 00 00 00        		.dd LM155-_main
000018F6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA3F                    	.code
                            	LM155:
0000AA3F 05 93              		R1=BP	// QImode move
0000AA40 0D 05 01 00        		R2=BP+1
0000AA42 40 92              		R1=0	// QImode move
0000AA43 02 97              		R3=R2	// QImode move
0000AA44 C3 D2              		[R3]=R1	// QImode move
000018F8                    	.debug
000018F8 2E 00 73 00        		.dw '.stabn 0x44,0,344,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         34 00 2C 00
         00 00 00 00
0000190C A7 00 00 00        		.dd LM156-_main
0000190E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA45                    	.code
                            	LM156:
0000AA45 0F 9F 49 AA        		PC=L99	// jump
                            	L107:
00001910                    	.debug
00001910 2E 00 73 00        		.dw '.stabn 0x44,0,346,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         36 00 2C 00
         00 00 00 00
00001924 A9 00 00 00        		.dd LM157-_main
00001926 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA47                    	.code
                            	LM157:
0000AA47 0F 9F 49 AA        		PC=L99	// jump
                            	L102:
                            	L101:
                            	L99:
00001928                    	.debug
00001928 2E 00 73 00        		.dw '.stabn 0x44,0,351,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         31 00 2C 00
         00 00 00 00
0000193C AB 00 00 00        		.dd LM158-_main
0000193E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA49                    	.code
                            	LM158:
0000AA49 12 95 00 70        		R2=[28672]	// QImode move
0000AA4B 0A B3 04 00        		R1=R2&4
0000AA4D 40 42              		CMP R1,0	// QImode test
0000AA4E 11 5E 01 EE        		NSJZ L109	//QImode EQ
         00 EE      
00001940                    	.debug
00001940 2E 00 73 00        		.dw '.stabn 0x44,0,353,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         33 00 2C 00
         00 00 00 00
00001954 B3 00 00 00        		.dd LM159-_main
00001956 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA51                    	.code
                            	LM159:
0000AA51 09 63 00 20        		R1=(-8192)	// QImode move
0000AA53 C8 D2              		[SP--]=R1	// QImode move
0000AA54 40 F0 6A AC        		CALL _F_FlashErase	// call without return value
0000AA56 41 00              		SP = SP + 1	//SP
00001958                    	.debug
00001958 2E 00 73 00        		.dw '.stabn 0x44,0,354,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         34 00 2C 00
         00 00 00 00
0000196C B9 00 00 00        		.dd LM160-_main
0000196E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA57                    	.code
                            	LM160:
                            	L110:
0000AA57 0F 9F 5B AA        		PC=L112	// jump
0000AA59 0F 9F 60 AA        		PC=L109	// jump
                            	L112:
00001970                    	.debug
00001970 2E 00 73 00        		.dw '.stabn 0x44,0,356,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         36 00 2C 00
         00 00 00 00
00001984 BD 00 00 00        		.dd LM161-_main
00001986 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA5B                    	.code
                            	LM161:
0000AA5B 41 92              		R1=1	// QImode move
0000AA5C 19 D3 12 70        		[28690]=R1	// QImode move
00001988                    	.debug
00001988 2E 00 73 00        		.dw '.stabn 0x44,0,357,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         37 00 2C 00
         00 00 00 00
0000199C C0 00 00 00        		.dd LM162-_main
0000199E 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA5E                    	.code
                            	LM162:
0000AA5E 0F 9F 57 AA        		PC=L110	// jump
                            	L111:
                            	L109:
000019A0                    	.debug
000019A0 2E 00 73 00        		.dw '.stabn 0x44,0,359,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         39 00 2C 00
         00 00 00 00
000019B4 C2 00 00 00        		.dd LM163-_main
000019B6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA60                    	.code
                            	LM163:
0000AA60 0F 9F E9 A9        		PC=L96	// jump
                            	L97:
000019B8                    	.debug
000019B8 2E 00 73 00        		.dw '.stabn 0x44,0,360,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         30 00 2C 00
         00 00 00 00
000019CC C4 00 00 00        		.dd LM164-_main
000019CE 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA62                    	.code
                            	LM164:
                            	LBE10:
000019D0                    	.debug
000019D0 2E 00 73 00        		.dw '.stabn 0x44,0,360,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         30 00 2C 00
         00 00 00 00
000019E4 C4 00 00 00        		.dd LM165-_main
000019E6 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA62                    	.code
                            	LM165:
                            	L93:
                            	
0000AA62 44 00              		SP+=4
0000AA63 88 98              		POP BP from [SP]
0000AA64 90 9A              		RETF
                            		.endp	// end of main
                            	
000019E8                    	.debug
000019E8 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000019FA 07 00 00 00        		.dd LBB10-_main
000019FC 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA65                    	.code
000019FE                    	.debug
000019FE 2E 00 73 00        		.dw '.stabs "Result:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 75 00
         6C 00 74 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000AA65                    	.CODE
00001A1B                    	.debug
00001A1B 2E 00 73 00        		.dw '.stabs "Ready:4",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         61 00 64 00
         79 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000AA65                    	.CODE
00001A37                    	.debug
00001A37 2E 00 73 00        		.dw '.stabs "BS_Flag:4",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         42 00 53 00
         5F 00 46 00
         6C 00 61 00
         67 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000AA65                    	.CODE
00001A55                    	.debug
00001A55 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001A67 C4 00 00 00        		.dd LBE10-_main
00001A69 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA65                    	.code
00001A6B                    	.debug
00001A6B 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001A74 C7 00 00 00        		.dd LME12-_main
00001A76 0D 00 0A 00        		.dw 0x0d,0x0a
0000AA65                    	.code
                            	LME12:
                            	.external _BSR_GetResult
                            	.external _BSR_DeleteSDGroup
                            	.external _BSR_ImportSDWord
                            	.external _BSR_SDModel
                            	.external _F_FlashWrite1Word
                            	.external _BSR_ExportSDWord
                            	.external _F_FlashErase
                            	.external _BSR_Train
                            	.external _BSR_InitRecognizer
                            	.external _SACM_S480_Stop
                            	.external _SACM_S480_ServiceLoop
                            	.external _SACM_S480_Status
                            	.external _SACM_S480_Play
                            	.external _SACM_S480_Initial
                            	.external _BSR_StopRecognizer
                            		.end
0 error(s), 0 warning(s).

