Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\PROGRA~1\Sunplus\UNSPID~1.0\cc1.exe C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cce0aaaa.i -fkeep-inline-functions -quiet -dumpbase ADConv.c -mglobal-var-iram -gstabs -Wall -o .\Debug/ADConv.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "C:/Documents and Settings/Administrator/×ÀÃæ/voice/voice/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 3A 00
         2F 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         20 00 61 00
         6E 00 64 00
         20 00 53 00
         65 00 74 00
         74 00 69 00
         6E 00 67 00
         73 00 2F 00
         41 00 64 00
         6D 00 69 00
         6E 00 69 00
         73 00 74 00
         72 00 61 00
         74 00 6F 00
         72 00 2F 00
         D7 00 C0 00
         C3 00 E6 00
         2F 00 76 00
         6F 00 69 00
         63 00 65 00
         2F 00 76 00
         6F 00 69 00
         63 00 65 00
         2F 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
000094F1                    	.code
00000052                    	.debug
00000052 2E 00 73 00        		.dw '.stabs "C:/Documents and Settings/Administrator/×/300Ã/346/voice/voice/ADConv.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 3A 00
         2F 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         20 00 61 00
         6E 00 64 00
         20 00 53 00
         65 00 74 00
         74 00 69 00
         6E 00 67 00
         73 00 2F 00
         41 00 64 00
         6D 00 69 00
         6E 00 69 00
         73 00 74 00
         72 00 61 00
         74 00 6F 00
         72 00 2F 00
         D7 00 2F 00
         33 00 30 00
         30 00 C3 00
         2F 00 33 00
         34 00 36 00
         2F 00 76 00
         6F 00 69 00
         63 00 65 00
         2F 00 76 00
         6F 00 69 00
         63 00 65 00
         2F 00 41 00
         44 00 43 00
         6F 00 6E 00
         76 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
000094F1                    	.code
000094F1                    	.code
                            	Ltext0:
000000B2                    	.debug
000000B2 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
000000DE                    	.debug
000000DE 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
00000104                    	.debug
00000104 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000094F1                    	.CODE
0000013F                    	.debug
0000013F 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
0000016F                    	.debug
0000016F 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
000001A9                    	.debug
000001A9 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
000001E9                    	.debug
000001E9 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000094F1                    	.CODE
00000228                    	.debug
00000228 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
0000025A                    	.debug
0000025A 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
00000290                    	.debug
00000290 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
000002C6                    	.debug
000002C6 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000094F1                    	.CODE
000002F9                    	.debug
000002F9 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
0000031F                    	.debug
0000031F 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000094F1                    	.CODE
00000346                    	.debug
00000346 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
00000372                    	.debug
00000372 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000094F1                    	.CODE
000003B3                    	.debug
000003B3 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000094F1                    	.CODE
000003E2                    	.debug
000003E2 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
00000412                    	.debug
00000412 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000094F1                    	.CODE
00000447                    	.debug
00000447 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000094F1                    	.CODE
00000467                    	.debug
00000467 2E 00 73 00        		.dw '.stabs "uiData:G5",32,0,0,',0,0,offset _uiData,seg _uiData,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         44 00 61 00
         74 00 61 00
         3A 00 47 00
         35 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
000094F1                    	.CODE
00000487                    	.debug
00000487 2E 00 73 00        		.dw '.stabs "i:G4",32,0,0,',0,0,offset _i,seg _i,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 02 00
         00 00 0D 00
         0A 00      
000094F1                    	.CODE
000004A2                    	.debug
000004A2 2E 00 73 00        		.dw '.stabs "fVoltage:G12",32,0,0,',0,0,offset _fVoltage,seg _fVoltage,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 56 00
         6F 00 6C 00
         74 00 61 00
         67 00 65 00
         3A 00 47 00
         31 00 32 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 03 00
         00 00 0D 00
         0A 00      
000094F1                    	.CODE
000094F1                    	.code
000004C5                    	.debug
000004C5 2E 00 73 00        		.dw '.stabs "ADInit:F19",36,0,0,',0,0,offset _ADInit,seg _ADInit,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 44 00
         49 00 6E 00
         69 00 74 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
000094F1                    	.CODE
                            	.public _ADInit
                            	_ADInit:	.proc
000004E6                    	.debug
000004E6 2E 00 73 00        		.dw '.stabn 0x44,0,8,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 2C 00
         00 00 00 00
000004F8 00 00 00 00        		.dd LM1-_ADInit
000004FA 0D 00 0A 00        		.dw 0x0d,0x0a
000094F1                    	.code
                            	LM1:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
000094F1 88 DA              		push bp to [sp]
000094F2 08 0B 01 00        		bp=sp+1
                            	
000094F4 0D 03 03 00        		R1=BP+3
000004FC                    	.debug
000004FC 2E 00 73 00        		.dw '.stabn 0x44,0,9,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 2C 00
         00 00 00 00
0000050E 05 00 00 00        		.dd LM2-_ADInit
00000510 0D 00 0A 00        		.dw 0x0d,0x0a
000094F6                    	.code
                            	LM2:
000094F6 45 94              		R2=5	// QImode move
000094F7 1A D5 2B 70        		[28715]=R2	// QImode move
00000512                    	.debug
00000512 2E 00 73 00        		.dw '.stabn 0x44,0,10,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         2C 00 00 00
         00 00      
00000525 08 00 00 00        		.dd LM3-_ADInit
00000527 0D 00 0A 00        		.dw 0x0d,0x0a
000094F9                    	.code
                            	LM3:
000094F9 41 94              		R2=1	// QImode move
000094FA 1A D5 15 70        		[28693]=R2	// QImode move
00000529                    	.debug
00000529 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
0000053C 0B 00 00 00        		.dd LM4-_ADInit
0000053E 0D 00 0A 00        		.dw 0x0d,0x0a
000094FC                    	.code
                            	LM4:
000094FC 12 95 2C 70        		R2=[28716]	// QImode move
000094FE 02 97              		R3=R2
000094FF 40 98              		R4=0
                            		//split [_uiData], R3
00009500 1B D7 3F 02        		[_uiData]=R3	// QImode move
00009502 1C D9 40 02        		[_uiData+1]=R4	// QImode move
00000540                    	.debug
00000540 2E 00 73 00        		.dw '.stabn 0x44,0,12,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         2C 00 00 00
         00 00      
00000553 13 00 00 00        		.dd LM5-_ADInit
00000555 0D 00 0A 00        		.dw 0x0d,0x0a
00009504                    	.code
                            	LM5:
00009504 40 96              		R3=0	// HFmode immediate to register move
00009505 40 98              		R4=0
00009506 1B D7 42 02        		[_fVoltage]=R3	// HFmode [Label]=RS
00009508 1C D9 43 02        		[_fVoltage+1]=R4
00000557                    	.debug
00000557 2E 00 73 00        		.dw '.stabn 0x44,0,13,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         2C 00 00 00
         00 00      
0000056A 19 00 00 00        		.dd LM6-_ADInit
0000056C 0D 00 0A 00        		.dw 0x0d,0x0a
0000950A                    	.code
                            	LM6:
                            		//split R3, 0
0000950A 40 96              		R3=0	// QImode move
0000950B 40 98              		R4=0	// QImode move
                            		//split [_uiData], R3
0000950C 1B D7 3F 02        		[_uiData]=R3	// QImode move
0000950E 1C D9 40 02        		[_uiData+1]=R4	// QImode move
0000056E                    	.debug
0000056E 2E 00 73 00        		.dw '.stabn 0x44,0,14,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         2C 00 00 00
         00 00      
00000581 1F 00 00 00        		.dd LM7-_ADInit
00000583 0D 00 0A 00        		.dw 0x0d,0x0a
00009510                    	.code
                            	LM7:
00000585                    	.debug
00000585 2E 00 73 00        		.dw '.stabn 0x44,0,14,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         2C 00 00 00
         00 00      
00000598 1F 00 00 00        		.dd LM8-_ADInit
0000059A 0D 00 0A 00        		.dw 0x0d,0x0a
00009510                    	.code
                            	LM8:
                            	L2:
                            	
00009510 88 98              		pop bp from [sp]
00009511 90 9A              		retf
                            		.endp	// end of ADInit
                            	
0000059C                    	.debug
0000059C 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000005A5 21 00 00 00        		.dd LME1-_ADInit
000005A7 0D 00 0A 00        		.dw 0x0d,0x0a
00009512                    	.code
                            	LME1:
00009512                    	.code
000005A9                    	.debug
000005A9 2E 00 73 00        		.dw '.stabs "AD:F4",36,0,0,',0,0,offset _AD,seg _AD,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 44 00
         3A 00 46 00
         34 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         21 00 00 00
         0D 00 0A 00
00009512                    	.CODE
                            	.public _AD
                            	_AD:	.proc
000005C5                    	.debug
000005C5 2E 00 73 00        		.dw '.stabn 0x44,0,16,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         2C 00 00 00
         00 00      
000005D8 00 00 00 00        		.dd LM9-_AD
000005DA 0D 00 0A 00        		.dw 0x0d,0x0a
00009512                    	.code
                            	LM9:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00009512 88 DA              		push bp to [sp]
00009513 41 20              		sp-=1
00009514 08 0B 01 00        		bp=sp+1
                            	
00009516 0D 05 04 00        		R2=BP+4
000005DC                    	.debug
000005DC 2E 00 73 00        		.dw '.stabn 0x44,0,17,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         2C 00 00 00
         00 00      
000005EF 06 00 00 00        		.dd LM10-_AD
000005F1 0D 00 0A 00        		.dw 0x0d,0x0a
00009518                    	.code
                            	LM10:
                            	LBB2:
000005F3                    	.debug
000005F3 2E 00 73 00        		.dw '.stabn 0x44,0,18,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         2C 00 00 00
         00 00      
00000606 06 00 00 00        		.dd LM11-_AD
00000608 0D 00 0A 00        		.dw 0x0d,0x0a
00009518                    	.code
                            	LM11:
                            	L4:
00009518 13 97 2B 70        		R3=[28715]	// QImode move
0000951A 0B B3 00 80        		R1=R3&(-32768)
0000951C 40 42              		CMP R1,0	// QImode test
0000951D 04 5E 01 EE        		NSJZ L6	//QImode EQ
         00 EE      
00009520 0F 9F 27 95        		pc=L5	// Indirect jump
                            	L6:
0000060A                    	.debug
0000060A 2E 00 73 00        		.dw '.stabn 0x44,0,20,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         2C 00 00 00
         00 00      
0000061D 10 00 00 00        		.dd LM12-_AD
0000061F 0D 00 0A 00        		.dw 0x0d,0x0a
00009522                    	.code
                            	LM12:
00009522 41 92              		R1=1	// QImode move
00009523 19 D3 12 70        		[28690]=R1	// QImode move
00000621                    	.debug
00000621 2E 00 73 00        		.dw '.stabn 0x44,0,21,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         2C 00 00 00
         00 00      
00000634 13 00 00 00        		.dd LM13-_AD
00000636 0D 00 0A 00        		.dw 0x0d,0x0a
00009525                    	.code
                            	LM13:
00009525 0F 9F 18 95        		pc=L4	// Indirect jump
                            	L5:
00000638                    	.debug
00000638 2E 00 73 00        		.dw '.stabn 0x44,0,22,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         2C 00 00 00
         00 00      
0000064B 15 00 00 00        		.dd LM14-_AD
0000064D 0D 00 0A 00        		.dw 0x0d,0x0a
00009527                    	.code
                            	LM14:
00009527 11 93 2C 70        		R1=[28716]	// QImode move
00009529 C5 D2              		[BP]=R1	// QImode move
0000064F                    	.debug
0000064F 2E 00 73 00        		.dw '.stabn 0x44,0,23,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         2C 00 00 00
         00 00      
00000662 18 00 00 00        		.dd LM15-_AD
00000664 0D 00 0A 00        		.dw 0x0d,0x0a
0000952A                    	.code
                            	LM15:
0000952A C5 92              		R1=[BP]	// QImode move
0000952B 09 B7 C0 FF        		R3=R1&(-64)
0000952D 03 93              		R1=R3	// QImode move
0000952E 0F 9F 30 95        		pc=L3	// Indirect jump
00000666                    	.debug
00000666 2E 00 73 00        		.dw '.stabn 0x44,0,24,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         2C 00 00 00
         00 00      
00000679 1E 00 00 00        		.dd LM16-_AD
0000067B 0D 00 0A 00        		.dw 0x0d,0x0a
00009530                    	.code
                            	LM16:
                            	LBE2:
0000067D                    	.debug
0000067D 2E 00 73 00        		.dw '.stabn 0x44,0,24,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         2C 00 00 00
         00 00      
00000690 1E 00 00 00        		.dd LM17-_AD
00000692 0D 00 0A 00        		.dw 0x0d,0x0a
00009530                    	.code
                            	LM17:
                            	L3:
                            	
00009530 41 00              		sp+=1
00009531 88 98              		pop bp from [sp]
00009532 90 9A              		retf
                            		.endp	// end of AD
                            	
00000694                    	.debug
00000694 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000006A6 06 00 00 00        		.dd LBB2-_AD
000006A8 0D 00 0A 00        		.dw 0x0d,0x0a
00009533                    	.code
000006AA                    	.debug
000006AA 2E 00 73 00        		.dw '.stabs "uiData:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 69 00
         44 00 61 00
         74 00 61 00
         3A 00 34 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009533                    	.CODE
000006C7                    	.debug
000006C7 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000006D9 1E 00 00 00        		.dd LBE2-_AD
000006DB 0D 00 0A 00        		.dw 0x0d,0x0a
00009533                    	.code
000006DD                    	.debug
000006DD 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000006E6 21 00 00 00        		.dd LME2-_AD
000006E8 0D 00 0A 00        		.dw 0x0d,0x0a
00009533                    	.code
                            	LME2:
00009533                    	.code
000006EA                    	.debug
000006EA 2E 00 73 00        		.dw '.stabs "ADtoVoltage:F12",36,0,0,',0,0,offset _ADtoVoltage,seg _ADtoVoltage,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 44 00
         74 00 6F 00
         56 00 6F 00
         6C 00 74 00
         61 00 67 00
         65 00 3A 00
         46 00 31 00
         32 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         42 00 00 00
         0D 00 0A 00
00009533                    	.CODE
                            	.public _ADtoVoltage
                            	_ADtoVoltage:	.proc
00000710                    	.debug
00000710 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
00000723 00 00 00 00        		.dd LM18-_ADtoVoltage
00000725 0D 00 0A 00        		.dw 0x0d,0x0a
00009533                    	.code
                            	LM18:
                            		// total=12, vars=12
                            		// frame_pointer_needed: 1
00009533 88 DA              		push bp to [sp]
00009534 4C 20              		sp-=12
00009535 08 0B 01 00        		bp=sp+1
                            	
00009537 0D 03 0F 00        		R1=BP+15
00009539 C5 D2              		[BP]=R1	// QImode move
00000727                    	.debug
00000727 2E 00 73 00        		.dw '.stabn 0x44,0,27,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         2C 00 00 00
         00 00      
0000073A 07 00 00 00        		.dd LM19-_ADtoVoltage
0000073C 0D 00 0A 00        		.dw 0x0d,0x0a
0000953A                    	.code
                            	LM19:
0000953A 40 F0 F1 94        		call _ADInit	// call without return value
0000073E                    	.debug
0000073E 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
00000751 09 00 00 00        		.dd LM20-_ADtoVoltage
00000753 0D 00 0A 00        		.dw 0x0d,0x0a
0000953C                    	.code
                            	LM20:
0000953C 40 92              		R1=0	// QImode move
0000953D 19 D3 41 02        		[_i]=R1	// QImode move
                            	L9:
0000953F 11 93 41 02        		R1=[_i]	// QImode move
00009541 47 42              		CMP R1,7	// QImode compare
00009542 04 8E 01 EE        		NSJNA L12	//QImode LEU
         00 EE      
00009545 0F 9F 7A 95        		pc=L10	// Indirect jump
                            	L12:
00000755                    	.debug
00000755 2E 00 73 00        		.dw '.stabn 0x44,0,30,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         2C 00 00 00
         00 00      
00000768 14 00 00 00        		.dd LM21-_ADtoVoltage
0000076A 0D 00 0A 00        		.dw 0x0d,0x0a
00009547                    	.code
                            	LM21:
00009547 41 92              		R1=1	// QImode move
00009548 19 D3 12 70        		[28690]=R1	// QImode move
0000076C                    	.debug
0000076C 2E 00 73 00        		.dw '.stabn 0x44,0,31,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         2C 00 00 00
         00 00      
0000077F 17 00 00 00        		.dd LM22-_ADtoVoltage
00000781 0D 00 0A 00        		.dw 0x0d,0x0a
0000954A                    	.code
                            	LM22:
0000954A 40 F0 12 95        		call _AD	// call with return value
0000954C 01 97              		R3=R1
0000954D 40 98              		R4=0
                            		//split [bp+10], R3
0000954E 0A D6              		[bp+10]=R3	// QImode move
0000954F 0B D8              		[bp+11]=R4	// QImode move
                            		//split R1, [_uiData]
00009550 11 93 3F 02        		R1=[_uiData]	// QImode move
00009552 12 95 40 02        		R2=[_uiData+1]	// QImode move
                            		//split [bp+1], R1
00009554 01 D2              		[bp+1]=R1	// QImode move
00009555 02 D4              		[bp+2]=R2	// QImode move
00009556 01 96              		R3=[bp+1]	// QImode move
00009557 03 D6              		[bp+3]=R3	// QImode move
00009558 0A 98              		R4=[bp+10]	// QImode move
00009559 03 08              		R4 = R4 + [bp+3]	//addqi3
0000955A 03 D8              		[bp+3]=R4	// QImode move
0000955B 03 92              		R1=[bp+3]	// QImode move
0000955C 41 96              		R3=1	// QImode move
0000955D 04 D6              		[bp+4]=R3	// QImode move
0000955E 03 98              		R4=[bp+3]	// QImode move
0000955F 01 96              		R3=[bp+1]	// QImode move
00009560 03 49              		CMP R4,R3	// QImode compare
00009561 04 0E 01 EE        		NSJB L13	//QImode LTU
         00 EE      
00009564 40 98              		R4=0	// QImode move
00009565 04 D8              		[bp+4]=R4	// QImode move
                            	L13:
00009566 02 96              		R3=[bp+2]	// QImode move
00009567 05 D6              		[bp+5]=R3	// QImode move
00009568 0B 98              		R4=[bp+11]	// QImode move
00009569 05 08              		R4 = R4 + [bp+5]	//addqi3
0000956A 05 D8              		[bp+5]=R4	// QImode move
0000956B 05 94              		R2=[bp+5]	// QImode move
0000956C 05 96              		R3=[bp+5]	// QImode move
0000956D 04 06              		R3 = R3 + [bp+4]	//addqi3
0000956E 03 95              		R2=R3	// QImode move
                            		//split [_uiData], R1
0000956F 19 D3 3F 02        		[_uiData]=R1	// QImode move
00009571 1A D5 40 02        		[_uiData+1]=R2	// QImode move
00000783                    	.debug
00000783 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
00000796 40 00 00 00        		.dd LM23-_ADtoVoltage
00000798 0D 00 0A 00        		.dw 0x0d,0x0a
00009573                    	.code
                            	LM23:
                            	L11:
00009573 11 93 41 02        		R1=[_i]	// QImode move
00009575 41 94              		R2=1	// QImode move
00009576 19 05 41 02        		[_i]=R1+R2  //addqi3_Qrr
00009578 0F 9F 3F 95        		pc=L9	// Indirect jump
                            	L10:
0000079A                    	.debug
0000079A 2E 00 73 00        		.dw '.stabn 0x44,0,33,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         2C 00 00 00
         00 00      
000007AD 47 00 00 00        		.dd LM24-_ADtoVoltage
000007AF 0D 00 0A 00        		.dw 0x0d,0x0a
0000957A                    	.code
                            	LM24:
                            		//split R1, [_uiData]
0000957A 11 93 3F 02        		R1=[_uiData]	// QImode move
0000957C 12 95 40 02        		R2=[_uiData+1]	// QImode move
0000957E 43 96              		R3=3	// QImode move
0000957F C8 D6              		[SP--]=R3	// QImode move
00009580 90 D4              		push R1,R2 to [sp]	// pushhi
00009581 40 F0 1F 9A        		call __rshu2	// call with return value
00009583 43 00              		SP = SP + 3	//SP
                            		//split [_uiData], R1
00009584 19 D3 3F 02        		[_uiData]=R1	// QImode move
00009586 1A D5 40 02        		[_uiData+1]=R2	// QImode move
000007B1                    	.debug
000007B1 2E 00 73 00        		.dw '.stabn 0x44,0,34,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         2C 00 00 00
         00 00      
000007C4 55 00 00 00        		.dd LM25-_ADtoVoltage
000007C6 0D 00 0A 00        		.dw 0x0d,0x0a
00009588                    	.code
                            	LM25:
                            		//split R1, [_uiData]
00009588 11 93 3F 02        		R1=[_uiData]	// QImode move
0000958A 12 95 40 02        		R2=[_uiData+1]	// QImode move
0000958C 40 44              		CMP R2, 0	// HImode 1st compare
0000958D 13 3E 01 EE        		NSJL  L15	// HImode LT
         00 EE      
00009590 04 4E              		JNZ L19
00009591 40 42              		CMP R1,0
00009592 0E 0E 01 EE        		NSJB L15
         00 EE      
                            	L19:
                            		//split R1, [_uiData]
00009595 11 93 3F 02        		R1=[_uiData]	// QImode move
00009597 12 95 40 02        		R2=[_uiData+1]	// QImode move
00009599 90 D4              		push R1,R2 to [sp]	// pushhi
0000959A 40 F0 79 9A        		call __cvi2f2	// call with return value
0000959C 42 00              		SP = SP + 2	//SP
0000959D 06 D2              		[bp+6]=R1	// HFmode [BP+#IM6]=RS
0000959E 07 D4              		[bp+7]=R2
0000959F 0F 9F CC 95        		pc=L14	// Indirect jump
                            	L15:
                            		//split R1, [_uiData]
000095A1 11 93 3F 02        		R1=[_uiData]	// QImode move
000095A3 12 95 40 02        		R2=[_uiData+1]	// QImode move
000095A5 09 B7 01 00        		R3=R1&1	// HImode RD=RS&#IMM16
000095A7 0A B9 00 00        		R4=R2&0
                            		//split [bp+8], R3
000095A9 08 D6              		[bp+8]=R3	// QImode move
000095AA 09 D8              		[bp+9]=R4	// QImode move
                            		//split R1, [_uiData]
000095AB 11 93 3F 02        		R1=[_uiData]	// QImode move
000095AD 12 95 40 02        		R2=[_uiData+1]	// QImode move
000095AF 41 96              		R3=1	// QImode move
000095B0 C8 D6              		[SP--]=R3	// QImode move
000095B1 90 D4              		push R1,R2 to [sp]	// pushhi
000095B2 40 F0 1F 9A        		call __rshu2	// call with return value
000095B4 43 00              		SP = SP + 3	//SP
                            		//split R3, R1
000095B5 01 97              		R3=R1	// QImode move
000095B6 02 99              		R4=R2	// QImode move
000095B7 08 92              		R1=[bp+8]	// QImode move
000095B8 03 A3              		R1|=R3
000095B9 09 94              		R2=[bp+9]	// QImode move
000095BA 04 A5              		R2|=R4
000095BB 90 D4              		push R1,R2 to [sp]	// pushhi
000095BC 40 F0 79 9A        		call __cvi2f2	// call with return value
000095BE 42 00              		SP = SP + 2	//SP
000095BF 06 D2              		[bp+6]=R1	// HFmode [BP+#IM6]=RS
000095C0 07 D4              		[bp+7]=R2
000095C1 06 92              		R1=[bp+6]	// HFmode RD=[BP+#IM6]
000095C2 07 94              		R2=[bp+7]
000095C3 90 D4              		push R1,R2 to [sp]	// pushhf
000095C4 06 96              		R3=[bp+6]	// HFmode RD=[BP+#IM6]
000095C5 07 98              		R4=[bp+7]
000095C6 90 D8              		push R3,R4 to [sp]	// pushhf
000095C7 40 F0 A0 97        		call __addf2	// call with return value
000095C9 44 00              		SP = SP + 4	//SP
000095CA 06 D2              		[bp+6]=R1	// HFmode [BP+#IM6]=RS
000095CB 07 D4              		[bp+7]=R2
                            	L14:
000095CC 09 93 00 C0        		R1=49152	// HFmode immediate to register move
000095CE 0A 95 7F 47        		R2=18303
000095D0 90 D4              		push R1,R2 to [sp]	// pushhf
000095D1 06 92              		R1=[bp+6]	// HFmode RD=[BP+#IM6]
000095D2 07 94              		R2=[bp+7]
000095D3 90 D4              		push R1,R2 to [sp]	// pushhf
000095D4 40 F0 6F 98        		call __divf2	// call with return value
000095D6 44 00              		SP = SP + 4	//SP
000095D7 19 D3 42 02        		[_fVoltage]=R1	// HFmode [Label]=RS
000095D9 1A D5 43 02        		[_fVoltage+1]=R2
000007C8                    	.debug
000007C8 2E 00 73 00        		.dw '.stabn 0x44,0,35,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         2C 00 00 00
         00 00      
000007DB A8 00 00 00        		.dd LM26-_ADtoVoltage
000007DD 0D 00 0A 00        		.dw 0x0d,0x0a
000095DB                    	.code
                            	LM26:
000095DB 11 93 42 02        		R1=[_fVoltage]	// HFmode RD=[Label]
000095DD 12 95 43 02        		R2=[_fVoltage+1]
000095DF 40 96              		R3=0	// HFmode immediate to register move
000095E0 0C 99 20 40        		R4=16416
000095E2 90 D8              		push R3,R4 to [sp]	// pushhf
000095E3 90 D4              		push R1,R2 to [sp]	// pushhf
000095E4 40 F0 CF 96        		call __mulf2	// call with return value
000095E6 44 00              		SP = SP + 4	//SP
000095E7 19 D3 42 02        		[_fVoltage]=R1	// HFmode [Label]=RS
000095E9 1A D5 43 02        		[_fVoltage+1]=R2
000007DF                    	.debug
000007DF 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
000007F2 B8 00 00 00        		.dd LM27-_ADtoVoltage
000007F4 0D 00 0A 00        		.dw 0x0d,0x0a
000095EB                    	.code
                            	LM27:
000095EB 41 92              		R1=1	// QImode move
000095EC 19 D3 12 70        		[28690]=R1	// QImode move
000007F6                    	.debug
000007F6 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
00000809 BB 00 00 00        		.dd LM28-_ADtoVoltage
0000080B 0D 00 0A 00        		.dw 0x0d,0x0a
000095EE                    	.code
                            	LM28:
000095EE 13 97 42 02        		R3=[_fVoltage]	// HFmode RD=[Label]
000095F0 14 99 43 02        		R4=[_fVoltage+1]
000095F2 03 93              		R1=R3	// HFmode register to register move _4
000095F3 04 95              		R2=R4
000095F4 0F 9F F6 95        		pc=L8	// Indirect jump
0000080D                    	.debug
0000080D 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
00000820 C3 00 00 00        		.dd LM29-_ADtoVoltage
00000822 0D 00 0A 00        		.dw 0x0d,0x0a
000095F6                    	.code
                            	LM29:
00000824                    	.debug
00000824 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
00000837 C3 00 00 00        		.dd LM30-_ADtoVoltage
00000839 0D 00 0A 00        		.dw 0x0d,0x0a
000095F6                    	.code
                            	LM30:
                            	L8:
                            	
000095F6 4C 00              		sp+=12
000095F7 88 98              		pop bp from [sp]
000095F8 90 9A              		retf
                            		.endp	// end of ADtoVoltage
                            	
0000083B                    	.debug
0000083B 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000844 C6 00 00 00        		.dd LME3-_ADtoVoltage
00000846 0D 00 0A 00        		.dw 0x0d,0x0a
000095F9                    	.code
                            	LME3:
0000023F                    	.iram
                            	.public _uiData
                            	_uiData:
0000023F 00 00 00 00        		.dw 2 dup(0)
00000241                    	.iram
                            	.public _i
                            	_i:
00000241 00 00              		.dw 0
00000242                    	.iram
                            	.public _fVoltage
                            	_fVoltage:
00000242 00 00 00 00        		.dw 2 dup(0)
                            	.external __mulf2
                            	.external __divf2
                            	.external __addf2
                            	.external __cvi2f2
                            	.external __rshu2
                            		.end
0 error(s), 0 warning(s).


