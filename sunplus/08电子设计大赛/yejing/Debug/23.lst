Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\PROGRA~1\Sunplus\UNSPID~1.0\cc1.exe C:\DOCUME~1\ZHANGZ~1.YSU\LOCALS~1\Temp\cccZbaaa.i -fkeep-inline-functions -quiet -dumpbase 23.c -mglobal-var-iram -gstabs -Wall -o .\Debug/23.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "F:/abc/kkk/yejing/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 61 00
         62 00 63 00
         2F 00 6B 00
         6B 00 6B 00
         2F 00 79 00
         65 00 6A 00
         69 00 6E 00
         67 00 2F 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008032                    	.code
0000002B                    	.debug
0000002B 2E 00 73 00        		.dw '.stabs "F:/abc/kkk/yejing/23.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 61 00
         62 00 63 00
         2F 00 6B 00
         6B 00 6B 00
         2F 00 79 00
         65 00 6A 00
         69 00 6E 00
         67 00 2F 00
         32 00 33 00
         2E 00 63 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008032                    	.code
00008032                    	.code
                            	Ltext0:
0000005A                    	.debug
0000005A 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
00000086                    	.debug
00000086 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
000000AC                    	.debug
000000AC 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008032                    	.CODE
000000E7                    	.debug
000000E7 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
00000117                    	.debug
00000117 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
00000151                    	.debug
00000151 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
00000191                    	.debug
00000191 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008032                    	.CODE
000001D0                    	.debug
000001D0 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
00000202                    	.debug
00000202 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
00000238                    	.debug
00000238 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
0000026E                    	.debug
0000026E 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008032                    	.CODE
000002A1                    	.debug
000002A1 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
000002C7                    	.debug
000002C7 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008032                    	.CODE
000002EE                    	.debug
000002EE 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
0000031A                    	.debug
0000031A 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008032                    	.CODE
0000035B                    	.debug
0000035B 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008032                    	.CODE
0000038A                    	.debug
0000038A 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
000003BA                    	.debug
000003BA 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008032                    	.CODE
000003EF                    	.debug
000003EF 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008032                    	.CODE
00008032                    	.code
0000040F                    	.debug
0000040F 2E 00 73 00        		.dw '.stabs "delay:F19",36,0,0,',0,0,offset _delay,seg _delay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 65 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008032                    	.CODE
                            	.public _delay
                            	_delay:	.proc
0000042F                    	.debug
0000042F 2E 00 73 00        		.dw '.stabn 0x44,0,10,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         2C 00 00 00
         00 00      
00000442 00 00 00 00        		.dd LM1-_delay
00000444 0D 00 0A 00        		.dw 0x0d,0x0a
00008032                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008032 88 DA              		push bp to [sp]
00008033 41 20              		sp-=1
00008034 08 0B 01 00        		bp=sp+1
                            	
00008036 0D 03 04 00        		R1=BP+4
00000446                    	.debug
00000446 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
00000459 06 00 00 00        		.dd LM2-_delay
0000045B 0D 00 0A 00        		.dw 0x0d,0x0a
00008038                    	.code
                            	LM2:
                            	LBB2:
0000045D                    	.debug
0000045D 2E 00 73 00        		.dw '.stabn 0x44,0,12,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         2C 00 00 00
         00 00      
00000470 06 00 00 00        		.dd LM3-_delay
00000472 0D 00 0A 00        		.dw 0x0d,0x0a
00008038                    	.code
                            	LM3:
                            	L3:
00008038 01 95              		R2=R1	// QImode move
00008039 C2 96              		R3=[R2]	// QImode move
0000803A 0B 05 FF FF        		R2=R3+(-1)
0000803C 02 97              		R3=R2	// QImode move
0000803D 01 95              		R2=R1	// QImode move
0000803E C2 D6              		[R2]=R3	// QImode move
0000803F 0B 47 FF FF        		CMP R3,(-1)	// QImode compare
00008041 04 4E 01 EE        		NSJNZ L5	//QImode NE
         00 EE      
00008044 0F 9F 5B 80        		pc=L4	// Indirect jump
                            	L5:
00000474                    	.debug
00000474 2E 00 73 00        		.dw '.stabn 0x44,0,14,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         2C 00 00 00
         00 00      
00000487 14 00 00 00        		.dd LM4-_delay
00000489 0D 00 0A 00        		.dw 0x0d,0x0a
00008046                    	.code
                            	LM4:
00008046 40 94              		R2=0	// QImode move
00008047 C5 D4              		[BP]=R2	// QImode move
                            	L6:
00008048 C5 94              		R2=[BP]	// QImode move
00008049 0A 45 7C 00        		CMP R2,124	// QImode compare
0000804B 04 8E 01 EE        		NSJNA L9	//QImode LEU
         00 EE      
0000804E 0F 9F 59 80        		pc=L7	// Indirect jump
                            	L9:
0000048B                    	.debug
0000048B 2E 00 73 00        		.dw '.stabn 0x44,0,15,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         2C 00 00 00
         00 00      
0000049E 1E 00 00 00        		.dd LM5-_delay
000004A0 0D 00 0A 00        		.dw 0x0d,0x0a
00008050                    	.code
                            	LM5:
00008050 41 94              		R2=1	// QImode move
00008051 1A D5 12 70        		[28690]=R2	// QImode move
000004A2                    	.debug
000004A2 2E 00 73 00        		.dw '.stabn 0x44,0,14,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         2C 00 00 00
         00 00      
000004B5 21 00 00 00        		.dd LM6-_delay
000004B7 0D 00 0A 00        		.dw 0x0d,0x0a
00008053                    	.code
                            	LM6:
                            	L8:
00008053 C5 94              		R2=[BP]	// QImode move
00008054 0A 07 01 00        		R3=R2+1
00008056 C5 D6              		[BP]=R3	// QImode move
00008057 0F 9F 48 80        		pc=L6	// Indirect jump
                            	L7:
000004B9                    	.debug
000004B9 2E 00 73 00        		.dw '.stabn 0x44,0,16,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         2C 00 00 00
         00 00      
000004CC 27 00 00 00        		.dd LM7-_delay
000004CE 0D 00 0A 00        		.dw 0x0d,0x0a
00008059                    	.code
                            	LM7:
00008059 0F 9F 38 80        		pc=L3	// Indirect jump
                            	L4:
000004D0                    	.debug
000004D0 2E 00 73 00        		.dw '.stabn 0x44,0,17,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         2C 00 00 00
         00 00      
000004E3 29 00 00 00        		.dd LM8-_delay
000004E5 0D 00 0A 00        		.dw 0x0d,0x0a
0000805B                    	.code
                            	LM8:
                            	LBE2:
000004E7                    	.debug
000004E7 2E 00 73 00        		.dw '.stabn 0x44,0,17,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         2C 00 00 00
         00 00      
000004FA 29 00 00 00        		.dd LM9-_delay
000004FC 0D 00 0A 00        		.dw 0x0d,0x0a
0000805B                    	.code
                            	LM9:
                            	L2:
                            	
0000805B 41 00              		sp+=1
0000805C 88 98              		pop bp from [sp]
0000805D 90 9A              		retf
                            		.endp	// end of delay
                            	
000004FE                    	.debug
000004FE 2E 00 73 00        		.dw '.stabs "t:p4",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 3A 00
         70 00 34 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
0000805E                    	.CODE
00000517                    	.debug
00000517 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000529 06 00 00 00        		.dd LBB2-_delay
0000052B 0D 00 0A 00        		.dw 0x0d,0x0a
0000805E                    	.code
0000052D                    	.debug
0000052D 2E 00 73 00        		.dw '.stabs "i:11",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000805E                    	.CODE
00000546                    	.debug
00000546 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000558 29 00 00 00        		.dd LBE2-_delay
0000055A 0D 00 0A 00        		.dw 0x0d,0x0a
0000805E                    	.code
0000055C                    	.debug
0000055C 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000565 2C 00 00 00        		.dd LME1-_delay
00000567 0D 00 0A 00        		.dw 0x0d,0x0a
0000805E                    	.code
                            	LME1:
0000805E                    	.code
00000569                    	.debug
00000569 2E 00 73 00        		.dw '.stabs "busy:F1",36,0,0,',0,0,offset _busy,seg _busy,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         62 00 75 00
         73 00 79 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         2C 00 00 00
         0D 00 0A 00
0000805E                    	.CODE
                            	.public _busy
                            	_busy:	.proc
00000587                    	.debug
00000587 2E 00 73 00        		.dw '.stabn 0x44,0,21,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         2C 00 00 00
         00 00      
0000059A 00 00 00 00        		.dd LM10-_busy
0000059C 0D 00 0A 00        		.dw 0x0d,0x0a
0000805E                    	.code
                            	LM10:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
0000805E 88 DA              		push bp to [sp]
0000805F 08 0B 01 00        		bp=sp+1
                            	
00008061 0D 05 03 00        		R2=BP+3
0000059E                    	.debug
0000059E 2E 00 73 00        		.dw '.stabn 0x44,0,22,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         2C 00 00 00
         00 00      
000005B1 05 00 00 00        		.dd LM11-_busy
000005B3 0D 00 0A 00        		.dw 0x0d,0x0a
00008063                    	.code
                            	LM11:
00008063 11 93 00 70        		R1=[28672]	// QImode move
00008065 09 B7 FE FF        		R3=R1&(-2)
00008067 1B D7 00 70        		[28672]=R3	// QImode move
000005B5                    	.debug
000005B5 2E 00 73 00        		.dw '.stabn 0x44,0,23,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         2C 00 00 00
         00 00      
000005C8 0B 00 00 00        		.dd LM12-_busy
000005CA 0D 00 0A 00        		.dw 0x0d,0x0a
00008069                    	.code
                            	LM12:
00008069 11 93 00 70        		R1=[28672]	// QImode move
0000806B 09 A7 02 00        		R3=R1|2
0000806D 1B D7 00 70        		[28672]=R3	// QImode move
000005CC                    	.debug
000005CC 2E 00 73 00        		.dw '.stabn 0x44,0,24,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         2C 00 00 00
         00 00      
000005DF 11 00 00 00        		.dd LM13-_busy
000005E1 0D 00 0A 00        		.dw 0x0d,0x0a
0000806F                    	.code
                            	LM13:
                            	// GCC inline ASM start
0000806F 00 EE              		NOP
                            	// GCC inline ASM end
000005E3                    	.debug
000005E3 2E 00 73 00        		.dw '.stabn 0x44,0,25,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         2C 00 00 00
         00 00      
000005F6 12 00 00 00        		.dd LM14-_busy
000005F8 0D 00 0A 00        		.dw 0x0d,0x0a
00008070                    	.code
                            	LM14:
00008070 11 93 00 70        		R1=[28672]	// QImode move
00008072 09 A7 04 00        		R3=R1|4
00008074 1B D7 00 70        		[28672]=R3	// QImode move
000005FA                    	.debug
000005FA 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
0000060D 18 00 00 00        		.dd LM15-_busy
0000060F 0D 00 0A 00        		.dw 0x0d,0x0a
00008076                    	.code
                            	LM15:
                            	// GCC inline ASM start
00008076 00 EE              		NOP
                            	// GCC inline ASM end
00000611                    	.debug
00000611 2E 00 73 00        		.dw '.stabn 0x44,0,27,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         2C 00 00 00
         00 00      
00000624 19 00 00 00        		.dd LM16-_busy
00000626 0D 00 0A 00        		.dw 0x0d,0x0a
00008077                    	.code
                            	LM16:
00008077 11 93 00 70        		R1=[28672]	// QImode move
00008079 09 B7 FB FF        		R3=R1&(-5)
0000807B 1B D7 00 70        		[28672]=R3	// QImode move
00000628                    	.debug
00000628 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
0000063B 1F 00 00 00        		.dd LM17-_busy
0000063D 0D 00 0A 00        		.dw 0x0d,0x0a
0000807D                    	.code
                            	LM17:
0000807D 11 93 00 70        		R1=[28672]	// QImode move
0000807F 79 97              		R3=R1 lsr 4
00008080 7B 97              		R3=R3 lsr 4
00008081 03 93              		R1=R3	// QImode move
00008082 0F 9F 84 80        		pc=L12	// Indirect jump
0000063F                    	.debug
0000063F 2E 00 73 00        		.dw '.stabn 0x44,0,29,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         2C 00 00 00
         00 00      
00000652 26 00 00 00        		.dd LM18-_busy
00000654 0D 00 0A 00        		.dw 0x0d,0x0a
00008084                    	.code
                            	LM18:
00000656                    	.debug
00000656 2E 00 73 00        		.dw '.stabn 0x44,0,29,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         2C 00 00 00
         00 00      
00000669 26 00 00 00        		.dd LM19-_busy
0000066B 0D 00 0A 00        		.dw 0x0d,0x0a
00008084                    	.code
                            	LM19:
                            	L12:
                            	
00008084 88 98              		pop bp from [sp]
00008085 90 9A              		retf
                            		.endp	// end of busy
                            	
0000066D                    	.debug
0000066D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000676 28 00 00 00        		.dd LME2-_busy
00000678 0D 00 0A 00        		.dw 0x0d,0x0a
00008086                    	.code
                            	LME2:
00008086                    	.code
0000067A                    	.debug
0000067A 2E 00 73 00        		.dw '.stabs "write_cmd:F19",36,0,0,',0,0,offset _write_cmd,seg _write_cmd,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 5F 00
         63 00 6D 00
         64 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         54 00 00 00
         0D 00 0A 00
00008086                    	.CODE
                            	.public _write_cmd
                            	_write_cmd:	.proc
0000069E                    	.debug
0000069E 2E 00 73 00        		.dw '.stabn 0x44,0,31,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         2C 00 00 00
         00 00      
000006B1 00 00 00 00        		.dd LM20-_write_cmd
000006B3 0D 00 0A 00        		.dw 0x0d,0x0a
00008086                    	.code
                            	LM20:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008086 88 DA              		push bp to [sp]
00008087 41 20              		sp-=1
00008088 08 0B 01 00        		bp=sp+1
                            	
0000808A 0D 03 04 00        		R1=BP+4
0000808C C5 D2              		[BP]=R1	// QImode move
000006B5                    	.debug
000006B5 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
000006C8 07 00 00 00        		.dd LM21-_write_cmd
000006CA 0D 00 0A 00        		.dw 0x0d,0x0a
0000808D                    	.code
                            	LM21:
0000808D 11 93 00 70        		R1=[28672]	// QImode move
0000808F 09 B5 FB FF        		R2=R1&(-5)
00008091 1A D5 00 70        		[28672]=R2	// QImode move
000006CC                    	.debug
000006CC 2E 00 73 00        		.dw '.stabn 0x44,0,33,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         2C 00 00 00
         00 00      
000006DF 0D 00 00 00        		.dd LM22-_write_cmd
000006E1 0D 00 0A 00        		.dw 0x0d,0x0a
00008093                    	.code
                            	LM22:
                            	// GCC inline ASM start
00008093 00 EE              		NOP
                            	// GCC inline ASM end
000006E3                    	.debug
000006E3 2E 00 73 00        		.dw '.stabn 0x44,0,34,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         2C 00 00 00
         00 00      
000006F6 0E 00 00 00        		.dd LM23-_write_cmd
000006F8 0D 00 0A 00        		.dw 0x0d,0x0a
00008094                    	.code
                            	LM23:
00008094 11 93 00 70        		R1=[28672]	// QImode move
00008096 09 B5 FE FF        		R2=R1&(-2)
00008098 1A D5 00 70        		[28672]=R2	// QImode move
000006FA                    	.debug
000006FA 2E 00 73 00        		.dw '.stabn 0x44,0,35,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         2C 00 00 00
         00 00      
0000070D 14 00 00 00        		.dd LM24-_write_cmd
0000070F 0D 00 0A 00        		.dw 0x0d,0x0a
0000809A                    	.code
                            	LM24:
                            	// GCC inline ASM start
0000809A 00 EE              		NOP
                            	// GCC inline ASM end
00000711                    	.debug
00000711 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
00000724 15 00 00 00        		.dd LM25-_write_cmd
00000726 0D 00 0A 00        		.dw 0x0d,0x0a
0000809B                    	.code
                            	LM25:
0000809B 11 93 00 70        		R1=[28672]	// QImode move
0000809D 09 B5 FD FF        		R2=R1&(-3)
0000809F 1A D5 00 70        		[28672]=R2	// QImode move
00000728                    	.debug
00000728 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
0000073B 1B 00 00 00        		.dd LM26-_write_cmd
0000073D 0D 00 0A 00        		.dw 0x0d,0x0a
000080A1                    	.code
                            	LM26:
                            	// GCC inline ASM start
000080A1 00 EE              		NOP
                            	// GCC inline ASM end
0000073F                    	.debug
0000073F 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
00000752 1C 00 00 00        		.dd LM27-_write_cmd
00000754 0D 00 0A 00        		.dw 0x0d,0x0a
000080A2                    	.code
                            	LM27:
000080A2 11 93 00 70        		R1=[28672]	// QImode move
000080A4 09 B5 FF 00        		R2=R1&255
000080A6 1A D5 00 70        		[28672]=R2	// QImode move
00000756                    	.debug
00000756 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
00000769 22 00 00 00        		.dd LM28-_write_cmd
0000076B 0D 00 0A 00        		.dw 0x0d,0x0a
000080A8                    	.code
                            	LM28:
000080A8 C5 96              		R3=[BP]	// QImode move
000080A9 C3 94              		R2=[R3]	// QImode move
000080AA 5A 93              		R1=R2 lsl 4
000080AB 59 93              		R1=R1 lsl 4
000080AC 12 95 00 70        		R2=[28672]	// QImode move
000080AE 02 97              		R3=R2	// QImode move
000080AF 01 A7              		R3|=R1
000080B0 03 93              		R1=R3	// QImode move
000080B1 19 D3 00 70        		[28672]=R1	// QImode move
0000076D                    	.debug
0000076D 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
00000780 2D 00 00 00        		.dd LM29-_write_cmd
00000782 0D 00 0A 00        		.dw 0x0d,0x0a
000080B3                    	.code
                            	LM29:
                            	// GCC inline ASM start
000080B3 00 EE              		NOP
                            	// GCC inline ASM end
00000784                    	.debug
00000784 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
00000797 2E 00 00 00        		.dd LM30-_write_cmd
00000799 0D 00 0A 00        		.dw 0x0d,0x0a
000080B4                    	.code
                            	LM30:
000080B4 11 93 00 70        		R1=[28672]	// QImode move
000080B6 09 A5 04 00        		R2=R1|4
000080B8 1A D5 00 70        		[28672]=R2	// QImode move
0000079B                    	.debug
0000079B 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
000007AE 34 00 00 00        		.dd LM31-_write_cmd
000007B0 0D 00 0A 00        		.dw 0x0d,0x0a
000080BA                    	.code
                            	LM31:
                            	// GCC inline ASM start
000080BA 00 EE              		NOP
                            	// GCC inline ASM end
000007B2                    	.debug
000007B2 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
000007C5 35 00 00 00        		.dd LM32-_write_cmd
000007C7 0D 00 0A 00        		.dw 0x0d,0x0a
000080BB                    	.code
                            	LM32:
000080BB 11 93 00 70        		R1=[28672]	// QImode move
000080BD 09 B5 FB FF        		R2=R1&(-5)
000080BF 1A D5 00 70        		[28672]=R2	// QImode move
000007C9                    	.debug
000007C9 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
000007DC 3B 00 00 00        		.dd LM33-_write_cmd
000007DE 0D 00 0A 00        		.dw 0x0d,0x0a
000080C1                    	.code
                            	LM33:
                            	// GCC inline ASM start
000080C1 00 EE              		NOP
                            	// GCC inline ASM end
000007E0                    	.debug
000007E0 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
000007F3 3C 00 00 00        		.dd LM34-_write_cmd
000007F5 0D 00 0A 00        		.dw 0x0d,0x0a
000080C2                    	.code
                            	LM34:
000080C2 40 F0 5E 80        		call _busy	// call with return value
000007F7                    	.debug
000007F7 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
0000080A 3E 00 00 00        		.dd LM35-_write_cmd
0000080C 0D 00 0A 00        		.dw 0x0d,0x0a
000080C4                    	.code
                            	LM35:
0000080E                    	.debug
0000080E 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
00000821 3E 00 00 00        		.dd LM36-_write_cmd
00000823 0D 00 0A 00        		.dw 0x0d,0x0a
000080C4                    	.code
                            	LM36:
                            	L13:
                            	
000080C4 41 00              		sp+=1
000080C5 88 98              		pop bp from [sp]
000080C6 90 9A              		retf
                            		.endp	// end of write_cmd
                            	
00000825                    	.debug
00000825 2E 00 73 00        		.dw '.stabs "cmd:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6D 00
         64 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
000080C7                    	.CODE
00000840                    	.debug
00000840 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000849 41 00 00 00        		.dd LME3-_write_cmd
0000084B 0D 00 0A 00        		.dw 0x0d,0x0a
000080C7                    	.code
                            	LME3:
000080C7                    	.code
0000084D                    	.debug
0000084D 2E 00 73 00        		.dw '.stabs "write_dat:F19",36,0,0,',0,0,offset _write_dat,seg _write_dat,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 5F 00
         64 00 61 00
         74 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         95 00 00 00
         0D 00 0A 00
000080C7                    	.CODE
                            	.public _write_dat
                            	_write_dat:	.proc
00000871                    	.debug
00000871 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
00000884 00 00 00 00        		.dd LM37-_write_dat
00000886 0D 00 0A 00        		.dw 0x0d,0x0a
000080C7                    	.code
                            	LM37:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000080C7 88 DA              		push bp to [sp]
000080C8 41 20              		sp-=1
000080C9 08 0B 01 00        		bp=sp+1
                            	
000080CB 0D 03 04 00        		R1=BP+4
000080CD C5 D2              		[BP]=R1	// QImode move
00000888                    	.debug
00000888 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
0000089B 07 00 00 00        		.dd LM38-_write_dat
0000089D 0D 00 0A 00        		.dw 0x0d,0x0a
000080CE                    	.code
                            	LM38:
000080CE 11 93 00 70        		R1=[28672]	// QImode move
000080D0 09 B5 FB FF        		R2=R1&(-5)
000080D2 1A D5 00 70        		[28672]=R2	// QImode move
0000089F                    	.debug
0000089F 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
000008B2 0D 00 00 00        		.dd LM39-_write_dat
000008B4 0D 00 0A 00        		.dw 0x0d,0x0a
000080D4                    	.code
                            	LM39:
                            	// GCC inline ASM start
000080D4 00 EE              		NOP
                            	// GCC inline ASM end
000008B6                    	.debug
000008B6 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
000008C9 0E 00 00 00        		.dd LM40-_write_dat
000008CB 0D 00 0A 00        		.dw 0x0d,0x0a
000080D5                    	.code
                            	LM40:
000080D5 11 93 00 70        		R1=[28672]	// QImode move
000080D7 09 A5 01 00        		R2=R1|1
000080D9 1A D5 00 70        		[28672]=R2	// QImode move
000008CD                    	.debug
000008CD 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
000008E0 14 00 00 00        		.dd LM41-_write_dat
000008E2 0D 00 0A 00        		.dw 0x0d,0x0a
000080DB                    	.code
                            	LM41:
                            	// GCC inline ASM start
000080DB 00 EE              		NOP
                            	// GCC inline ASM end
000008E4                    	.debug
000008E4 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
000008F7 15 00 00 00        		.dd LM42-_write_dat
000008F9 0D 00 0A 00        		.dw 0x0d,0x0a
000080DC                    	.code
                            	LM42:
000080DC 11 93 00 70        		R1=[28672]	// QImode move
000080DE 09 B5 FD FF        		R2=R1&(-3)
000080E0 1A D5 00 70        		[28672]=R2	// QImode move
000008FB                    	.debug
000008FB 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
0000090E 1B 00 00 00        		.dd LM43-_write_dat
00000910 0D 00 0A 00        		.dw 0x0d,0x0a
000080E2                    	.code
                            	LM43:
                            	// GCC inline ASM start
000080E2 00 EE              		NOP
                            	// GCC inline ASM end
00000912                    	.debug
00000912 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
00000925 1C 00 00 00        		.dd LM44-_write_dat
00000927 0D 00 0A 00        		.dw 0x0d,0x0a
000080E3                    	.code
                            	LM44:
000080E3 11 93 00 70        		R1=[28672]	// QImode move
000080E5 09 B5 FF 00        		R2=R1&255
000080E7 1A D5 00 70        		[28672]=R2	// QImode move
00000929                    	.debug
00000929 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
0000093C 22 00 00 00        		.dd LM45-_write_dat
0000093E 0D 00 0A 00        		.dw 0x0d,0x0a
000080E9                    	.code
                            	LM45:
000080E9 C5 96              		R3=[BP]	// QImode move
000080EA C3 94              		R2=[R3]	// QImode move
000080EB 5A 93              		R1=R2 lsl 4
000080EC 59 93              		R1=R1 lsl 4
000080ED 12 95 00 70        		R2=[28672]	// QImode move
000080EF 02 97              		R3=R2	// QImode move
000080F0 01 A7              		R3|=R1
000080F1 03 93              		R1=R3	// QImode move
000080F2 19 D3 00 70        		[28672]=R1	// QImode move
00000940                    	.debug
00000940 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
00000953 2D 00 00 00        		.dd LM46-_write_dat
00000955 0D 00 0A 00        		.dw 0x0d,0x0a
000080F4                    	.code
                            	LM46:
                            	// GCC inline ASM start
000080F4 00 EE              		NOP
                            	// GCC inline ASM end
00000957                    	.debug
00000957 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
0000096A 2E 00 00 00        		.dd LM47-_write_dat
0000096C 0D 00 0A 00        		.dw 0x0d,0x0a
000080F5                    	.code
                            	LM47:
000080F5 11 93 00 70        		R1=[28672]	// QImode move
000080F7 09 A5 04 00        		R2=R1|4
000080F9 1A D5 00 70        		[28672]=R2	// QImode move
0000096E                    	.debug
0000096E 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
00000981 34 00 00 00        		.dd LM48-_write_dat
00000983 0D 00 0A 00        		.dw 0x0d,0x0a
000080FB                    	.code
                            	LM48:
                            	// GCC inline ASM start
000080FB 00 EE              		NOP
                            	// GCC inline ASM end
00000985                    	.debug
00000985 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
00000998 35 00 00 00        		.dd LM49-_write_dat
0000099A 0D 00 0A 00        		.dw 0x0d,0x0a
000080FC                    	.code
                            	LM49:
000080FC 11 93 00 70        		R1=[28672]	// QImode move
000080FE 09 B5 FB FF        		R2=R1&(-5)
00008100 1A D5 00 70        		[28672]=R2	// QImode move
0000099C                    	.debug
0000099C 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
000009AF 3B 00 00 00        		.dd LM50-_write_dat
000009B1 0D 00 0A 00        		.dw 0x0d,0x0a
00008102                    	.code
                            	LM50:
                            	// GCC inline ASM start
00008102 00 EE              		NOP
                            	// GCC inline ASM end
000009B3                    	.debug
000009B3 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
000009C6 3C 00 00 00        		.dd LM51-_write_dat
000009C8 0D 00 0A 00        		.dw 0x0d,0x0a
00008103                    	.code
                            	LM51:
00008103 40 F0 5E 80        		call _busy	// call with return value
000009CA                    	.debug
000009CA 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
000009DD 3E 00 00 00        		.dd LM52-_write_dat
000009DF 0D 00 0A 00        		.dw 0x0d,0x0a
00008105                    	.code
                            	LM52:
000009E1                    	.debug
000009E1 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
000009F4 3E 00 00 00        		.dd LM53-_write_dat
000009F6 0D 00 0A 00        		.dw 0x0d,0x0a
00008105                    	.code
                            	LM53:
                            	L14:
                            	
00008105 41 00              		sp+=1
00008106 88 98              		pop bp from [sp]
00008107 90 9A              		retf
                            		.endp	// end of write_dat
                            	
000009F8                    	.debug
000009F8 2E 00 73 00        		.dw '.stabs "dat:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         74 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
00008108                    	.CODE
00000A13                    	.debug
00000A13 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000A1C 41 00 00 00        		.dd LME4-_write_dat
00000A1E 0D 00 0A 00        		.dw 0x0d,0x0a
00008108                    	.code
                            	LME4:
00008108                    	.code
00000A20                    	.debug
00000A20 2E 00 73 00        		.dw '.stabs "show:F19",36,0,0,',0,0,offset _show,seg _show,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 77 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 D6 00
         00 00 0D 00
         0A 00      
00008108                    	.CODE
                            	.public _show
                            	_show:	.proc
00000A3F                    	.debug
00000A3F 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
00000A52 00 00 00 00        		.dd LM54-_show
00000A54 0D 00 0A 00        		.dw 0x0d,0x0a
00008108                    	.code
                            	LM54:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008108 88 DA              		push bp to [sp]
00008109 41 20              		sp-=1
0000810A 08 0B 01 00        		bp=sp+1
                            	
0000810C 0D 03 04 00        		R1=BP+4
0000810E C5 D2              		[BP]=R1	// QImode move
00000A56                    	.debug
00000A56 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
00000A69 07 00 00 00        		.dd LM55-_show
00000A6B 0D 00 0A 00        		.dw 0x0d,0x0a
0000810F                    	.code
                            	LM55:
                            	L16:
0000810F C5 94              		R2=[BP]	// QImode move
00008110 C2 92              		R1=[R2]	// QImode move
00008111 01 97              		R3=R1	// QImode move
00008112 C3 94              		R2=[R3]	// QImode move
00008113 40 44              		CMP R2,0	// QImode test
00008114 04 4E 01 EE        		NSJNZ L18	//QImode NE
         00 EE      
00008117 0F 9F 2C 81        		pc=L17	// Indirect jump
                            	L18:
00000A6D                    	.debug
00000A6D 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
00000A80 11 00 00 00        		.dd LM56-_show
00000A82 0D 00 0A 00        		.dw 0x0d,0x0a
00008119                    	.code
                            	LM56:
00008119 41 92              		R1=1	// QImode move
0000811A 19 D3 12 70        		[28690]=R1	// QImode move
00000A84                    	.debug
00000A84 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00000A97 14 00 00 00        		.dd LM57-_show
00000A99 0D 00 0A 00        		.dw 0x0d,0x0a
0000811C                    	.code
                            	LM57:
0000811C C5 94              		R2=[BP]	// QImode move
0000811D C2 92              		R1=[R2]	// QImode move
0000811E 01 97              		R3=R1	// QImode move
0000811F C3 94              		R2=[R3]	// QImode move
00008120 C8 D4              		[SP--]=R2	// QImode move
00008121 40 F0 C7 80        		call _write_dat	// call without return value
00008123 41 00              		SP = SP + 1	//SP
00000A9B                    	.debug
00000A9B 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00000AAE 1C 00 00 00        		.dd LM58-_show
00000AB0 0D 00 0A 00        		.dw 0x0d,0x0a
00008124                    	.code
                            	LM58:
00008124 C5 94              		R2=[BP]	// QImode move
00008125 C2 92              		R1=[R2]	// QImode move
00008126 09 05 01 00        		R2=R1+1
00008128 C5 96              		R3=[BP]	// QImode move
00008129 C3 D4              		[R3]=R2	// QImode move
00000AB2                    	.debug
00000AB2 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
00000AC5 22 00 00 00        		.dd LM59-_show
00000AC7 0D 00 0A 00        		.dw 0x0d,0x0a
0000812A                    	.code
                            	LM59:
0000812A 0F 9F 0F 81        		pc=L16	// Indirect jump
                            	L17:
00000AC9                    	.debug
00000AC9 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
00000ADC 24 00 00 00        		.dd LM60-_show
00000ADE 0D 00 0A 00        		.dw 0x0d,0x0a
0000812C                    	.code
                            	LM60:
00000AE0                    	.debug
00000AE0 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
00000AF3 24 00 00 00        		.dd LM61-_show
00000AF5 0D 00 0A 00        		.dw 0x0d,0x0a
0000812C                    	.code
                            	LM61:
                            	L15:
                            	
0000812C 41 00              		sp+=1
0000812D 88 98              		pop bp from [sp]
0000812E 90 9A              		retf
                            		.endp	// end of show
                            	
00000AF7                    	.debug
00000AF7 2E 00 73 00        		.dw '.stabs "str:p20=*2",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 74 00
         72 00 3A 00
         70 00 32 00
         30 00 3D 00
         2A 00 32 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
0000812F                    	.CODE
00000B16                    	.debug
00000B16 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000B1F 27 00 00 00        		.dd LME5-_show
00000B21 0D 00 0A 00        		.dw 0x0d,0x0a
0000812F                    	.code
                            	LME5:
0000812F                    	.code
00000B23                    	.debug
00000B23 2E 00 73 00        		.dw '.stabs "goxy:F19",36,0,0,',0,0,offset _goxy,seg _goxy,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 6F 00
         78 00 79 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 FD 00
         00 00 0D 00
         0A 00      
0000812F                    	.CODE
                            	.public _goxy
                            	_goxy:	.proc
00000B42                    	.debug
00000B42 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
00000B55 00 00 00 00        		.dd LM62-_goxy
00000B57 0D 00 0A 00        		.dw 0x0d,0x0a
0000812F                    	.code
                            	LM62:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000812F 88 DA              		push bp to [sp]
00008130 41 20              		sp-=1
00008131 08 0B 01 00        		bp=sp+1
                            	
00008133 0D 03 04 00        		R1=BP+4
00008135 C5 D2              		[BP]=R1	// QImode move
00000B59                    	.debug
00000B59 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
00000B6C 07 00 00 00        		.dd LM63-_goxy
00000B6E 0D 00 0A 00        		.dw 0x0d,0x0a
00008136                    	.code
                            	LM63:
00008136 C5 94              		R2=[BP]	// QImode move
00008137 C2 92              		R1=[R2]	// QImode move
00008138 41 42              		CMP R1,1	// QImode compare
00008139 0E 4E 01 EE        		NSJNZ L21	//QImode NE
         00 EE      
00000B70                    	.debug
00000B70 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
00000B83 0D 00 00 00        		.dd LM64-_goxy
00000B85 0D 00 0A 00        		.dw 0x0d,0x0a
0000813C                    	.code
                            	LM64:
0000813C C5 92              		R1=[BP]	// QImode move
0000813D C5 96              		R3=[BP]	// QImode move
0000813E 0B 05 01 00        		R2=R3+1
00008140 02 99              		R4=R2	// QImode move
00008141 C4 98              		R4=[R4]	// QImode move
00008142 0C A3 80 00        		R1=R4|128
00008144 C8 D2              		[SP--]=R1	// QImode move
00008145 40 F0 86 80        		call _write_cmd	// call without return value
00008147 41 00              		SP = SP + 1	//SP
                            	L21:
00000B87                    	.debug
00000B87 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
00000B9A 19 00 00 00        		.dd LM65-_goxy
00000B9C 0D 00 0A 00        		.dw 0x0d,0x0a
00008148                    	.code
                            	LM65:
00008148 C5 94              		R2=[BP]	// QImode move
00008149 C2 92              		R1=[R2]	// QImode move
0000814A 42 42              		CMP R1,2	// QImode compare
0000814B 0E 4E 01 EE        		NSJNZ L22	//QImode NE
         00 EE      
00000B9E                    	.debug
00000B9E 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00000BB1 1F 00 00 00        		.dd LM66-_goxy
00000BB3 0D 00 0A 00        		.dw 0x0d,0x0a
0000814E                    	.code
                            	LM66:
0000814E C5 92              		R1=[BP]	// QImode move
0000814F C5 96              		R3=[BP]	// QImode move
00008150 0B 05 01 00        		R2=R3+1
00008152 02 99              		R4=R2	// QImode move
00008153 C4 96              		R3=[R4]	// QImode move
00008154 0B 03 40 00        		R1=R3+64
00008156 C8 D2              		[SP--]=R1	// QImode move
00008157 40 F0 86 80        		call _write_cmd	// call without return value
00008159 41 00              		SP = SP + 1	//SP
                            	L22:
00000BB5                    	.debug
00000BB5 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000BC8 2B 00 00 00        		.dd LM67-_goxy
00000BCA 0D 00 0A 00        		.dw 0x0d,0x0a
0000815A                    	.code
                            	LM67:
00000BCC                    	.debug
00000BCC 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000BDF 2B 00 00 00        		.dd LM68-_goxy
00000BE1 0D 00 0A 00        		.dw 0x0d,0x0a
0000815A                    	.code
                            	LM68:
                            	L20:
                            	
0000815A 41 00              		sp+=1
0000815B 88 98              		pop bp from [sp]
0000815C 90 9A              		retf
                            		.endp	// end of goxy
                            	
00000BE3                    	.debug
00000BE3 2E 00 73 00        		.dw '.stabs "y:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         79 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
0000815D                    	.CODE
00000BFC                    	.debug
00000BFC 2E 00 73 00        		.dw '.stabs "x:p1",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         35 00 0D 00
         0A 00      
0000815D                    	.CODE
00000C15                    	.debug
00000C15 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000C1E 2E 00 00 00        		.dd LME6-_goxy
00000C20 0D 00 0A 00        		.dw 0x0d,0x0a
0000815D                    	.code
                            	LME6:
0000815D                    	.code
00000C22                    	.debug
00000C22 2E 00 73 00        		.dw '.stabs "init_1602:F19",36,0,0,',0,0,offset _init_1602,seg _init_1602,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         69 00 74 00
         5F 00 31 00
         36 00 30 00
         32 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         2B 01 00 00
         0D 00 0A 00
0000815D                    	.CODE
                            	.public _init_1602
                            	_init_1602:	.proc
00000C46                    	.debug
00000C46 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
00000C59 00 00 00 00        		.dd LM69-_init_1602
00000C5B 0D 00 0A 00        		.dw 0x0d,0x0a
0000815D                    	.code
                            	LM69:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000815D 88 DA              		push bp to [sp]
0000815E 41 20              		sp-=1
0000815F 08 0B 01 00        		bp=sp+1
                            	
00008161 0D 03 04 00        		R1=BP+4
00008163 C5 D2              		[BP]=R1	// QImode move
00000C5D                    	.debug
00000C5D 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
00000C70 07 00 00 00        		.dd LM70-_init_1602
00000C72 0D 00 0A 00        		.dw 0x0d,0x0a
00008164                    	.code
                            	LM70:
00008164 11 93 00 70        		R1=[28672]	// QImode move
00008166 09 B5 FB FF        		R2=R1&(-5)
00008168 1A D5 00 70        		[28672]=R2	// QImode move
00000C74                    	.debug
00000C74 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
00000C87 0D 00 00 00        		.dd LM71-_init_1602
00000C89 0D 00 0A 00        		.dw 0x0d,0x0a
0000816A                    	.code
                            	LM71:
0000816A 4F 92              		R1=15	// QImode move
0000816B C8 D2              		[SP--]=R1	// QImode move
0000816C 40 F0 32 80        		call _delay	// call without return value
0000816E 41 00              		SP = SP + 1	//SP
00000C8B                    	.debug
00000C8B 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
00000C9E 12 00 00 00        		.dd LM72-_init_1602
00000CA0 0D 00 0A 00        		.dw 0x0d,0x0a
0000816F                    	.code
                            	LM72:
0000816F 78 92              		R1=56	// QImode move
00008170 C8 D2              		[SP--]=R1	// QImode move
00008171 40 F0 86 80        		call _write_cmd	// call without return value
00008173 41 00              		SP = SP + 1	//SP
00000CA2                    	.debug
00000CA2 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
00000CB5 17 00 00 00        		.dd LM73-_init_1602
00000CB7 0D 00 0A 00        		.dw 0x0d,0x0a
00008174                    	.code
                            	LM73:
00008174 45 92              		R1=5	// QImode move
00008175 C8 D2              		[SP--]=R1	// QImode move
00008176 40 F0 32 80        		call _delay	// call without return value
00008178 41 00              		SP = SP + 1	//SP
00000CB9                    	.debug
00000CB9 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
00000CCC 1C 00 00 00        		.dd LM74-_init_1602
00000CCE 0D 00 0A 00        		.dw 0x0d,0x0a
00008179                    	.code
                            	LM74:
00008179 78 92              		R1=56	// QImode move
0000817A C8 D2              		[SP--]=R1	// QImode move
0000817B 40 F0 86 80        		call _write_cmd	// call without return value
0000817D 41 00              		SP = SP + 1	//SP
00000CD0                    	.debug
00000CD0 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
00000CE3 21 00 00 00        		.dd LM75-_init_1602
00000CE5 0D 00 0A 00        		.dw 0x0d,0x0a
0000817E                    	.code
                            	LM75:
0000817E 45 92              		R1=5	// QImode move
0000817F C8 D2              		[SP--]=R1	// QImode move
00008180 40 F0 32 80        		call _delay	// call without return value
00008182 41 00              		SP = SP + 1	//SP
00000CE7                    	.debug
00000CE7 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
00000CFA 26 00 00 00        		.dd LM76-_init_1602
00000CFC 0D 00 0A 00        		.dw 0x0d,0x0a
00008183                    	.code
                            	LM76:
00008183 78 92              		R1=56	// QImode move
00008184 C8 D2              		[SP--]=R1	// QImode move
00008185 40 F0 86 80        		call _write_cmd	// call without return value
00008187 41 00              		SP = SP + 1	//SP
00000CFE                    	.debug
00000CFE 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
00000D11 2B 00 00 00        		.dd LM77-_init_1602
00000D13 0D 00 0A 00        		.dw 0x0d,0x0a
00008188                    	.code
                            	LM77:
00008188 78 92              		R1=56	// QImode move
00008189 C8 D2              		[SP--]=R1	// QImode move
0000818A 40 F0 86 80        		call _write_cmd	// call without return value
0000818C 41 00              		SP = SP + 1	//SP
00000D15                    	.debug
00000D15 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000D28 30 00 00 00        		.dd LM78-_init_1602
00000D2A 0D 00 0A 00        		.dw 0x0d,0x0a
0000818D                    	.code
                            	LM78:
                            	// GCC inline ASM start
0000818D 00 EE              		NOP
                            	// GCC inline ASM end
00000D2C                    	.debug
00000D2C 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
00000D3F 31 00 00 00        		.dd LM79-_init_1602
00000D41 0D 00 0A 00        		.dw 0x0d,0x0a
0000818E                    	.code
                            	LM79:
0000818E 48 92              		R1=8	// QImode move
0000818F C8 D2              		[SP--]=R1	// QImode move
00008190 40 F0 86 80        		call _write_cmd	// call without return value
00008192 41 00              		SP = SP + 1	//SP
00000D43                    	.debug
00000D43 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000D56 36 00 00 00        		.dd LM80-_init_1602
00000D58 0D 00 0A 00        		.dw 0x0d,0x0a
00008193                    	.code
                            	LM80:
                            	// GCC inline ASM start
00008193 00 EE              		NOP
                            	// GCC inline ASM end
00000D5A                    	.debug
00000D5A 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
00000D6D 37 00 00 00        		.dd LM81-_init_1602
00000D6F 0D 00 0A 00        		.dw 0x0d,0x0a
00008194                    	.code
                            	LM81:
00008194 46 92              		R1=6	// QImode move
00008195 C8 D2              		[SP--]=R1	// QImode move
00008196 40 F0 86 80        		call _write_cmd	// call without return value
00008198 41 00              		SP = SP + 1	//SP
00000D71                    	.debug
00000D71 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000D84 3C 00 00 00        		.dd LM82-_init_1602
00000D86 0D 00 0A 00        		.dw 0x0d,0x0a
00008199                    	.code
                            	LM82:
                            	// GCC inline ASM start
00008199 00 EE              		NOP
                            	// GCC inline ASM end
00000D88                    	.debug
00000D88 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000D9B 3D 00 00 00        		.dd LM83-_init_1602
00000D9D 0D 00 0A 00        		.dw 0x0d,0x0a
0000819A                    	.code
                            	LM83:
0000819A 4C 92              		R1=12	// QImode move
0000819B C8 D2              		[SP--]=R1	// QImode move
0000819C 40 F0 86 80        		call _write_cmd	// call without return value
0000819E 41 00              		SP = SP + 1	//SP
00000D9F                    	.debug
00000D9F 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
00000DB2 42 00 00 00        		.dd LM84-_init_1602
00000DB4 0D 00 0A 00        		.dw 0x0d,0x0a
0000819F                    	.code
                            	LM84:
                            	// GCC inline ASM start
0000819F 00 EE              		NOP
                            	// GCC inline ASM end
00000DB6                    	.debug
00000DB6 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
00000DC9 43 00 00 00        		.dd LM85-_init_1602
00000DCB 0D 00 0A 00        		.dw 0x0d,0x0a
000081A0                    	.code
                            	LM85:
000081A0 41 92              		R1=1	// QImode move
000081A1 C8 D2              		[SP--]=R1	// QImode move
000081A2 40 F0 86 80        		call _write_cmd	// call without return value
000081A4 41 00              		SP = SP + 1	//SP
00000DCD                    	.debug
00000DCD 2E 00 73 00        		.dw '.stabn 0x44,0,100,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         30 00 2C 00
         00 00 00 00
00000DE1 48 00 00 00        		.dd LM86-_init_1602
00000DE3 0D 00 0A 00        		.dw 0x0d,0x0a
000081A5                    	.code
                            	LM86:
                            	// GCC inline ASM start
000081A5 00 EE              		NOP
                            	// GCC inline ASM end
00000DE5                    	.debug
00000DE5 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000DF9 49 00 00 00        		.dd LM87-_init_1602
00000DFB 0D 00 0A 00        		.dw 0x0d,0x0a
000081A6                    	.code
                            	LM87:
00000DFD                    	.debug
00000DFD 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000E11 49 00 00 00        		.dd LM88-_init_1602
00000E13 0D 00 0A 00        		.dw 0x0d,0x0a
000081A6                    	.code
                            	LM88:
                            	L25:
                            	
000081A6 41 00              		sp+=1
000081A7 88 98              		pop bp from [sp]
000081A8 90 9A              		retf
                            		.endp	// end of init_1602
                            	
00000E15                    	.debug
00000E15 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000E1E 4C 00 00 00        		.dd LME7-_init_1602
00000E20 0D 00 0A 00        		.dw 0x0d,0x0a
000081A9                    	.code
                            	LME7:
00008009                    	.text
                            	LC0:
00008009 49 00 20 00        		.str 'I', ' ', 'a', 'm', ' ', 'k', 'k', 'k', 0
         61 00 6D 00
         20 00 6B 00
         6B 00 6B 00
         00 00      
                            		// length = 9
                            	LC1:
00008012 77 00 6B 00        		.str 'w', 'k', 0
         00 00      
                            		// length = 3
000081A9                    	.code
00000E22                    	.debug
00000E22 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         77 01 00 00
         0D 00 0A 00
000081A9                    	.CODE
                            	.public _main
                            	_main:	.proc
00000E40                    	.debug
00000E40 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000E54 00 00 00 00        		.dd LM89-_main
00000E56 0D 00 0A 00        		.dw 0x0d,0x0a
000081A9                    	.code
                            	LM89:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
000081A9 88 DA              		push bp to [sp]
000081AA 42 20              		sp-=2
000081AB 08 0B 01 00        		bp=sp+1
                            	
000081AD 0D 03 05 00        		R1=BP+5
000081AF 01 D2              		[bp+1]=R1	// QImode move
00000E58                    	.debug
00000E58 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00000E6C 07 00 00 00        		.dd LM90-_main
00000E6E 0D 00 0A 00        		.dw 0x0d,0x0a
000081B0                    	.code
                            	LM90:
                            	LBB3:
000081B0 40 92              		R1=0	// QImode move
000081B1 C5 D2              		[BP]=R1	// QImode move
00000E70                    	.debug
00000E70 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000E84 09 00 00 00        		.dd LM91-_main
00000E86 0D 00 0A 00        		.dw 0x0d,0x0a
000081B2                    	.code
                            	LM91:
000081B2 41 62              		R1=(-1)	// QImode move
000081B3 19 D3 02 70        		[28674]=R1	// QImode move
00000E88                    	.debug
00000E88 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000E9C 0C 00 00 00        		.dd LM92-_main
00000E9E 0D 00 0A 00        		.dw 0x0d,0x0a
000081B5                    	.code
                            	LM92:
000081B5 41 62              		R1=(-1)	// QImode move
000081B6 19 D3 03 70        		[28675]=R1	// QImode move
00000EA0                    	.debug
00000EA0 2E 00 73 00        		.dw '.stabn 0x44,0,108,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         38 00 2C 00
         00 00 00 00
00000EB4 0F 00 00 00        		.dd LM93-_main
00000EB6 0D 00 0A 00        		.dw 0x0d,0x0a
000081B8                    	.code
                            	LM93:
000081B8 40 92              		R1=0	// QImode move
000081B9 19 D3 00 70        		[28672]=R1	// QImode move
00000EB8                    	.debug
00000EB8 2E 00 73 00        		.dw '.stabn 0x44,0,109,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         39 00 2C 00
         00 00 00 00
00000ECC 12 00 00 00        		.dd LM94-_main
00000ECE 0D 00 0A 00        		.dw 0x0d,0x0a
000081BB                    	.code
                            	LM94:
000081BB 40 F0 5D 81        		call _init_1602	// call without return value
00000ED0                    	.debug
00000ED0 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000EE4 14 00 00 00        		.dd LM95-_main
00000EE6 0D 00 0A 00        		.dw 0x0d,0x0a
000081BD                    	.code
                            	LM95:
000081BD 09 93 F4 01        		R1=500	// QImode move
000081BF C8 D2              		[SP--]=R1	// QImode move
000081C0 40 F0 32 80        		call _delay	// call without return value
000081C2 41 00              		SP = SP + 1	//SP
00000EE8                    	.debug
00000EE8 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
00000EFC 1A 00 00 00        		.dd LM96-_main
00000EFE 0D 00 0A 00        		.dw 0x0d,0x0a
000081C3                    	.code
                            	LM96:
000081C3 41 92              		R1=1	// QImode move
000081C4 C8 D2              		[SP--]=R1	// QImode move
000081C5 40 F0 86 80        		call _write_cmd	// call without return value
000081C7 41 00              		SP = SP + 1	//SP
00000F00                    	.debug
00000F00 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
00000F14 1F 00 00 00        		.dd LM97-_main
00000F16 0D 00 0A 00        		.dw 0x0d,0x0a
000081C8                    	.code
                            	LM97:
000081C8 46 92              		R1=6	// QImode move
000081C9 C8 D2              		[SP--]=R1	// QImode move
000081CA 41 92              		R1=1	// QImode move
000081CB C8 D2              		[SP--]=R1	// QImode move
000081CC 40 F0 2F 81        		call _goxy	// call without return value
000081CE 42 00              		SP = SP + 2	//SP
00000F18                    	.debug
00000F18 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
00000F2C 26 00 00 00        		.dd LM98-_main
00000F2E 0D 00 0A 00        		.dw 0x0d,0x0a
000081CF                    	.code
                            	LM98:
000081CF 09 93 09 80        		R1=LC0	// QImode move
000081D1 C8 D2              		[SP--]=R1	// QImode move
000081D2 40 F0 08 81        		call _show	// call without return value
000081D4 41 00              		SP = SP + 1	//SP
00000F30                    	.debug
00000F30 2E 00 73 00        		.dw '.stabn 0x44,0,114,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         34 00 2C 00
         00 00 00 00
00000F44 2C 00 00 00        		.dd LM99-_main
00000F46 0D 00 0A 00        		.dw 0x0d,0x0a
000081D5                    	.code
                            	LM99:
000081D5 09 93 E8 03        		R1=1000	// QImode move
000081D7 C8 D2              		[SP--]=R1	// QImode move
000081D8 40 F0 32 80        		call _delay	// call without return value
000081DA 41 00              		SP = SP + 1	//SP
00000F48                    	.debug
00000F48 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
00000F5C 32 00 00 00        		.dd LM100-_main
00000F5E 0D 00 0A 00        		.dw 0x0d,0x0a
000081DB                    	.code
                            	LM100:
000081DB 40 92              		R1=0	// QImode move
000081DC C8 D2              		[SP--]=R1	// QImode move
000081DD 42 92              		R1=2	// QImode move
000081DE C8 D2              		[SP--]=R1	// QImode move
000081DF 40 F0 2F 81        		call _goxy	// call without return value
000081E1 42 00              		SP = SP + 2	//SP
00000F60                    	.debug
00000F60 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
00000F74 39 00 00 00        		.dd LM101-_main
00000F76 0D 00 0A 00        		.dw 0x0d,0x0a
000081E2                    	.code
                            	LM101:
000081E2 09 93 12 80        		R1=LC1	// QImode move
000081E4 C8 D2              		[SP--]=R1	// QImode move
000081E5 40 F0 08 81        		call _show	// call without return value
000081E7 41 00              		SP = SP + 1	//SP
00000F78                    	.debug
00000F78 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000F8C 3F 00 00 00        		.dd LM102-_main
00000F8E 0D 00 0A 00        		.dw 0x0d,0x0a
000081E8                    	.code
                            	LM102:
000081E8 09 93 E8 03        		R1=1000	// QImode move
000081EA C8 D2              		[SP--]=R1	// QImode move
000081EB 40 F0 32 80        		call _delay	// call without return value
000081ED 41 00              		SP = SP + 1	//SP
00000F90                    	.debug
00000F90 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000FA4 45 00 00 00        		.dd LM103-_main
00000FA6 0D 00 0A 00        		.dw 0x0d,0x0a
000081EE                    	.code
                            	LM103:
                            	L27:
000081EE 0F 9F F2 81        		pc=L29	// Indirect jump
000081F0 0F 9F F7 81        		pc=L28	// Indirect jump
                            	L29:
00000FA8                    	.debug
00000FA8 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
00000FBC 49 00 00 00        		.dd LM104-_main
00000FBE 0D 00 0A 00        		.dw 0x0d,0x0a
000081F2                    	.code
                            	LM104:
000081F2 41 92              		R1=1	// QImode move
000081F3 19 D3 12 70        		[28690]=R1	// QImode move
00000FC0                    	.debug
00000FC0 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000FD4 4C 00 00 00        		.dd LM105-_main
00000FD6 0D 00 0A 00        		.dw 0x0d,0x0a
000081F5                    	.code
                            	LM105:
000081F5 0F 9F EE 81        		pc=L27	// Indirect jump
                            	L28:
00000FD8                    	.debug
00000FD8 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
00000FEC 4E 00 00 00        		.dd LM106-_main
00000FEE 0D 00 0A 00        		.dw 0x0d,0x0a
000081F7                    	.code
                            	LM106:
                            	LBE3:
00000FF0                    	.debug
00000FF0 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
00001004 4E 00 00 00        		.dd LM107-_main
00001006 0D 00 0A 00        		.dw 0x0d,0x0a
000081F7                    	.code
                            	LM107:
                            	L26:
                            	
000081F7 42 00              		sp+=2
000081F8 88 98              		pop bp from [sp]
000081F9 90 9A              		retf
                            		.endp	// end of main
                            	
00001008                    	.debug
00001008 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000101A 07 00 00 00        		.dd LBB3-_main
0000101C 0D 00 0A 00        		.dw 0x0d,0x0a
000081FA                    	.code
0000101E                    	.debug
0000101E 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000081FA                    	.CODE
00001036                    	.debug
00001036 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001048 4E 00 00 00        		.dd LBE3-_main
0000104A 0D 00 0A 00        		.dw 0x0d,0x0a
000081FA                    	.code
0000104C                    	.debug
0000104C 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001055 51 00 00 00        		.dd LME8-_main
00001057 0D 00 0A 00        		.dw 0x0d,0x0a
000081FA                    	.code
                            	LME8:
                            		.end
0 error(s), 0 warning(s).

