Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\PROGRA~1\Sunplus\UNSPID~1.0\cc1.exe C:\DOCUME~1\ZHANGZ~1.YSU\LOCALS~1\Temp\ccOQcaaa.i -fkeep-inline-functions -quiet -dumpbase led.c -mglobal-var-iram -gstabs -Wall -o .\Debug/led.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "C:/Documents and Settings/zhangzhao.YSU-13AE14284FC/×ÀÃæ/shuma/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 3A 00
         2F 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         20 00 61 00
         6E 00 64 00
         20 00 53 00
         65 00 74 00
         74 00 69 00
         6E 00 67 00
         73 00 2F 00
         7A 00 68 00
         61 00 6E 00
         67 00 7A 00
         68 00 61 00
         6F 00 2E 00
         59 00 53 00
         55 00 2D 00
         31 00 33 00
         41 00 45 00
         31 00 34 00
         32 00 38 00
         34 00 46 00
         43 00 2F 00
         D7 00 C0 00
         C3 00 E6 00
         2F 00 73 00
         68 00 75 00
         6D 00 61 00
         2F 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.code
00000058                    	.debug
00000058 2E 00 73 00        		.dw '.stabs "C:/Documents and Settings/zhangzhao.YSU-13AE14284FC/×/300Ã/346/shuma/led.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 3A 00
         2F 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         20 00 61 00
         6E 00 64 00
         20 00 53 00
         65 00 74 00
         74 00 69 00
         6E 00 67 00
         73 00 2F 00
         7A 00 68 00
         61 00 6E 00
         67 00 7A 00
         68 00 61 00
         6F 00 2E 00
         59 00 53 00
         55 00 2D 00
         31 00 33 00
         41 00 45 00
         31 00 34 00
         32 00 38 00
         34 00 46 00
         43 00 2F 00
         D7 00 2F 00
         33 00 30 00
         30 00 C3 00
         2F 00 33 00
         34 00 36 00
         2F 00 73 00
         68 00 75 00
         6D 00 61 00
         2F 00 6C 00
         65 00 64 00
         2E 00 63 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008026                    	.code
00008026                    	.code
                            	Ltext0:
000000BB                    	.debug
000000BB 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000000E7                    	.debug
000000E7 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000010D                    	.debug
0000010D 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000148                    	.debug
00000148 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000178                    	.debug
00000178 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000001B2                    	.debug
000001B2 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000001F2                    	.debug
000001F2 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000231                    	.debug
00000231 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000263                    	.debug
00000263 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000299                    	.debug
00000299 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000002CF                    	.debug
000002CF 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000302                    	.debug
00000302 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000328                    	.debug
00000328 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
0000034F                    	.debug
0000034F 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000037B                    	.debug
0000037B 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000003BC                    	.debug
000003BC 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000003EB                    	.debug
000003EB 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000041B                    	.debug
0000041B 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000450                    	.debug
00000450 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
                            	.public _tb
00000001                    	.iram
                            	_tb:
00000001 3F 00              		.dw 63
00000002 06 00              		.dw 6
00000003 5B 00              		.dw 91
00000004 4F 00              		.dw 79
00000005 66 00              		.dw 102
00000006 6D 00              		.dw 109
00000007 7D 00              		.dw 125
00000008 07 00              		.dw 7
00000009 7F 00              		.dw 127
0000000A 6F 00              		.dw 111
0000000B 40 00              		.dw 64
00000470                    	.debug
00000470 2E 00 73 00        		.dw '.stabs "tb:G20=ar1;0;10;4",32,0,0,',0,0,offset _tb,seg _tb,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 62 00
         3A 00 47 00
         32 00 30 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 31 00
         30 00 3B 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.CODE
                            	.public _dot
0000000C                    	.iram
                            	_dot:
0000000C 80 00              		.dw 128
00000498                    	.debug
00000498 2E 00 73 00        		.dw '.stabs "dot:G4",32,0,0,',0,0,offset _dot,seg _dot,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         74 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0B 00
         00 00 0D 00
         0A 00      
00008026                    	.CODE
000004B5                    	.debug
000004B5 2E 00 73 00        		.dw '.stabs "buffer:G21=ar1;0;7;4",32,0,0,',0,0,offset _buffer,seg _buffer,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         62 00 75 00
         66 00 66 00
         65 00 72 00
         3A 00 47 00
         32 00 31 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 37 00
         3B 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0C 00
         00 00 0D 00
         0A 00      
00008026                    	.CODE
00008026                    	.code
000004E0                    	.debug
000004E0 2E 00 73 00        		.dw '.stabs "longdelay:F19",36,0,0,',0,0,offset _longdelay,seg _longdelay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         64 00 65 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.CODE
                            	.public _longdelay
                            	_longdelay:	.proc
00000504                    	.debug
00000504 2E 00 73 00        		.dw '.stabn 0x44,0,6,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 2C 00
         00 00 00 00
00000516 00 00 00 00        		.dd LM1-_longdelay
00000518 0D 00 0A 00        		.dw 0x0d,0x0a
00008026                    	.code
                            	LM1:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008026 88 DA              		push bp to [sp]
00008027 43 20              		sp-=3
00008028 08 0B 01 00        		bp=sp+1
                            	
0000802A 0D 03 06 00        		R1=BP+6
0000051A                    	.debug
0000051A 2E 00 73 00        		.dw '.stabn 0x44,0,7,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 2C 00
         00 00 00 00
0000052C 06 00 00 00        		.dd LM2-_longdelay
0000052E 0D 00 0A 00        		.dw 0x0d,0x0a
0000802C                    	.code
                            	LM2:
                            	LBB2:
00000530                    	.debug
00000530 2E 00 73 00        		.dw '.stabn 0x44,0,8,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 2C 00
         00 00 00 00
00000542 06 00 00 00        		.dd LM3-_longdelay
00000544 0D 00 0A 00        		.dw 0x0d,0x0a
0000802C                    	.code
                            	LM3:
0000802C 40 94              		R2=0	// QImode move
0000802D C5 D4              		[BP]=R2	// QImode move
                            	L3:
0000802E C5 94              		R2=[BP]	// QImode move
0000802F 0A 45 57 02        		CMP R2,599	// QImode compare
00008031 04 AE 01 EE        		NSJNG L6	//QImode LE
         00 EE      
00008034 0F 9F 62 80        		pc=L4	// Indirect jump
                            	L6:
00000546                    	.debug
00000546 2E 00 73 00        		.dw '.stabn 0x44,0,9,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 2C 00
         00 00 00 00
00000558 10 00 00 00        		.dd LM4-_longdelay
0000055A 0D 00 0A 00        		.dw 0x0d,0x0a
00008036                    	.code
                            	LM4:
00008036 05 95              		R2=BP	// QImode move
00008037 0D 07 01 00        		R3=BP+1
00008039 54 94              		R2=20	// QImode move
0000803A 03 99              		R4=R3	// QImode move
0000803B C4 D4              		[R4]=R2	// QImode move
                            	L7:
0000803C 05 95              		R2=BP	// QImode move
0000803D 0D 07 01 00        		R3=BP+1
0000803F 03 99              		R4=R3	// QImode move
00008040 C4 94              		R2=[R4]	// QImode move
00008041 40 44              		CMP R2,0	// QImode test
00008042 04 4E 01 EE        		NSJNZ L10	//QImode NE
         00 EE      
00008045 0F 9F 5C 80        		pc=L5	// Indirect jump
                            	L10:
0000055C                    	.debug
0000055C 2E 00 73 00        		.dw '.stabn 0x44,0,10,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         2C 00 00 00
         00 00      
0000056F 21 00 00 00        		.dd LM5-_longdelay
00000571 0D 00 0A 00        		.dw 0x0d,0x0a
00008047                    	.code
                            	LM5:
00008047 41 94              		R2=1	// QImode move
00008048 1A D5 12 70        		[28690]=R2	// QImode move
00000573                    	.debug
00000573 2E 00 73 00        		.dw '.stabn 0x44,0,9,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 2C 00
         00 00 00 00
00000585 24 00 00 00        		.dd LM6-_longdelay
00000587 0D 00 0A 00        		.dw 0x0d,0x0a
0000804A                    	.code
                            	LM6:
                            	L9:
0000804A 05 95              		R2=BP	// QImode move
0000804B 0D 07 01 00        		R3=BP+1
0000804D 05 99              		R4=BP	// QImode move
0000804E 0D 05 01 00        		R2=BP+1
00008050 05 97              		R3=BP	// QImode move
00008051 0D 07 01 00        		R3=BP+1
00008053 02 D6              		[bp+2]=R3	// QImode move
00008054 02 98              		R4=[bp+2]	// QImode move
00008055 C4 96              		R3=[R4]	// QImode move
00008056 0B 09 FF FF        		R4=R3+(-1)
00008058 02 97              		R3=R2	// QImode move
00008059 C3 D8              		[R3]=R4	// QImode move
0000805A 0F 9F 3C 80        		pc=L7	// Indirect jump
                            	L8:
00000589                    	.debug
00000589 2E 00 73 00        		.dw '.stabn 0x44,0,8,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 2C 00
         00 00 00 00
0000059B 36 00 00 00        		.dd LM7-_longdelay
0000059D 0D 00 0A 00        		.dw 0x0d,0x0a
0000805C                    	.code
                            	LM7:
                            	L5:
0000805C C5 94              		R2=[BP]	// QImode move
0000805D 0A 07 01 00        		R3=R2+1
0000805F C5 D6              		[BP]=R3	// QImode move
00008060 0F 9F 2E 80        		pc=L3	// Indirect jump
                            	L4:
0000059F                    	.debug
0000059F 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
000005B2 3C 00 00 00        		.dd LM8-_longdelay
000005B4 0D 00 0A 00        		.dw 0x0d,0x0a
00008062                    	.code
                            	LM8:
                            	LBE2:
000005B6                    	.debug
000005B6 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
000005C9 3C 00 00 00        		.dd LM9-_longdelay
000005CB 0D 00 0A 00        		.dw 0x0d,0x0a
00008062                    	.code
                            	LM9:
                            	L2:
                            	
00008062 43 00              		sp+=3
00008063 88 98              		pop bp from [sp]
00008064 90 9A              		retf
                            		.endp	// end of longdelay
                            	
000005CD                    	.debug
000005CD 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000005DF 06 00 00 00        		.dd LBB2-_longdelay
000005E1 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
000005E3                    	.debug
000005E3 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008065                    	.CODE
000005FB                    	.debug
000005FB 2E 00 73 00        		.dw '.stabs "j:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
00008065                    	.CODE
00000613                    	.debug
00000613 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000625 3C 00 00 00        		.dd LBE2-_longdelay
00000627 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
00000629                    	.debug
00000629 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000632 3F 00 00 00        		.dd LME1-_longdelay
00000634 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
                            	LME1:
00008065                    	.code
00000636                    	.debug
00000636 2E 00 73 00        		.dw '.stabs "shortdelay:F19",36,0,0,',0,0,offset _shortdelay,seg _shortdelay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 64 00
         65 00 6C 00
         61 00 79 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 3F 00
         00 00 0D 00
         0A 00      
00008065                    	.CODE
                            	.public _shortdelay
                            	_shortdelay:	.proc
0000065B                    	.debug
0000065B 2E 00 73 00        		.dw '.stabn 0x44,0,13,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         2C 00 00 00
         00 00      
0000066E 00 00 00 00        		.dd LM10-_shortdelay
00000670 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
                            	LM10:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008065 88 DA              		push bp to [sp]
00008066 41 20              		sp-=1
00008067 08 0B 01 00        		bp=sp+1
                            	
00008069 0D 03 04 00        		R1=BP+4
00000672                    	.debug
00000672 2E 00 73 00        		.dw '.stabn 0x44,0,14,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         2C 00 00 00
         00 00      
00000685 06 00 00 00        		.dd LM11-_shortdelay
00000687 0D 00 0A 00        		.dw 0x0d,0x0a
0000806B                    	.code
                            	LM11:
                            	LBB3:
00000689                    	.debug
00000689 2E 00 73 00        		.dw '.stabn 0x44,0,15,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         2C 00 00 00
         00 00      
0000069C 06 00 00 00        		.dd LM12-_shortdelay
0000069E 0D 00 0A 00        		.dw 0x0d,0x0a
0000806B                    	.code
                            	LM12:
0000806B 72 94              		R2=50	// QImode move
0000806C C5 D4              		[BP]=R2	// QImode move
                            	L14:
0000806D C5 94              		R2=[BP]	// QImode move
0000806E 40 44              		CMP R2,0	// QImode test
0000806F 04 4E 01 EE        		NSJNZ L17	//QImode NE
         00 EE      
00008072 0F 9F 7D 80        		pc=L15	// Indirect jump
                            	L17:
000006A0                    	.debug
000006A0 2E 00 73 00        		.dw '.stabn 0x44,0,16,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         2C 00 00 00
         00 00      
000006B3 0F 00 00 00        		.dd LM13-_shortdelay
000006B5 0D 00 0A 00        		.dw 0x0d,0x0a
00008074                    	.code
                            	LM13:
00008074 41 94              		R2=1	// QImode move
00008075 1A D5 12 70        		[28690]=R2	// QImode move
000006B7                    	.debug
000006B7 2E 00 73 00        		.dw '.stabn 0x44,0,15,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         2C 00 00 00
         00 00      
000006CA 12 00 00 00        		.dd LM14-_shortdelay
000006CC 0D 00 0A 00        		.dw 0x0d,0x0a
00008077                    	.code
                            	LM14:
                            	L16:
00008077 C5 94              		R2=[BP]	// QImode move
00008078 0A 07 FF FF        		R3=R2+(-1)
0000807A C5 D6              		[BP]=R3	// QImode move
0000807B 0F 9F 6D 80        		pc=L14	// Indirect jump
                            	L15:
000006CE                    	.debug
000006CE 2E 00 73 00        		.dw '.stabn 0x44,0,17,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         2C 00 00 00
         00 00      
000006E1 18 00 00 00        		.dd LM15-_shortdelay
000006E3 0D 00 0A 00        		.dw 0x0d,0x0a
0000807D                    	.code
                            	LM15:
                            	LBE3:
000006E5                    	.debug
000006E5 2E 00 73 00        		.dw '.stabn 0x44,0,17,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         2C 00 00 00
         00 00      
000006F8 18 00 00 00        		.dd LM16-_shortdelay
000006FA 0D 00 0A 00        		.dw 0x0d,0x0a
0000807D                    	.code
                            	LM16:
                            	L13:
                            	
0000807D 41 00              		sp+=1
0000807E 88 98              		pop bp from [sp]
0000807F 90 9A              		retf
                            		.endp	// end of shortdelay
                            	
000006FC                    	.debug
000006FC 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000070E 06 00 00 00        		.dd LBB3-_shortdelay
00000710 0D 00 0A 00        		.dw 0x0d,0x0a
00008080                    	.code
00000712                    	.debug
00000712 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008080                    	.CODE
0000072A                    	.debug
0000072A 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000073C 18 00 00 00        		.dd LBE3-_shortdelay
0000073E 0D 00 0A 00        		.dw 0x0d,0x0a
00008080                    	.code
00000740                    	.debug
00000740 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000749 1B 00 00 00        		.dd LME2-_shortdelay
0000074B 0D 00 0A 00        		.dw 0x0d,0x0a
00008080                    	.code
                            	LME2:
00008080                    	.code
0000074D                    	.debug
0000074D 2E 00 73 00        		.dw '.stabs "show:F19",36,0,0,',0,0,offset _show,seg _show,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 77 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 5A 00
         00 00 0D 00
         0A 00      
00008080                    	.CODE
                            	.public _show
                            	_show:	.proc
0000076C                    	.debug
0000076C 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
0000077F 00 00 00 00        		.dd LM17-_show
00000781 0D 00 0A 00        		.dw 0x0d,0x0a
00008080                    	.code
                            	LM17:
                            		// total=16, vars=16
                            		// frame_pointer_needed: 1
00008080 88 DA              		push bp to [sp]
00008081 50 20              		sp-=16
00008082 08 0B 01 00        		bp=sp+1
                            	
00008084 0D 03 13 00        		R1=BP+19
00008086 0A D2              		[bp+10]=R1	// QImode move
00000783                    	.debug
00000783 2E 00 73 00        		.dw '.stabn 0x44,0,27,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         2C 00 00 00
         00 00      
00000796 07 00 00 00        		.dd LM18-_show
00000798 0D 00 0A 00        		.dw 0x0d,0x0a
00008087                    	.code
                            	LM18:
                            	LBB4:
0000079A                    	.debug
0000079A 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
000007AD 07 00 00 00        		.dd LM19-_show
000007AF 0D 00 0A 00        		.dw 0x0d,0x0a
00008087                    	.code
                            	LM19:
00008087 41 62              		R1=(-1)	// QImode move
00008088 19 D3 02 70        		[28674]=R1	// QImode move
000007B1                    	.debug
000007B1 2E 00 73 00        		.dw '.stabn 0x44,0,29,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         2C 00 00 00
         00 00      
000007C4 0A 00 00 00        		.dd LM20-_show
000007C6 0D 00 0A 00        		.dw 0x0d,0x0a
0000808A                    	.code
                            	LM20:
0000808A 41 62              		R1=(-1)	// QImode move
0000808B 19 D3 03 70        		[28675]=R1	// QImode move
000007C8                    	.debug
000007C8 2E 00 73 00        		.dw '.stabn 0x44,0,30,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         2C 00 00 00
         00 00      
000007DB 0D 00 00 00        		.dd LM21-_show
000007DD 0D 00 0A 00        		.dw 0x0d,0x0a
0000808D                    	.code
                            	LM21:
0000808D 41 62              		R1=(-1)	// QImode move
0000808E 19 D3 00 70        		[28672]=R1	// QImode move
000007DF                    	.debug
000007DF 2E 00 73 00        		.dw '.stabn 0x44,0,31,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         2C 00 00 00
         00 00      
000007F2 10 00 00 00        		.dd LM22-_show
000007F4 0D 00 0A 00        		.dw 0x0d,0x0a
00008090                    	.code
                            	LM22:
00008090 05 95              		R2=BP	// QImode move
00008091 0D 03 01 00        		R1=BP+1
00008093 0A 95 01 00        		R2=_tb	// QImode move
00008095 0A 98              		R4=[bp+10]	// QImode move
00008096 C4 96              		R3=[R4]	// QImode move
00008097 03 05              		R2 = R2 + R3	//addqi3
00008098 02 99              		R4=R2	// QImode move
00008099 C4 96              		R3=[R4]	// QImode move
0000809A 01 95              		R2=R1	// QImode move
0000809B C2 D6              		[R2]=R3	// QImode move
000007F6                    	.debug
000007F6 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
00000809 1C 00 00 00        		.dd LM23-_show
0000080B 0D 00 0A 00        		.dw 0x0d,0x0a
0000809C                    	.code
                            	LM23:
0000809C 05 93              		R1=BP	// QImode move
0000809D 0D 05 01 00        		R2=BP+1
0000809F 02 93              		R1=R2	// QImode move
000080A0 41 04              		R2=R2+1
000080A1 11 93 0B 00        		R1=[_tb+10]	// QImode move
000080A3 02 97              		R3=R2	// QImode move
000080A4 C3 D2              		[R3]=R1	// QImode move
0000080D                    	.debug
0000080D 2E 00 73 00        		.dw '.stabn 0x44,0,33,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         2C 00 00 00
         00 00      
00000820 25 00 00 00        		.dd LM24-_show
00000822 0D 00 0A 00        		.dw 0x0d,0x0a
000080A5                    	.code
                            	LM24:
000080A5 0A 92              		R1=[bp+10]	// QImode move
000080A6 0A 98              		R4=[bp+10]	// QImode move
000080A7 0C 05 01 00        		R2=R4+1
000080A9 02 97              		R3=R2	// QImode move
000080AA C3 92              		R1=[R3]	// QImode move
000080AB 09 43 63 00        		CMP R1,99	// QImode compare
000080AD 06 BE 01 EE        		NSJG L20	//QImode GT
         00 EE      
00000824                    	.debug
00000824 2E 00 73 00        		.dw '.stabn 0x44,0,35,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         2C 00 00 00
         00 00      
00000837 30 00 00 00        		.dd LM25-_show
00000839 0D 00 0A 00        		.dw 0x0d,0x0a
000080B0                    	.code
                            	LM25:
000080B0 0F 9F BE 81        		pc=L19	// Indirect jump
0000083B                    	.debug
0000083B 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
0000084E 32 00 00 00        		.dd LM26-_show
00000850 0D 00 0A 00        		.dw 0x0d,0x0a
000080B2                    	.code
                            	LM26:
000080B2 0F 9F 36 81        		pc=L21	// Indirect jump
                            	L20:
00000852                    	.debug
00000852 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
00000865 34 00 00 00        		.dd LM27-_show
00000867 0D 00 0A 00        		.dw 0x0d,0x0a
000080B4                    	.code
                            	LM27:
000080B4 0A 92              		R1=[bp+10]	// QImode move
000080B5 0A 98              		R4=[bp+10]	// QImode move
000080B6 0C 05 01 00        		R2=R4+1
000080B8 02 97              		R3=R2	// QImode move
000080B9 C3 92              		R1=[R3]	// QImode move
000080BA 09 43 1F 4E        		CMP R1,19999	// QImode compare
000080BC 02 AE 0F 9F        		NSJG L22	//QImode GT
         34 81      
00000869                    	.debug
00000869 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
0000087C 3F 00 00 00        		.dd LM28-_show
0000087E 0D 00 0A 00        		.dw 0x0d,0x0a
000080BF                    	.code
                            	LM28:
000080BF 05 93              		R1=BP	// QImode move
000080C0 0D 05 01 00        		R2=BP+1
000080C2 02 93              		R1=R2	// QImode move
000080C3 0A 09 02 00        		R4=R2+2
000080C5 0B D8              		[bp+11]=R4	// QImode move
000080C6 0A 92              		R1=[bp+10]	// QImode move
000080C7 0A 92              		R1=[bp+10]	// QImode move
000080C8 09 05 01 00        		R2=R1+1
000080CA 02 97              		R3=R2	// QImode move
000080CB C3 92              		R1=[R3]	// QImode move
000080CC 0A 95 10 27        		R2=10000	// QImode move
000080CE C8 D4              		[SP--]=R2	// QImode move
000080CF C8 D2              		[SP--]=R1	// QImode move
000080D0 40 F0 18 82        		call __divi1	// call with return value
000080D2 42 00              		SP = SP + 2	//SP
000080D3 0B 97 01 00        		R3=_tb	// QImode move
000080D5 03 95              		R2=R3	// QImode move
000080D6 01 05              		R2 = R2 + R1	//addqi3
000080D7 02 99              		R4=R2	// QImode move
000080D8 C4 92              		R1=[R4]	// QImode move
000080D9 0B 94              		R2=[bp+11]	// QImode move
000080DA C2 D2              		[R2]=R1	// QImode move
00000880                    	.debug
00000880 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
00000893 5B 00 00 00        		.dd LM29-_show
00000895 0D 00 0A 00        		.dw 0x0d,0x0a
000080DB                    	.code
                            	LM29:
000080DB 05 93              		R1=BP	// QImode move
000080DC 0D 05 01 00        		R2=BP+1
000080DE 02 93              		R1=R2	// QImode move
000080DF 0A 07 03 00        		R3=R2+3
000080E1 0C D6              		[bp+12]=R3	// QImode move
000080E2 0A 92              		R1=[bp+10]	// QImode move
000080E3 0A 98              		R4=[bp+10]	// QImode move
000080E4 0C 05 01 00        		R2=R4+1
000080E6 02 97              		R3=R2	// QImode move
000080E7 C3 92              		R1=[R3]	// QImode move
000080E8 0A 95 10 27        		R2=10000	// QImode move
000080EA C8 D4              		[SP--]=R2	// QImode move
000080EB C8 D2              		[SP--]=R1	// QImode move
000080EC 40 F0 49 82        		call __modi1	// call with return value
000080EE 42 00              		SP = SP + 2	//SP
000080EF 0A 95 E8 03        		R2=1000	// QImode move
000080F1 C8 D4              		[SP--]=R2	// QImode move
000080F2 C8 D2              		[SP--]=R1	// QImode move
000080F3 40 F0 18 82        		call __divi1	// call with return value
000080F5 42 00              		SP = SP + 2	//SP
000080F6 0B 97 01 00        		R3=_tb	// QImode move
000080F8 03 95              		R2=R3	// QImode move
000080F9 01 05              		R2 = R2 + R1	//addqi3
000080FA 02 99              		R4=R2	// QImode move
000080FB C4 92              		R1=[R4]	// QImode move
000080FC 0C 94              		R2=[bp+12]	// QImode move
000080FD C2 D2              		[R2]=R1	// QImode move
00000897                    	.debug
00000897 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
000008AA 7E 00 00 00        		.dd LM30-_show
000008AC 0D 00 0A 00        		.dw 0x0d,0x0a
000080FE                    	.code
                            	LM30:
000080FE 05 93              		R1=BP	// QImode move
000080FF 0D 07 01 00        		R3=BP+1
00008101 03 95              		R2=R3	// QImode move
00008102 0B 03 03 00        		R1=R3+3
00008104 05 95              		R2=BP	// QImode move
00008105 0D 07 01 00        		R3=BP+1
00008107 03 95              		R2=R3	// QImode move
00008108 43 06              		R3=R3+3
00008109 03 99              		R4=R3	// QImode move
0000810A C4 94              		R2=[R4]	// QImode move
0000810B 14 99 0C 00        		R4=[_dot]	// QImode move
0000810D 04 A5              		R2|=R4
0000810E 01 99              		R4=R1	// QImode move
0000810F C4 D4              		[R4]=R2	// QImode move
000008AE                    	.debug
000008AE 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
000008C1 90 00 00 00        		.dd LM31-_show
000008C3 0D 00 0A 00        		.dw 0x0d,0x0a
00008110                    	.code
                            	LM31:
00008110 05 93              		R1=BP	// QImode move
00008111 0D 05 01 00        		R2=BP+1
00008113 02 93              		R1=R2	// QImode move
00008114 0A 03 04 00        		R1=R2+4
00008116 0D D2              		[bp+13]=R1	// QImode move
00008117 0A 92              		R1=[bp+10]	// QImode move
00008118 0A 96              		R3=[bp+10]	// QImode move
00008119 0B 05 01 00        		R2=R3+1
0000811B 02 99              		R4=R2	// QImode move
0000811C C4 92              		R1=[R4]	// QImode move
0000811D 0A 95 64 00        		R2=100	// QImode move
0000811F C8 D4              		[SP--]=R2	// QImode move
00008120 C8 D2              		[SP--]=R1	// QImode move
00008121 40 F0 18 82        		call __divi1	// call with return value
00008123 42 00              		SP = SP + 2	//SP
00008124 4A 94              		R2=10	// QImode move
00008125 C8 D4              		[SP--]=R2	// QImode move
00008126 C8 D2              		[SP--]=R1	// QImode move
00008127 40 F0 49 82        		call __modi1	// call with return value
00008129 42 00              		SP = SP + 2	//SP
0000812A 0B 97 01 00        		R3=_tb	// QImode move
0000812C 03 95              		R2=R3	// QImode move
0000812D 01 05              		R2 = R2 + R1	//addqi3
0000812E 02 97              		R3=R2	// QImode move
0000812F C3 92              		R1=[R3]	// QImode move
00008130 0D 98              		R4=[bp+13]	// QImode move
00008131 C4 D2              		[R4]=R1	// QImode move
000008C5                    	.debug
000008C5 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
000008D8 B2 00 00 00        		.dd LM32-_show
000008DA 0D 00 0A 00        		.dw 0x0d,0x0a
00008132                    	.code
                            	LM32:
00008132 0F 9F 36 81        		pc=L21	// Indirect jump
                            	L22:
000008DC                    	.debug
000008DC 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
000008EF B4 00 00 00        		.dd LM33-_show
000008F1 0D 00 0A 00        		.dw 0x0d,0x0a
00008134                    	.code
                            	LM33:
00008134 0F 9F BE 81        		pc=L19	// Indirect jump
                            	L23:
                            	L21:
000008F3                    	.debug
000008F3 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
00000906 B6 00 00 00        		.dd LM34-_show
00000908 0D 00 0A 00        		.dw 0x0d,0x0a
00008136                    	.code
                            	LM34:
00008136 05 93              		R1=BP	// QImode move
00008137 0D 05 01 00        		R2=BP+1
00008139 02 93              		R1=R2	// QImode move
0000813A 45 04              		R2=R2+5
0000813B 11 93 0B 00        		R1=[_tb+10]	// QImode move
0000813D 02 97              		R3=R2	// QImode move
0000813E C3 D2              		[R3]=R1	// QImode move
0000090A                    	.debug
0000090A 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
0000091D BF 00 00 00        		.dd LM35-_show
0000091F 0D 00 0A 00        		.dw 0x0d,0x0a
0000813F                    	.code
                            	LM35:
0000813F 05 93              		R1=BP	// QImode move
00008140 0D 05 01 00        		R2=BP+1
00008142 02 93              		R1=R2	// QImode move
00008143 0A 09 06 00        		R4=R2+6
00008145 0E D8              		[bp+14]=R4	// QImode move
00008146 0A 92              		R1=[bp+10]	// QImode move
00008147 0A 92              		R1=[bp+10]	// QImode move
00008148 09 05 02 00        		R2=R1+2
0000814A 02 97              		R3=R2	// QImode move
0000814B C3 92              		R1=[R3]	// QImode move
0000814C 4A 94              		R2=10	// QImode move
0000814D C8 D4              		[SP--]=R2	// QImode move
0000814E C8 D2              		[SP--]=R1	// QImode move
0000814F 40 F0 18 82        		call __divi1	// call with return value
00008151 42 00              		SP = SP + 2	//SP
00008152 0B 97 01 00        		R3=_tb	// QImode move
00008154 03 95              		R2=R3	// QImode move
00008155 01 05              		R2 = R2 + R1	//addqi3
00008156 02 99              		R4=R2	// QImode move
00008157 C4 92              		R1=[R4]	// QImode move
00008158 14 99 0C 00        		R4=[_dot]	// QImode move
0000815A 04 A3              		R1|=R4
0000815B 0E 98              		R4=[bp+14]	// QImode move
0000815C C4 D2              		[R4]=R1	// QImode move
00000921                    	.debug
00000921 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
00000934 DD 00 00 00        		.dd LM36-_show
00000936 0D 00 0A 00        		.dw 0x0d,0x0a
0000815D                    	.code
                            	LM36:
0000815D 05 93              		R1=BP	// QImode move
0000815E 0D 05 01 00        		R2=BP+1
00008160 02 93              		R1=R2	// QImode move
00008161 0A 03 07 00        		R1=R2+7
00008163 0F D2              		[bp+15]=R1	// QImode move
00008164 0A 92              		R1=[bp+10]	// QImode move
00008165 0A 96              		R3=[bp+10]	// QImode move
00008166 0B 05 02 00        		R2=R3+2
00008168 02 99              		R4=R2	// QImode move
00008169 C4 92              		R1=[R4]	// QImode move
0000816A 4A 94              		R2=10	// QImode move
0000816B C8 D4              		[SP--]=R2	// QImode move
0000816C C8 D2              		[SP--]=R1	// QImode move
0000816D 40 F0 49 82        		call __modi1	// call with return value
0000816F 42 00              		SP = SP + 2	//SP
00008170 0B 97 01 00        		R3=_tb	// QImode move
00008172 03 95              		R2=R3	// QImode move
00008173 01 05              		R2 = R2 + R1	//addqi3
00008174 02 97              		R3=R2	// QImode move
00008175 C3 92              		R1=[R3]	// QImode move
00008176 0F 98              		R4=[bp+15]	// QImode move
00008177 C4 D2              		[R4]=R1	// QImode move
00000938                    	.debug
00000938 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
0000094B F8 00 00 00        		.dd LM37-_show
0000094D 0D 00 0A 00        		.dw 0x0d,0x0a
00008178                    	.code
                            	LM37:
00008178 05 93              		R1=BP	// QImode move
00008179 0D 05 09 00        		R2=BP+9
0000817B 40 92              		R1=0	// QImode move
0000817C 02 97              		R3=R2	// QImode move
0000817D C3 D2              		[R3]=R1	// QImode move
                            	L24:
0000817E 05 93              		R1=BP	// QImode move
0000817F 0D 05 09 00        		R2=BP+9
00008181 02 99              		R4=R2	// QImode move
00008182 C4 92              		R1=[R4]	// QImode move
00008183 09 43 63 00        		CMP R1,99	// QImode compare
00008185 04 8E 01 EE        		NSJNA L27	//QImode LEU
         00 EE      
00008188 0F 9F BE 81        		pc=L25	// Indirect jump
                            	L27:
0000094F                    	.debug
0000094F 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
00000962 0A 01 00 00        		.dd LM38-_show
00000964 0D 00 0A 00        		.dw 0x0d,0x0a
0000818A                    	.code
                            	LM38:
0000818A 40 92              		R1=0	// QImode move
0000818B C5 D2              		[BP]=R1	// QImode move
                            	L28:
0000818C C5 92              		R1=[BP]	// QImode move
0000818D 47 42              		CMP R1,7	// QImode compare
0000818E 04 8E 01 EE        		NSJNA L31	//QImode LEU
         00 EE      
00008191 0F 9F AD 81        		pc=L26	// Indirect jump
                            	L31:
00000966                    	.debug
00000966 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
00000979 13 01 00 00        		.dd LM39-_show
0000097B 0D 00 0A 00        		.dw 0x0d,0x0a
00008193                    	.code
                            	LM39:
00008193 09 93 00 01        		R1=256	// QImode move
00008195 C5 94              		R2=[BP]	// QImode move
00008196 C8 D4              		[SP--]=R2	// QImode move
00008197 C8 D2              		[SP--]=R1	// QImode move
00008198 40 F0 6D 82        		call __lshiu1	// call with return value
0000819A 42 00              		SP = SP + 2	//SP
0000819B 05 95              		R2=BP	// QImode move
0000819C 0D 07 01 00        		R3=BP+1
0000819E C5 98              		R4=[BP]	// QImode move
0000819F 03 95              		R2=R3	// QImode move
000081A0 04 05              		R2 = R2 + R4	//addqi3
000081A1 02 97              		R3=R2	// QImode move
000081A2 C3 A2              		R1|=[R3]	// iorqi3_r0R
000081A3 19 D3 00 70        		[28672]=R1	// QImode move
0000097D                    	.debug
0000097D 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
00000990 25 01 00 00        		.dd LM40-_show
00000992 0D 00 0A 00        		.dw 0x0d,0x0a
000081A5                    	.code
                            	LM40:
000081A5 40 F0 65 80        		call _shortdelay	// call without return value
00000994                    	.debug
00000994 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
000009A7 27 01 00 00        		.dd LM41-_show
000009A9 0D 00 0A 00        		.dw 0x0d,0x0a
000081A7                    	.code
                            	LM41:
                            	L30:
000081A7 C5 92              		R1=[BP]	// QImode move
000081A8 09 05 01 00        		R2=R1+1
000081AA C5 D4              		[BP]=R2	// QImode move
000081AB 0F 9F 8C 81        		pc=L28	// Indirect jump
                            	L29:
000009AB                    	.debug
000009AB 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
000009BE 2D 01 00 00        		.dd LM42-_show
000009C0 0D 00 0A 00        		.dw 0x0d,0x0a
000081AD                    	.code
                            	LM42:
                            	L26:
000081AD 05 93              		R1=BP	// QImode move
000081AE 0D 05 09 00        		R2=BP+9
000081B0 05 97              		R3=BP	// QImode move
000081B1 0D 03 09 00        		R1=BP+9
000081B3 05 95              		R2=BP	// QImode move
000081B4 0D 07 09 00        		R3=BP+9
000081B6 03 99              		R4=R3	// QImode move
000081B7 C4 94              		R2=[R4]	// QImode move
000081B8 0A 07 01 00        		R3=R2+1
000081BA 01 95              		R2=R1	// QImode move
000081BB C2 D6              		[R2]=R3	// QImode move
000081BC 0F 9F 7E 81        		pc=L24	// Indirect jump
                            	L25:
000009C2                    	.debug
000009C2 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
000009D5 3E 01 00 00        		.dd LM43-_show
000009D7 0D 00 0A 00        		.dw 0x0d,0x0a
000081BE                    	.code
                            	LM43:
                            	LBE4:
000009D9                    	.debug
000009D9 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
000009EC 3E 01 00 00        		.dd LM44-_show
000009EE 0D 00 0A 00        		.dw 0x0d,0x0a
000081BE                    	.code
                            	LM44:
                            	L19:
                            	
000081BE 50 00              		sp+=16
000081BF 88 98              		pop bp from [sp]
000081C0 90 9A              		retf
                            		.endp	// end of show
                            	
000009F0                    	.debug
000009F0 2E 00 73 00        		.dw '.stabs "mode:p1",160,0,0,19',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 6F 00
         64 00 65 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         39 00 0D 00
         0A 00      
000081C1                    	.CODE
00000A0D                    	.debug
00000A0D 2E 00 73 00        		.dw '.stabs "freq:p1",160,0,0,20',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 72 00
         65 00 71 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         30 00 0D 00
         0A 00      
000081C1                    	.CODE
00000A2A                    	.debug
00000A2A 2E 00 73 00        		.dw '.stabs "mvol:p1",160,0,0,21',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 76 00
         6F 00 6C 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         31 00 0D 00
         0A 00      
000081C1                    	.CODE
00000A47                    	.debug
00000A47 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000A59 07 00 00 00        		.dd LBB4-_show
00000A5B 0D 00 0A 00        		.dw 0x0d,0x0a
000081C1                    	.code
00000A5D                    	.debug
00000A5D 2E 00 73 00        		.dw '.stabs "count:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         75 00 6E 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000081C1                    	.CODE
00000A79                    	.debug
00000A79 2E 00 73 00        		.dw '.stabs "tmp:21",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         70 00 3A 00
         32 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
000081C1                    	.CODE
00000A94                    	.debug
00000A94 2E 00 73 00        		.dw '.stabs "j:4",128,0,0,9',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 39 00
         0D 00 0A 00
000081C1                    	.CODE
00000AAC                    	.debug
00000AAC 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000ABE 3E 01 00 00        		.dd LBE4-_show
00000AC0 0D 00 0A 00        		.dw 0x0d,0x0a
000081C1                    	.code
00000AC2                    	.debug
00000AC2 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000ACB 41 01 00 00        		.dd LME3-_show
00000ACD 0D 00 0A 00        		.dw 0x0d,0x0a
000081C1                    	.code
                            	LME3:
000081C1                    	.code
00000ACF                    	.debug
00000ACF 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         9B 01 00 00
         0D 00 0A 00
000081C1                    	.CODE
                            	.public _main
                            	_main:	.proc
00000AED                    	.debug
00000AED 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
00000B00 00 00 00 00        		.dd LM45-_main
00000B02 0D 00 0A 00        		.dw 0x0d,0x0a
000081C1                    	.code
                            	LM45:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000081C1 88 DA              		push bp to [sp]
000081C2 41 20              		sp-=1
000081C3 08 0B 01 00        		bp=sp+1
                            	
000081C5 0D 03 04 00        		R1=BP+4
000081C7 C5 D2              		[BP]=R1	// QImode move
00000B04                    	.debug
00000B04 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
00000B17 07 00 00 00        		.dd LM46-_main
00000B19 0D 00 0A 00        		.dw 0x0d,0x0a
000081C8                    	.code
                            	LM46:
000081C8 41 62              		R1=(-1)	// QImode move
000081C9 19 D3 02 70        		[28674]=R1	// QImode move
00000B1B                    	.debug
00000B1B 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
00000B2E 0A 00 00 00        		.dd LM47-_main
00000B30 0D 00 0A 00        		.dw 0x0d,0x0a
000081CB                    	.code
                            	LM47:
000081CB 41 62              		R1=(-1)	// QImode move
000081CC 19 D3 03 70        		[28675]=R1	// QImode move
00000B32                    	.debug
00000B32 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
00000B45 0D 00 00 00        		.dd LM48-_main
00000B47 0D 00 0A 00        		.dw 0x0d,0x0a
000081CE                    	.code
                            	LM48:
000081CE 41 62              		R1=(-1)	// QImode move
000081CF 19 D3 00 70        		[28672]=R1	// QImode move
00000B49                    	.debug
00000B49 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00000B5C 10 00 00 00        		.dd LM49-_main
00000B5E 0D 00 0A 00        		.dw 0x0d,0x0a
000081D1                    	.code
                            	LM49:
                            	L37:
000081D1 0F 9F D5 81        		pc=L39	// Indirect jump
000081D3 0F 9F E1 81        		pc=L38	// Indirect jump
                            	L39:
00000B60                    	.debug
00000B60 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
00000B73 14 00 00 00        		.dd LM50-_main
00000B75 0D 00 0A 00        		.dw 0x0d,0x0a
000081D5                    	.code
                            	LM50:
000081D5 54 92              		R1=20	// QImode move
000081D6 C8 D2              		[SP--]=R1	// QImode move
000081D7 09 93 10 27        		R1=10000	// QImode move
000081D9 C8 D2              		[SP--]=R1	// QImode move
000081DA 42 92              		R1=2	// QImode move
000081DB C8 D2              		[SP--]=R1	// QImode move
000081DC 40 F0 80 80        		call _show	// call without return value
000081DE 43 00              		SP = SP + 3	//SP
00000B77                    	.debug
00000B77 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
00000B8A 1E 00 00 00        		.dd LM51-_main
00000B8C 0D 00 0A 00        		.dw 0x0d,0x0a
000081DF                    	.code
                            	LM51:
000081DF 0F 9F D1 81        		pc=L37	// Indirect jump
                            	L38:
00000B8E                    	.debug
00000B8E 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
00000BA1 20 00 00 00        		.dd LM52-_main
00000BA3 0D 00 0A 00        		.dw 0x0d,0x0a
000081E1                    	.code
                            	LM52:
00000BA5                    	.debug
00000BA5 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
00000BB8 20 00 00 00        		.dd LM53-_main
00000BBA 0D 00 0A 00        		.dw 0x0d,0x0a
000081E1                    	.code
                            	LM53:
                            	L36:
                            	
000081E1 41 00              		sp+=1
000081E2 88 98              		pop bp from [sp]
000081E3 90 9A              		retf
                            		.endp	// end of main
                            	
00000BBC                    	.debug
00000BBC 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000BC5 23 00 00 00        		.dd LME4-_main
00000BC7 0D 00 0A 00        		.dw 0x0d,0x0a
000081E4                    	.code
                            	LME4:
0000000D                    	.iram
                            	.public _buffer
                            	_buffer:
0000000D 00 00 00 00        		.dw 8 dup(0)
         00 00 00 00
         00 00 00 00
         00 00 00 00
                            	.external __lshiu1
                            	.external __modi1
                            	.external __divi1
                            		.end
0 error(s), 0 warning(s).

