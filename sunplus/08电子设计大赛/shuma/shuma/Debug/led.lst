Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\PROGRA~1\Sunplus\cc1.exe C:\DOCUME~1\GAODEB~1\LOCALS~1\Temp\cc6xbaaa.i -fkeep-inline-functions -quiet -dumpbase led.c -mglobal-var-iram -gstabs -Wall -o .\Debug/led.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "C:/Documents and Settings/gao debang/×ÀÃæ/¸öÈË¹¤³ÌÎÄ¼þ¼Ð/gao/shuma/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 3A 00
         2F 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         20 00 61 00
         6E 00 64 00
         20 00 53 00
         65 00 74 00
         74 00 69 00
         6E 00 67 00
         73 00 2F 00
         67 00 61 00
         6F 00 20 00
         64 00 65 00
         62 00 61 00
         6E 00 67 00
         2F 00 D7 00
         C0 00 C3 00
         E6 00 2F 00
         B8 00 F6 00
         C8 00 CB 00
         B9 00 A4 00
         B3 00 CC 00
         CE 00 C4 00
         BC 00 FE 00
         BC 00 D0 00
         2F 00 67 00
         61 00 6F 00
         2F 00 73 00
         68 00 75 00
         6D 00 61 00
         2F 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.code
0000005C                    	.debug
0000005C 2E 00 73 00        		.dw '.stabs "C:/Documents and Settings/gao debang/×/300Ã/346/¸/366È/313¹/244³/314Î/304¼/376¼/320/gao/shuma/led.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 3A 00
         2F 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         20 00 61 00
         6E 00 64 00
         20 00 53 00
         65 00 74 00
         74 00 69 00
         6E 00 67 00
         73 00 2F 00
         67 00 61 00
         6F 00 20 00
         64 00 65 00
         62 00 61 00
         6E 00 67 00
         2F 00 D7 00
         2F 00 33 00
         30 00 30 00
         C3 00 2F 00
         33 00 34 00
         36 00 2F 00
         B8 00 2F 00
         33 00 36 00
         36 00 C8 00
         2F 00 33 00
         31 00 33 00
         B9 00 2F 00
         32 00 34 00
         34 00 B3 00
         2F 00 33 00
         31 00 34 00
         CE 00 2F 00
         33 00 30 00
         34 00 BC 00
         2F 00 33 00
         37 00 36 00
         BC 00 2F 00
         33 00 32 00
         30 00 2F 00
         67 00 61 00
         6F 00 2F 00
         73 00 68 00
         75 00 6D 00
         61 00 2F 00
         6C 00 65 00
         64 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.code
00008026                    	.code
                            	Ltext0:
000000D8                    	.debug
000000D8 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000104                    	.debug
00000104 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000012A                    	.debug
0000012A 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000165                    	.debug
00000165 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000195                    	.debug
00000195 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000001CF                    	.debug
000001CF 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000020F                    	.debug
0000020F 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
0000024E                    	.debug
0000024E 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000280                    	.debug
00000280 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000002B6                    	.debug
000002B6 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000002EC                    	.debug
000002EC 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
0000031F                    	.debug
0000031F 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000345                    	.debug
00000345 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
0000036C                    	.debug
0000036C 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000398                    	.debug
00000398 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000003D9                    	.debug
000003D9 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000408                    	.debug
00000408 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000438                    	.debug
00000438 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
0000046D                    	.debug
0000046D 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
                            	.public _tb
00000001                    	.iram
                            	_tb:
00000001 3F 00              		.dw 63
00000002 06 00              		.dw 6
00000003 5B 00              		.dw 91
00000004 4F 00              		.dw 79
00000005 66 00              		.dw 102
00000006 6D 00              		.dw 109
00000007 7D 00              		.dw 125
00000008 07 00              		.dw 7
00000009 7F 00              		.dw 127
0000000A 6F 00              		.dw 111
0000000B 40 00              		.dw 64
0000048D                    	.debug
0000048D 2E 00 73 00        		.dw '.stabs "tb:G20=ar1;0;10;4",32,0,0,',0,0,offset _tb,seg _tb,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 62 00
         3A 00 47 00
         32 00 30 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 31 00
         30 00 3B 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.CODE
                            	.public _dot
0000000C                    	.iram
                            	_dot:
0000000C 80 00              		.dw 128
000004B5                    	.debug
000004B5 2E 00 73 00        		.dw '.stabs "dot:G4",32,0,0,',0,0,offset _dot,seg _dot,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         74 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0B 00
         00 00 0D 00
         0A 00      
00008026                    	.CODE
000004D2                    	.debug
000004D2 2E 00 73 00        		.dw '.stabs "buffer:G21=ar1;0;7;4",32,0,0,',0,0,offset _buffer,seg _buffer,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         62 00 75 00
         66 00 66 00
         65 00 72 00
         3A 00 47 00
         32 00 31 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 37 00
         3B 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 0C 00
         00 00 0D 00
         0A 00      
00008026                    	.CODE
00008026                    	.code
000004FD                    	.debug
000004FD 2E 00 73 00        		.dw '.stabs "longdelay:F19",36,0,0,',0,0,offset _longdelay,seg _longdelay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         64 00 65 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.CODE
                            	.public _longdelay
                            	_longdelay:	.proc
00000521                    	.debug
00000521 2E 00 73 00        		.dw '.stabn 0x44,0,6,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 2C 00
         00 00 00 00
00000533 00 00 00 00        		.dd LM1-_longdelay
00000535 0D 00 0A 00        		.dw 0x0d,0x0a
00008026                    	.code
                            	LM1:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008026 88 DA              		push bp to [sp]
00008027 43 20              		sp-=3
00008028 08 0B 01 00        		bp=sp+1
                            	
0000802A 0D 03 06 00        		R1=BP+6
00000537                    	.debug
00000537 2E 00 73 00        		.dw '.stabn 0x44,0,7,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 2C 00
         00 00 00 00
00000549 06 00 00 00        		.dd LM2-_longdelay
0000054B 0D 00 0A 00        		.dw 0x0d,0x0a
0000802C                    	.code
                            	LM2:
                            	LBB2:
0000054D                    	.debug
0000054D 2E 00 73 00        		.dw '.stabn 0x44,0,8,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 2C 00
         00 00 00 00
0000055F 06 00 00 00        		.dd LM3-_longdelay
00000561 0D 00 0A 00        		.dw 0x0d,0x0a
0000802C                    	.code
                            	LM3:
0000802C 40 94              		R2=0	// QImode move
0000802D C5 D4              		[BP]=R2	// QImode move
                            	L3:
0000802E C5 94              		R2=[BP]	// QImode move
0000802F 0A 45 57 02        		CMP R2,599	// QImode compare
00008031 04 AE 01 EE        		NSJNG L6	//QImode LE
         00 EE      
00008034 0F 9F 62 80        		pc=L4	// Indirect jump
                            	L6:
00000563                    	.debug
00000563 2E 00 73 00        		.dw '.stabn 0x44,0,9,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 2C 00
         00 00 00 00
00000575 10 00 00 00        		.dd LM4-_longdelay
00000577 0D 00 0A 00        		.dw 0x0d,0x0a
00008036                    	.code
                            	LM4:
00008036 05 95              		R2=BP	// QImode move
00008037 0D 07 01 00        		R3=BP+1
00008039 40 94              		R2=0	// QImode move
0000803A 03 99              		R4=R3	// QImode move
0000803B C4 D4              		[R4]=R2	// QImode move
                            	L7:
0000803C 05 95              		R2=BP	// QImode move
0000803D 0D 07 01 00        		R3=BP+1
0000803F 03 99              		R4=R3	// QImode move
00008040 C4 94              		R2=[R4]	// QImode move
00008041 40 44              		CMP R2,0	// QImode test
00008042 04 4E 01 EE        		NSJNZ L10	//QImode NE
         00 EE      
00008045 0F 9F 5C 80        		pc=L5	// Indirect jump
                            	L10:
00000579                    	.debug
00000579 2E 00 73 00        		.dw '.stabn 0x44,0,10,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         2C 00 00 00
         00 00      
0000058C 21 00 00 00        		.dd LM5-_longdelay
0000058E 0D 00 0A 00        		.dw 0x0d,0x0a
00008047                    	.code
                            	LM5:
00008047 41 94              		R2=1	// QImode move
00008048 1A D5 12 70        		[28690]=R2	// QImode move
00000590                    	.debug
00000590 2E 00 73 00        		.dw '.stabn 0x44,0,9,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 2C 00
         00 00 00 00
000005A2 24 00 00 00        		.dd LM6-_longdelay
000005A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000804A                    	.code
                            	LM6:
                            	L9:
0000804A 05 95              		R2=BP	// QImode move
0000804B 0D 07 01 00        		R3=BP+1
0000804D 05 99              		R4=BP	// QImode move
0000804E 0D 05 01 00        		R2=BP+1
00008050 05 97              		R3=BP	// QImode move
00008051 0D 07 01 00        		R3=BP+1
00008053 02 D6              		[bp+2]=R3	// QImode move
00008054 02 98              		R4=[bp+2]	// QImode move
00008055 C4 96              		R3=[R4]	// QImode move
00008056 0B 09 FF FF        		R4=R3+(-1)
00008058 02 97              		R3=R2	// QImode move
00008059 C3 D8              		[R3]=R4	// QImode move
0000805A 0F 9F 3C 80        		pc=L7	// Indirect jump
                            	L8:
000005A6                    	.debug
000005A6 2E 00 73 00        		.dw '.stabn 0x44,0,8,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 2C 00
         00 00 00 00
000005B8 36 00 00 00        		.dd LM7-_longdelay
000005BA 0D 00 0A 00        		.dw 0x0d,0x0a
0000805C                    	.code
                            	LM7:
                            	L5:
0000805C C5 94              		R2=[BP]	// QImode move
0000805D 0A 07 01 00        		R3=R2+1
0000805F C5 D6              		[BP]=R3	// QImode move
00008060 0F 9F 2E 80        		pc=L3	// Indirect jump
                            	L4:
000005BC                    	.debug
000005BC 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
000005CF 3C 00 00 00        		.dd LM8-_longdelay
000005D1 0D 00 0A 00        		.dw 0x0d,0x0a
00008062                    	.code
                            	LM8:
                            	LBE2:
000005D3                    	.debug
000005D3 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
000005E6 3C 00 00 00        		.dd LM9-_longdelay
000005E8 0D 00 0A 00        		.dw 0x0d,0x0a
00008062                    	.code
                            	LM9:
                            	L2:
                            	
00008062 43 00              		sp+=3
00008063 88 98              		pop bp from [sp]
00008064 90 9A              		retf
                            		.endp	// end of longdelay
                            	
000005EA                    	.debug
000005EA 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000005FC 06 00 00 00        		.dd LBB2-_longdelay
000005FE 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
00000600                    	.debug
00000600 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008065                    	.CODE
00000618                    	.debug
00000618 2E 00 73 00        		.dw '.stabs "j:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
00008065                    	.CODE
00000630                    	.debug
00000630 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000642 3C 00 00 00        		.dd LBE2-_longdelay
00000644 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
00000646                    	.debug
00000646 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000064F 3F 00 00 00        		.dd LME1-_longdelay
00000651 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
                            	LME1:
00008065                    	.code
00000653                    	.debug
00000653 2E 00 73 00        		.dw '.stabs "shortdelay:F19",36,0,0,',0,0,offset _shortdelay,seg _shortdelay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 64 00
         65 00 6C 00
         61 00 79 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 3F 00
         00 00 0D 00
         0A 00      
00008065                    	.CODE
                            	.public _shortdelay
                            	_shortdelay:	.proc
00000678                    	.debug
00000678 2E 00 73 00        		.dw '.stabn 0x44,0,13,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         2C 00 00 00
         00 00      
0000068B 00 00 00 00        		.dd LM10-_shortdelay
0000068D 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
                            	LM10:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008065 88 DA              		push bp to [sp]
00008066 41 20              		sp-=1
00008067 08 0B 01 00        		bp=sp+1
                            	
00008069 0D 03 04 00        		R1=BP+4
0000068F                    	.debug
0000068F 2E 00 73 00        		.dw '.stabn 0x44,0,14,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         2C 00 00 00
         00 00      
000006A2 06 00 00 00        		.dd LM11-_shortdelay
000006A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000806B                    	.code
                            	LM11:
                            	LBB3:
000006A6                    	.debug
000006A6 2E 00 73 00        		.dw '.stabn 0x44,0,15,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         2C 00 00 00
         00 00      
000006B9 06 00 00 00        		.dd LM12-_shortdelay
000006BB 0D 00 0A 00        		.dw 0x0d,0x0a
0000806B                    	.code
                            	LM12:
0000806B 54 94              		R2=20	// QImode move
0000806C C5 D4              		[BP]=R2	// QImode move
                            	L14:
0000806D C5 94              		R2=[BP]	// QImode move
0000806E 40 44              		CMP R2,0	// QImode test
0000806F 04 4E 01 EE        		NSJNZ L17	//QImode NE
         00 EE      
00008072 0F 9F 7D 80        		pc=L15	// Indirect jump
                            	L17:
000006BD                    	.debug
000006BD 2E 00 73 00        		.dw '.stabn 0x44,0,16,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         2C 00 00 00
         00 00      
000006D0 0F 00 00 00        		.dd LM13-_shortdelay
000006D2 0D 00 0A 00        		.dw 0x0d,0x0a
00008074                    	.code
                            	LM13:
00008074 41 94              		R2=1	// QImode move
00008075 1A D5 12 70        		[28690]=R2	// QImode move
000006D4                    	.debug
000006D4 2E 00 73 00        		.dw '.stabn 0x44,0,15,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         2C 00 00 00
         00 00      
000006E7 12 00 00 00        		.dd LM14-_shortdelay
000006E9 0D 00 0A 00        		.dw 0x0d,0x0a
00008077                    	.code
                            	LM14:
                            	L16:
00008077 C5 94              		R2=[BP]	// QImode move
00008078 0A 07 FF FF        		R3=R2+(-1)
0000807A C5 D6              		[BP]=R3	// QImode move
0000807B 0F 9F 6D 80        		pc=L14	// Indirect jump
                            	L15:
000006EB                    	.debug
000006EB 2E 00 73 00        		.dw '.stabn 0x44,0,17,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         2C 00 00 00
         00 00      
000006FE 18 00 00 00        		.dd LM15-_shortdelay
00000700 0D 00 0A 00        		.dw 0x0d,0x0a
0000807D                    	.code
                            	LM15:
                            	LBE3:
00000702                    	.debug
00000702 2E 00 73 00        		.dw '.stabn 0x44,0,17,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         2C 00 00 00
         00 00      
00000715 18 00 00 00        		.dd LM16-_shortdelay
00000717 0D 00 0A 00        		.dw 0x0d,0x0a
0000807D                    	.code
                            	LM16:
                            	L13:
                            	
0000807D 41 00              		sp+=1
0000807E 88 98              		pop bp from [sp]
0000807F 90 9A              		retf
                            		.endp	// end of shortdelay
                            	
00000719                    	.debug
00000719 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000072B 06 00 00 00        		.dd LBB3-_shortdelay
0000072D 0D 00 0A 00        		.dw 0x0d,0x0a
00008080                    	.code
0000072F                    	.debug
0000072F 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008080                    	.CODE
00000747                    	.debug
00000747 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000759 18 00 00 00        		.dd LBE3-_shortdelay
0000075B 0D 00 0A 00        		.dw 0x0d,0x0a
00008080                    	.code
0000075D                    	.debug
0000075D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000766 1B 00 00 00        		.dd LME2-_shortdelay
00000768 0D 00 0A 00        		.dw 0x0d,0x0a
00008080                    	.code
                            	LME2:
00008080                    	.code
0000076A                    	.debug
0000076A 2E 00 73 00        		.dw '.stabs "show:F19",36,0,0,',0,0,offset _show,seg _show,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 77 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 5A 00
         00 00 0D 00
         0A 00      
00008080                    	.CODE
                            	.public _show
                            	_show:	.proc
00000789                    	.debug
00000789 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
0000079C 00 00 00 00        		.dd LM17-_show
0000079E 0D 00 0A 00        		.dw 0x0d,0x0a
00008080                    	.code
                            	LM17:
                            		// total=16, vars=16
                            		// frame_pointer_needed: 1
00008080 88 DA              		push bp to [sp]
00008081 50 20              		sp-=16
00008082 08 0B 01 00        		bp=sp+1
                            	
00008084 0D 03 13 00        		R1=BP+19
00008086 0A D2              		[bp+10]=R1	// QImode move
000007A0                    	.debug
000007A0 2E 00 73 00        		.dw '.stabn 0x44,0,27,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 37 00
         2C 00 00 00
         00 00      
000007B3 07 00 00 00        		.dd LM18-_show
000007B5 0D 00 0A 00        		.dw 0x0d,0x0a
00008087                    	.code
                            	LM18:
                            	LBB4:
000007B7                    	.debug
000007B7 2E 00 73 00        		.dw '.stabn 0x44,0,30,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         2C 00 00 00
         00 00      
000007CA 07 00 00 00        		.dd LM19-_show
000007CC 0D 00 0A 00        		.dw 0x0d,0x0a
00008087                    	.code
                            	LM19:
00008087 05 95              		R2=BP	// QImode move
00008088 0D 03 01 00        		R1=BP+1
0000808A 0A 95 01 00        		R2=_tb	// QImode move
0000808C 0A 98              		R4=[bp+10]	// QImode move
0000808D C4 96              		R3=[R4]	// QImode move
0000808E 03 05              		R2 = R2 + R3	//addqi3
0000808F 02 99              		R4=R2	// QImode move
00008090 C4 96              		R3=[R4]	// QImode move
00008091 01 95              		R2=R1	// QImode move
00008092 C2 D6              		[R2]=R3	// QImode move
000007CE                    	.debug
000007CE 2E 00 73 00        		.dw '.stabn 0x44,0,31,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         2C 00 00 00
         00 00      
000007E1 13 00 00 00        		.dd LM20-_show
000007E3 0D 00 0A 00        		.dw 0x0d,0x0a
00008093                    	.code
                            	LM20:
00008093 05 93              		R1=BP	// QImode move
00008094 0D 05 01 00        		R2=BP+1
00008096 02 93              		R1=R2	// QImode move
00008097 41 04              		R2=R2+1
00008098 11 93 0B 00        		R1=[_tb+10]	// QImode move
0000809A 02 97              		R3=R2	// QImode move
0000809B C3 D2              		[R3]=R1	// QImode move
000007E5                    	.debug
000007E5 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
000007F8 1C 00 00 00        		.dd LM21-_show
000007FA 0D 00 0A 00        		.dw 0x0d,0x0a
0000809C                    	.code
                            	LM21:
0000809C 0A 92              		R1=[bp+10]	// QImode move
0000809D 0A 98              		R4=[bp+10]	// QImode move
0000809E 0C 05 01 00        		R2=R4+1
000080A0 02 97              		R3=R2	// QImode move
000080A1 C3 92              		R1=[R3]	// QImode move
000080A2 09 43 63 00        		CMP R1,99	// QImode compare
000080A4 06 BE 01 EE        		NSJG L20	//QImode GT
         00 EE      
000007FC                    	.debug
000007FC 2E 00 73 00        		.dw '.stabn 0x44,0,34,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         2C 00 00 00
         00 00      
0000080F 27 00 00 00        		.dd LM22-_show
00000811 0D 00 0A 00        		.dw 0x0d,0x0a
000080A7                    	.code
                            	LM22:
000080A7 0F 9F B7 81        		pc=L19	// Indirect jump
00000813                    	.debug
00000813 2E 00 73 00        		.dw '.stabn 0x44,0,35,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         2C 00 00 00
         00 00      
00000826 29 00 00 00        		.dd LM23-_show
00000828 0D 00 0A 00        		.dw 0x0d,0x0a
000080A9                    	.code
                            	LM23:
000080A9 0F 9F 2D 81        		pc=L21	// Indirect jump
                            	L20:
0000082A                    	.debug
0000082A 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
0000083D 2B 00 00 00        		.dd LM24-_show
0000083F 0D 00 0A 00        		.dw 0x0d,0x0a
000080AB                    	.code
                            	LM24:
000080AB 0A 92              		R1=[bp+10]	// QImode move
000080AC 0A 98              		R4=[bp+10]	// QImode move
000080AD 0C 05 01 00        		R2=R4+1
000080AF 02 97              		R3=R2	// QImode move
000080B0 C3 92              		R1=[R3]	// QImode move
000080B1 09 43 1F 4E        		CMP R1,19999	// QImode compare
000080B3 02 AE 0F 9F        		NSJG L22	//QImode GT
         2B 81      
00000841                    	.debug
00000841 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
00000854 36 00 00 00        		.dd LM25-_show
00000856 0D 00 0A 00        		.dw 0x0d,0x0a
000080B6                    	.code
                            	LM25:
000080B6 05 93              		R1=BP	// QImode move
000080B7 0D 05 01 00        		R2=BP+1
000080B9 02 93              		R1=R2	// QImode move
000080BA 0A 09 02 00        		R4=R2+2
000080BC 0B D8              		[bp+11]=R4	// QImode move
000080BD 0A 92              		R1=[bp+10]	// QImode move
000080BE 0A 92              		R1=[bp+10]	// QImode move
000080BF 09 05 01 00        		R2=R1+1
000080C1 02 97              		R3=R2	// QImode move
000080C2 C3 92              		R1=[R3]	// QImode move
000080C3 0A 95 10 27        		R2=10000	// QImode move
000080C5 C8 D4              		[SP--]=R2	// QImode move
000080C6 C8 D2              		[SP--]=R1	// QImode move
000080C7 40 F0 AA 82        		call __divi1	// call with return value
000080C9 42 00              		SP = SP + 2	//SP
000080CA 0B 97 01 00        		R3=_tb	// QImode move
000080CC 03 95              		R2=R3	// QImode move
000080CD 01 05              		R2 = R2 + R1	//addqi3
000080CE 02 99              		R4=R2	// QImode move
000080CF C4 92              		R1=[R4]	// QImode move
000080D0 0B 94              		R2=[bp+11]	// QImode move
000080D1 C2 D2              		[R2]=R1	// QImode move
00000858                    	.debug
00000858 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
0000086B 52 00 00 00        		.dd LM26-_show
0000086D 0D 00 0A 00        		.dw 0x0d,0x0a
000080D2                    	.code
                            	LM26:
000080D2 05 93              		R1=BP	// QImode move
000080D3 0D 05 01 00        		R2=BP+1
000080D5 02 93              		R1=R2	// QImode move
000080D6 0A 07 03 00        		R3=R2+3
000080D8 0C D6              		[bp+12]=R3	// QImode move
000080D9 0A 92              		R1=[bp+10]	// QImode move
000080DA 0A 98              		R4=[bp+10]	// QImode move
000080DB 0C 05 01 00        		R2=R4+1
000080DD 02 97              		R3=R2	// QImode move
000080DE C3 92              		R1=[R3]	// QImode move
000080DF 0A 95 10 27        		R2=10000	// QImode move
000080E1 C8 D4              		[SP--]=R2	// QImode move
000080E2 C8 D2              		[SP--]=R1	// QImode move
000080E3 40 F0 DB 82        		call __modi1	// call with return value
000080E5 42 00              		SP = SP + 2	//SP
000080E6 0A 95 E8 03        		R2=1000	// QImode move
000080E8 C8 D4              		[SP--]=R2	// QImode move
000080E9 C8 D2              		[SP--]=R1	// QImode move
000080EA 40 F0 AA 82        		call __divi1	// call with return value
000080EC 42 00              		SP = SP + 2	//SP
000080ED 0B 97 01 00        		R3=_tb	// QImode move
000080EF 03 95              		R2=R3	// QImode move
000080F0 01 05              		R2 = R2 + R1	//addqi3
000080F1 02 99              		R4=R2	// QImode move
000080F2 C4 92              		R1=[R4]	// QImode move
000080F3 0C 94              		R2=[bp+12]	// QImode move
000080F4 C2 D2              		[R2]=R1	// QImode move
0000086F                    	.debug
0000086F 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
00000882 75 00 00 00        		.dd LM27-_show
00000884 0D 00 0A 00        		.dw 0x0d,0x0a
000080F5                    	.code
                            	LM27:
000080F5 05 93              		R1=BP	// QImode move
000080F6 0D 07 01 00        		R3=BP+1
000080F8 03 95              		R2=R3	// QImode move
000080F9 0B 03 03 00        		R1=R3+3
000080FB 05 95              		R2=BP	// QImode move
000080FC 0D 07 01 00        		R3=BP+1
000080FE 03 95              		R2=R3	// QImode move
000080FF 43 06              		R3=R3+3
00008100 03 99              		R4=R3	// QImode move
00008101 C4 94              		R2=[R4]	// QImode move
00008102 14 99 0C 00        		R4=[_dot]	// QImode move
00008104 04 A5              		R2|=R4
00008105 01 99              		R4=R1	// QImode move
00008106 C4 D4              		[R4]=R2	// QImode move
00000886                    	.debug
00000886 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
00000899 87 00 00 00        		.dd LM28-_show
0000089B 0D 00 0A 00        		.dw 0x0d,0x0a
00008107                    	.code
                            	LM28:
00008107 05 93              		R1=BP	// QImode move
00008108 0D 05 01 00        		R2=BP+1
0000810A 02 93              		R1=R2	// QImode move
0000810B 0A 03 04 00        		R1=R2+4
0000810D 0D D2              		[bp+13]=R1	// QImode move
0000810E 0A 92              		R1=[bp+10]	// QImode move
0000810F 0A 96              		R3=[bp+10]	// QImode move
00008110 0B 05 01 00        		R2=R3+1
00008112 02 99              		R4=R2	// QImode move
00008113 C4 92              		R1=[R4]	// QImode move
00008114 0A 95 64 00        		R2=100	// QImode move
00008116 C8 D4              		[SP--]=R2	// QImode move
00008117 C8 D2              		[SP--]=R1	// QImode move
00008118 40 F0 AA 82        		call __divi1	// call with return value
0000811A 42 00              		SP = SP + 2	//SP
0000811B 4A 94              		R2=10	// QImode move
0000811C C8 D4              		[SP--]=R2	// QImode move
0000811D C8 D2              		[SP--]=R1	// QImode move
0000811E 40 F0 DB 82        		call __modi1	// call with return value
00008120 42 00              		SP = SP + 2	//SP
00008121 0B 97 01 00        		R3=_tb	// QImode move
00008123 03 95              		R2=R3	// QImode move
00008124 01 05              		R2 = R2 + R1	//addqi3
00008125 02 97              		R3=R2	// QImode move
00008126 C3 92              		R1=[R3]	// QImode move
00008127 0D 98              		R4=[bp+13]	// QImode move
00008128 C4 D2              		[R4]=R1	// QImode move
0000089D                    	.debug
0000089D 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
000008B0 A9 00 00 00        		.dd LM29-_show
000008B2 0D 00 0A 00        		.dw 0x0d,0x0a
00008129                    	.code
                            	LM29:
00008129 0F 9F 2D 81        		pc=L21	// Indirect jump
                            	L22:
000008B4                    	.debug
000008B4 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
000008C7 AB 00 00 00        		.dd LM30-_show
000008C9 0D 00 0A 00        		.dw 0x0d,0x0a
0000812B                    	.code
                            	LM30:
0000812B 0F 9F B7 81        		pc=L19	// Indirect jump
                            	L23:
                            	L21:
000008CB                    	.debug
000008CB 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
000008DE AD 00 00 00        		.dd LM31-_show
000008E0 0D 00 0A 00        		.dw 0x0d,0x0a
0000812D                    	.code
                            	LM31:
0000812D 05 93              		R1=BP	// QImode move
0000812E 0D 05 01 00        		R2=BP+1
00008130 02 93              		R1=R2	// QImode move
00008131 45 04              		R2=R2+5
00008132 11 93 0B 00        		R1=[_tb+10]	// QImode move
00008134 02 97              		R3=R2	// QImode move
00008135 C3 D2              		[R3]=R1	// QImode move
000008E2                    	.debug
000008E2 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
000008F5 B6 00 00 00        		.dd LM32-_show
000008F7 0D 00 0A 00        		.dw 0x0d,0x0a
00008136                    	.code
                            	LM32:
00008136 05 93              		R1=BP	// QImode move
00008137 0D 05 01 00        		R2=BP+1
00008139 02 93              		R1=R2	// QImode move
0000813A 0A 09 06 00        		R4=R2+6
0000813C 0E D8              		[bp+14]=R4	// QImode move
0000813D 0A 92              		R1=[bp+10]	// QImode move
0000813E 0A 92              		R1=[bp+10]	// QImode move
0000813F 09 05 02 00        		R2=R1+2
00008141 02 97              		R3=R2	// QImode move
00008142 C3 92              		R1=[R3]	// QImode move
00008143 4A 94              		R2=10	// QImode move
00008144 C8 D4              		[SP--]=R2	// QImode move
00008145 C8 D2              		[SP--]=R1	// QImode move
00008146 40 F0 AA 82        		call __divi1	// call with return value
00008148 42 00              		SP = SP + 2	//SP
00008149 0B 97 01 00        		R3=_tb	// QImode move
0000814B 03 95              		R2=R3	// QImode move
0000814C 01 05              		R2 = R2 + R1	//addqi3
0000814D 02 99              		R4=R2	// QImode move
0000814E C4 92              		R1=[R4]	// QImode move
0000814F 14 99 0C 00        		R4=[_dot]	// QImode move
00008151 04 A3              		R1|=R4
00008152 0E 98              		R4=[bp+14]	// QImode move
00008153 C4 D2              		[R4]=R1	// QImode move
000008F9                    	.debug
000008F9 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
0000090C D4 00 00 00        		.dd LM33-_show
0000090E 0D 00 0A 00        		.dw 0x0d,0x0a
00008154                    	.code
                            	LM33:
00008154 05 93              		R1=BP	// QImode move
00008155 0D 05 01 00        		R2=BP+1
00008157 02 93              		R1=R2	// QImode move
00008158 0A 03 07 00        		R1=R2+7
0000815A 0F D2              		[bp+15]=R1	// QImode move
0000815B 0A 92              		R1=[bp+10]	// QImode move
0000815C 0A 96              		R3=[bp+10]	// QImode move
0000815D 0B 05 02 00        		R2=R3+2
0000815F 02 99              		R4=R2	// QImode move
00008160 C4 92              		R1=[R4]	// QImode move
00008161 4A 94              		R2=10	// QImode move
00008162 C8 D4              		[SP--]=R2	// QImode move
00008163 C8 D2              		[SP--]=R1	// QImode move
00008164 40 F0 DB 82        		call __modi1	// call with return value
00008166 42 00              		SP = SP + 2	//SP
00008167 0B 97 01 00        		R3=_tb	// QImode move
00008169 03 95              		R2=R3	// QImode move
0000816A 01 05              		R2 = R2 + R1	//addqi3
0000816B 02 97              		R3=R2	// QImode move
0000816C C3 92              		R1=[R3]	// QImode move
0000816D 0F 98              		R4=[bp+15]	// QImode move
0000816E C4 D2              		[R4]=R1	// QImode move
00000910                    	.debug
00000910 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
00000923 EF 00 00 00        		.dd LM34-_show
00000925 0D 00 0A 00        		.dw 0x0d,0x0a
0000816F                    	.code
                            	LM34:
0000816F 05 93              		R1=BP	// QImode move
00008170 0D 05 09 00        		R2=BP+9
00008172 40 92              		R1=0	// QImode move
00008173 02 97              		R3=R2	// QImode move
00008174 C3 D2              		[R3]=R1	// QImode move
                            	L24:
00008175 05 93              		R1=BP	// QImode move
00008176 0D 05 09 00        		R2=BP+9
00008178 02 99              		R4=R2	// QImode move
00008179 C4 92              		R1=[R4]	// QImode move
0000817A 40 42              		CMP R1,0	// QImode test
0000817B 04 5E 01 EE        		NSJZ L27	//QImode EQ
         00 EE      
0000817E 0F 9F B7 81        		pc=L25	// Indirect jump
                            	L27:
00000927                    	.debug
00000927 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
0000093A 00 01 00 00        		.dd LM35-_show
0000093C 0D 00 0A 00        		.dw 0x0d,0x0a
00008180                    	.code
                            	LM35:
00008180 40 92              		R1=0	// QImode move
00008181 C5 D2              		[BP]=R1	// QImode move
                            	L28:
00008182 C5 92              		R1=[BP]	// QImode move
00008183 47 42              		CMP R1,7	// QImode compare
00008184 04 8E 01 EE        		NSJNA L31	//QImode LEU
         00 EE      
00008187 0F 9F A6 81        		pc=L26	// Indirect jump
                            	L31:
0000093E                    	.debug
0000093E 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
00000951 09 01 00 00        		.dd LM36-_show
00000953 0D 00 0A 00        		.dw 0x0d,0x0a
00008189                    	.code
                            	LM36:
00008189 09 93 00 01        		R1=256	// QImode move
0000818B C5 94              		R2=[BP]	// QImode move
0000818C C8 D4              		[SP--]=R2	// QImode move
0000818D C8 D2              		[SP--]=R1	// QImode move
0000818E 40 F0 FF 82        		call __lshiu1	// call with return value
00008190 42 00              		SP = SP + 2	//SP
00008191 05 95              		R2=BP	// QImode move
00008192 0D 07 01 00        		R3=BP+1
00008194 C5 98              		R4=[BP]	// QImode move
00008195 03 95              		R2=R3	// QImode move
00008196 04 05              		R2 = R2 + R4	//addqi3
00008197 02 97              		R3=R2	// QImode move
00008198 C3 A2              		R1|=[R3]	// iorqi3_r0R
00008199 19 D3 00 70        		[28672]=R1	// QImode move
00000955                    	.debug
00000955 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
00000968 1B 01 00 00        		.dd LM37-_show
0000096A 0D 00 0A 00        		.dw 0x0d,0x0a
0000819B                    	.code
                            	LM37:
0000819B 40 F0 65 80        		call _shortdelay	// call without return value
0000096C                    	.debug
0000096C 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
0000097F 1D 01 00 00        		.dd LM38-_show
00000981 0D 00 0A 00        		.dw 0x0d,0x0a
0000819D                    	.code
                            	LM38:
0000819D 40 92              		R1=0	// QImode move
0000819E 19 D3 00 70        		[28672]=R1	// QImode move
00000983                    	.debug
00000983 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
00000996 20 01 00 00        		.dd LM39-_show
00000998 0D 00 0A 00        		.dw 0x0d,0x0a
000081A0                    	.code
                            	LM39:
                            	L30:
000081A0 C5 92              		R1=[BP]	// QImode move
000081A1 09 05 01 00        		R2=R1+1
000081A3 C5 D4              		[BP]=R2	// QImode move
000081A4 0F 9F 82 81        		pc=L28	// Indirect jump
                            	L29:
0000099A                    	.debug
0000099A 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
000009AD 26 01 00 00        		.dd LM40-_show
000009AF 0D 00 0A 00        		.dw 0x0d,0x0a
000081A6                    	.code
                            	LM40:
                            	L26:
000081A6 05 93              		R1=BP	// QImode move
000081A7 0D 05 09 00        		R2=BP+9
000081A9 05 97              		R3=BP	// QImode move
000081AA 0D 03 09 00        		R1=BP+9
000081AC 05 95              		R2=BP	// QImode move
000081AD 0D 07 09 00        		R3=BP+9
000081AF 03 99              		R4=R3	// QImode move
000081B0 C4 94              		R2=[R4]	// QImode move
000081B1 0A 07 01 00        		R3=R2+1
000081B3 01 95              		R2=R1	// QImode move
000081B4 C2 D6              		[R2]=R3	// QImode move
000081B5 0F 9F 75 81        		pc=L24	// Indirect jump
                            	L25:
000009B1                    	.debug
000009B1 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
000009C4 37 01 00 00        		.dd LM41-_show
000009C6 0D 00 0A 00        		.dw 0x0d,0x0a
000081B7                    	.code
                            	LM41:
                            	LBE4:
000009C8                    	.debug
000009C8 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
000009DB 37 01 00 00        		.dd LM42-_show
000009DD 0D 00 0A 00        		.dw 0x0d,0x0a
000081B7                    	.code
                            	LM42:
                            	L19:
                            	
000081B7 50 00              		sp+=16
000081B8 88 98              		pop bp from [sp]
000081B9 90 9A              		retf
                            		.endp	// end of show
                            	
000009DF                    	.debug
000009DF 2E 00 73 00        		.dw '.stabs "mode:p1",160,0,0,19',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 6F 00
         64 00 65 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         39 00 0D 00
         0A 00      
000081BA                    	.CODE
000009FC                    	.debug
000009FC 2E 00 73 00        		.dw '.stabs "freq:p1",160,0,0,20',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 72 00
         65 00 71 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         30 00 0D 00
         0A 00      
000081BA                    	.CODE
00000A19                    	.debug
00000A19 2E 00 73 00        		.dw '.stabs "mvol:p1",160,0,0,21',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 76 00
         6F 00 6C 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         31 00 0D 00
         0A 00      
000081BA                    	.CODE
00000A36                    	.debug
00000A36 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000A48 07 00 00 00        		.dd LBB4-_show
00000A4A 0D 00 0A 00        		.dw 0x0d,0x0a
000081BA                    	.code
00000A4C                    	.debug
00000A4C 2E 00 73 00        		.dw '.stabs "count:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         75 00 6E 00
         74 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000081BA                    	.CODE
00000A68                    	.debug
00000A68 2E 00 73 00        		.dw '.stabs "tmp:21",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         70 00 3A 00
         32 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
000081BA                    	.CODE
00000A83                    	.debug
00000A83 2E 00 73 00        		.dw '.stabs "j:4",128,0,0,9',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 39 00
         0D 00 0A 00
000081BA                    	.CODE
00000A9B                    	.debug
00000A9B 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000AAD 37 01 00 00        		.dd LBE4-_show
00000AAF 0D 00 0A 00        		.dw 0x0d,0x0a
000081BA                    	.code
00000AB1                    	.debug
00000AB1 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000ABA 3A 01 00 00        		.dd LME3-_show
00000ABC 0D 00 0A 00        		.dw 0x0d,0x0a
000081BA                    	.code
                            	LME3:
000081BA                    	.code
00000ABE                    	.debug
00000ABE 2E 00 73 00        		.dw '.stabs "KeyScan:F19",36,0,0,',0,0,offset _KeyScan,seg _KeyScan,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 53 00
         63 00 61 00
         6E 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         94 01 00 00
         0D 00 0A 00
000081BA                    	.CODE
                            	.public _KeyScan
                            	_KeyScan:	.proc
00000AE0                    	.debug
00000AE0 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
00000AF3 00 00 00 00        		.dd LM43-_KeyScan
00000AF5 0D 00 0A 00        		.dw 0x0d,0x0a
000081BA                    	.code
                            	LM43:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
000081BA 88 DA              		push bp to [sp]
000081BB 42 20              		sp-=2
000081BC 08 0B 01 00        		bp=sp+1
                            	
000081BE 0D 03 05 00        		R1=BP+5
00000AF7                    	.debug
00000AF7 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
00000B0A 06 00 00 00        		.dd LM44-_KeyScan
00000B0C 0D 00 0A 00        		.dw 0x0d,0x0a
000081C0                    	.code
                            	LM44:
                            	LBB5:
00000B0E                    	.debug
00000B0E 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
00000B21 06 00 00 00        		.dd LM45-_KeyScan
00000B23 0D 00 0A 00        		.dw 0x0d,0x0a
000081C0                    	.code
                            	LM45:
000081C0 41 94              		R2=1	// QImode move
000081C1 1A D5 12 70        		[28690]=R2	// QImode move
00000B25                    	.debug
00000B25 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
00000B38 09 00 00 00        		.dd LM46-_KeyScan
00000B3A 0D 00 0A 00        		.dw 0x0d,0x0a
000081C3                    	.code
                            	LM46:
000081C3 0A 65 00 01        		R2=(-256)	// QImode move
000081C5 1A D5 07 70        		[28679]=R2	// QImode move
00000B3C                    	.debug
00000B3C 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00000B4F 0D 00 00 00        		.dd LM47-_KeyScan
00000B51 0D 00 0A 00        		.dw 0x0d,0x0a
000081C7                    	.code
                            	LM47:
000081C7 0A 65 00 01        		R2=(-256)	// QImode move
000081C9 1A D5 08 70        		[28680]=R2	// QImode move
00000B53                    	.debug
00000B53 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000B66 11 00 00 00        		.dd LM48-_KeyScan
00000B68 0D 00 0A 00        		.dw 0x0d,0x0a
000081CB                    	.code
                            	LM48:
000081CB 12 95 05 70        		R2=[28677]	// QImode move
000081CD C5 D4              		[BP]=R2	// QImode move
00000B6A                    	.debug
00000B6A 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
00000B7D 14 00 00 00        		.dd LM49-_KeyScan
00000B7F 0D 00 0A 00        		.dw 0x0d,0x0a
000081CE                    	.code
                            	LM49:
000081CE 05 95              		R2=BP	// QImode move
000081CF 0D 07 01 00        		R3=BP+1
000081D1 C5 94              		R2=[BP]	// QImode move
000081D2 0A 89 FF 00        		R4=R2^255
000081D4 03 95              		R2=R3	// QImode move
000081D5 C2 D8              		[R2]=R4	// QImode move
00000B81                    	.debug
00000B81 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
00000B94 1C 00 00 00        		.dd LM50-_KeyScan
00000B96 0D 00 0A 00        		.dw 0x0d,0x0a
000081D6                    	.code
                            	LM50:
000081D6 05 95              		R2=BP	// QImode move
000081D7 0D 07 01 00        		R3=BP+1
000081D9 03 99              		R4=R3	// QImode move
000081DA C4 94              		R2=[R4]	// QImode move
000081DB 60 44              		CMP R2,32	// QImode compare
000081DC 34 5E 01 EE        		NSJZ L41	//QImode EQ
         00 EE      
000081DF 60 44              		CMP R2,32	// QImode compare
000081E0 0C BE 01 EE        		NSJG L48	//QImode GT
         00 EE      
000081E3 48 44              		CMP R2,8	// QImode compare
000081E4 02 4E 0F 9F        		NSJZ L44	//QImode EQ
         2B 82      
000081E7 50 44              		CMP R2,16	// QImode compare
000081E8 30 5E 01 EE        		NSJZ L42	//QImode EQ
         00 EE      
000081EB 0F 9F 3D 82        		pc=L46	// Indirect jump
                            	L48:
000081ED 0A 45 40 00        		CMP R2,64	// QImode compare
000081EF 19 5E 01 EE        		NSJZ L40	//QImode EQ
         00 EE      
000081F2 0A 45 80 00        		CMP R2,128	// QImode compare
000081F4 04 5E 01 EE        		NSJZ L38	//QImode EQ
         00 EE      
000081F7 0F 9F 3D 82        		pc=L46	// Indirect jump
                            	L38:
00000B98                    	.debug
00000B98 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
00000BAB 3F 00 00 00        		.dd LM51-_KeyScan
00000BAD 0D 00 0A 00        		.dw 0x0d,0x0a
000081F9                    	.code
                            	LM51:
000081F9 12 95 0D 00        		R2=[_buffer]	// QImode move
000081FB 41 96              		R3=1	// QImode move
000081FC 1A 07 0D 00        		[_buffer]=R2+R3  //addqi3_Qrr
00000BAF                    	.debug
00000BAF 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
00000BC2 44 00 00 00        		.dd LM52-_KeyScan
00000BC4 0D 00 0A 00        		.dw 0x0d,0x0a
000081FE                    	.code
                            	LM52:
000081FE 12 95 0D 00        		R2=[_buffer]	// QImode move
00008200 43 44              		CMP R2,3	// QImode compare
00008201 05 4E 01 EE        		NSJNZ L39	//QImode NE
         00 EE      
00000BC6                    	.debug
00000BC6 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
00000BD9 4A 00 00 00        		.dd LM53-_KeyScan
00000BDB 0D 00 0A 00        		.dw 0x0d,0x0a
00008204                    	.code
                            	LM53:
00008204 40 94              		R2=0	// QImode move
00008205 1A D5 0D 00        		[_buffer]=R2	// QImode move
                            	L39:
00000BDD                    	.debug
00000BDD 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
00000BF0 4D 00 00 00        		.dd LM54-_KeyScan
00000BF2 0D 00 0A 00        		.dw 0x0d,0x0a
00008207                    	.code
                            	LM54:
00008207 0F 9F 3F 82        		pc=L37	// Indirect jump
                            	L40:
00000BF4                    	.debug
00000BF4 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
00000C07 4F 00 00 00        		.dd LM55-_KeyScan
00000C09 0D 00 0A 00        		.dw 0x0d,0x0a
00008209                    	.code
                            	LM55:
00008209 12 95 0E 00        		R2=[_buffer+1]	// QImode move
0000820B 0B 97 64 00        		R3=100	// QImode move
0000820D 1A 07 0E 00        		[_buffer+1]=R2+R3  //addqi3_Qrr
00000C0B                    	.debug
00000C0B 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000C1E 55 00 00 00        		.dd LM56-_KeyScan
00000C20 0D 00 0A 00        		.dw 0x0d,0x0a
0000820F                    	.code
                            	LM56:
0000820F 0F 9F 3F 82        		pc=L37	// Indirect jump
                            	L41:
00000C22                    	.debug
00000C22 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000C35 57 00 00 00        		.dd LM57-_KeyScan
00000C37 0D 00 0A 00        		.dw 0x0d,0x0a
00008211                    	.code
                            	LM57:
00008211 12 95 0E 00        		R2=[_buffer+1]	// QImode move
00008213 0B 67 64 00        		R3=(-100)	// QImode move
00008215 1A 07 0E 00        		[_buffer+1]=R2+R3  //addqi3_Qrr
00000C39                    	.debug
00000C39 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000C4C 5D 00 00 00        		.dd LM58-_KeyScan
00000C4E 0D 00 0A 00        		.dw 0x0d,0x0a
00008217                    	.code
                            	LM58:
00008217 0F 9F 3F 82        		pc=L37	// Indirect jump
                            	L42:
00000C50                    	.debug
00000C50 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
00000C63 5F 00 00 00        		.dd LM59-_KeyScan
00000C65 0D 00 0A 00        		.dw 0x0d,0x0a
00008219                    	.code
                            	LM59:
00008219 12 95 0F 00        		R2=[_buffer+2]	// QImode move
0000821B 72 44              		CMP R2,50	// QImode compare
0000821C 07 4E 01 EE        		NSJNZ L43	//QImode NE
         00 EE      
00000C67                    	.debug
00000C67 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000C7B 65 00 00 00        		.dd LM60-_KeyScan
00000C7D 0D 00 0A 00        		.dw 0x0d,0x0a
0000821F                    	.code
                            	LM60:
0000821F 40 94              		R2=0	// QImode move
00008220 1A D5 0F 00        		[_buffer+2]=R2	// QImode move
00000C7F                    	.debug
00000C7F 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
00000C93 68 00 00 00        		.dd LM61-_KeyScan
00000C95 0D 00 0A 00        		.dw 0x0d,0x0a
00008222                    	.code
                            	LM61:
00008222 0F 9F 3F 82        		pc=L37	// Indirect jump
                            	L43:
00000C97                    	.debug
00000C97 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000CAB 6A 00 00 00        		.dd LM62-_KeyScan
00000CAD 0D 00 0A 00        		.dw 0x0d,0x0a
00008224                    	.code
                            	LM62:
00008224 12 95 0F 00        		R2=[_buffer+2]	// QImode move
00008226 41 96              		R3=1	// QImode move
00008227 1A 07 0F 00        		[_buffer+2]=R2+R3  //addqi3_Qrr
00000CAF                    	.debug
00000CAF 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00000CC3 6F 00 00 00        		.dd LM63-_KeyScan
00000CC5 0D 00 0A 00        		.dw 0x0d,0x0a
00008229                    	.code
                            	LM63:
00008229 0F 9F 3F 82        		pc=L37	// Indirect jump
                            	L44:
00000CC7                    	.debug
00000CC7 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000CDB 71 00 00 00        		.dd LM64-_KeyScan
00000CDD 0D 00 0A 00        		.dw 0x0d,0x0a
0000822B                    	.code
                            	LM64:
0000822B 12 95 0F 00        		R2=[_buffer+2]	// QImode move
0000822D 40 44              		CMP R2,0	// QImode test
0000822E 07 4E 01 EE        		NSJNZ L45	//QImode NE
         00 EE      
00000CDF                    	.debug
00000CDF 2E 00 73 00        		.dw '.stabn 0x44,0,109,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         39 00 2C 00
         00 00 00 00
00000CF3 77 00 00 00        		.dd LM65-_KeyScan
00000CF5 0D 00 0A 00        		.dw 0x0d,0x0a
00008231                    	.code
                            	LM65:
00008231 72 94              		R2=50	// QImode move
00008232 1A D5 0F 00        		[_buffer+2]=R2	// QImode move
00000CF7                    	.debug
00000CF7 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000D0B 7A 00 00 00        		.dd LM66-_KeyScan
00000D0D 0D 00 0A 00        		.dw 0x0d,0x0a
00008234                    	.code
                            	LM66:
00008234 0F 9F 3F 82        		pc=L37	// Indirect jump
                            	L45:
00000D0F                    	.debug
00000D0F 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
00000D23 7C 00 00 00        		.dd LM67-_KeyScan
00000D25 0D 00 0A 00        		.dw 0x0d,0x0a
00008236                    	.code
                            	LM67:
00008236 12 95 0F 00        		R2=[_buffer+2]	// QImode move
00008238 41 66              		R3=(-1)	// QImode move
00008239 1A 07 0F 00        		[_buffer+2]=R2+R3  //addqi3_Qrr
00000D27                    	.debug
00000D27 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
00000D3B 81 00 00 00        		.dd LM68-_KeyScan
00000D3D 0D 00 0A 00        		.dw 0x0d,0x0a
0000823B                    	.code
                            	LM68:
0000823B 0F 9F 3F 82        		pc=L37	// Indirect jump
                            	L46:
00000D3F                    	.debug
00000D3F 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
00000D53 83 00 00 00        		.dd LM69-_KeyScan
00000D55 0D 00 0A 00        		.dw 0x0d,0x0a
0000823D                    	.code
                            	LM69:
0000823D 0F 9F 3F 82        		pc=L37	// Indirect jump
                            	L37:
00000D57                    	.debug
00000D57 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000D6B 85 00 00 00        		.dd LM70-_KeyScan
00000D6D 0D 00 0A 00        		.dw 0x0d,0x0a
0000823F                    	.code
                            	LM70:
                            	LBE5:
00000D6F                    	.debug
00000D6F 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000D83 85 00 00 00        		.dd LM71-_KeyScan
00000D85 0D 00 0A 00        		.dw 0x0d,0x0a
0000823F                    	.code
                            	LM71:
                            	L36:
                            	
0000823F 42 00              		sp+=2
00008240 88 98              		pop bp from [sp]
00008241 90 9A              		retf
                            		.endp	// end of KeyScan
                            	
00000D87                    	.debug
00000D87 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000D99 06 00 00 00        		.dd LBB5-_KeyScan
00000D9B 0D 00 0A 00        		.dw 0x0d,0x0a
00008242                    	.code
00000D9D                    	.debug
00000D9D 2E 00 73 00        		.dw '.stabs "KeyTemp:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 54 00
         65 00 6D 00
         70 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008242                    	.CODE
00000DBB                    	.debug
00000DBB 2E 00 73 00        		.dw '.stabs "Value:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         56 00 61 00
         6C 00 75 00
         65 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
00008242                    	.CODE
00000DD7                    	.debug
00000DD7 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000DE9 85 00 00 00        		.dd LBE5-_KeyScan
00000DEB 0D 00 0A 00        		.dw 0x0d,0x0a
00008242                    	.code
00000DED                    	.debug
00000DED 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000DF6 88 00 00 00        		.dd LME4-_KeyScan
00000DF8 0D 00 0A 00        		.dw 0x0d,0x0a
00008242                    	.code
                            	LME4:
00008242                    	.code
00000DFA                    	.debug
00000DFA 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         1C 02 00 00
         0D 00 0A 00
00008242                    	.CODE
                            	.public _main
                            	_main:	.proc
00000E18                    	.debug
00000E18 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
00000E2C 00 00 00 00        		.dd LM72-_main
00000E2E 0D 00 0A 00        		.dw 0x0d,0x0a
00008242                    	.code
                            	LM72:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008242 88 DA              		push bp to [sp]
00008243 41 20              		sp-=1
00008244 08 0B 01 00        		bp=sp+1
                            	
00008246 0D 03 04 00        		R1=BP+4
00008248 C5 D2              		[BP]=R1	// QImode move
00000E30                    	.debug
00000E30 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
00000E44 07 00 00 00        		.dd LM73-_main
00000E46 0D 00 0A 00        		.dw 0x0d,0x0a
00008249                    	.code
                            	LM73:
00008249 41 62              		R1=(-1)	// QImode move
0000824A 19 D3 02 70        		[28674]=R1	// QImode move
00000E48                    	.debug
00000E48 2E 00 73 00        		.dw '.stabn 0x44,0,124,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         34 00 2C 00
         00 00 00 00
00000E5C 0A 00 00 00        		.dd LM74-_main
00000E5E 0D 00 0A 00        		.dw 0x0d,0x0a
0000824C                    	.code
                            	LM74:
0000824C 41 62              		R1=(-1)	// QImode move
0000824D 19 D3 03 70        		[28675]=R1	// QImode move
00000E60                    	.debug
00000E60 2E 00 73 00        		.dw '.stabn 0x44,0,125,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         35 00 2C 00
         00 00 00 00
00000E74 0D 00 00 00        		.dd LM75-_main
00000E76 0D 00 0A 00        		.dw 0x0d,0x0a
0000824F                    	.code
                            	LM75:
0000824F 41 62              		R1=(-1)	// QImode move
00008250 19 D3 00 70        		[28672]=R1	// QImode move
00000E78                    	.debug
00000E78 2E 00 73 00        		.dw '.stabn 0x44,0,126,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         36 00 2C 00
         00 00 00 00
00000E8C 10 00 00 00        		.dd LM76-_main
00000E8E 0D 00 0A 00        		.dw 0x0d,0x0a
00008252                    	.code
                            	LM76:
00008252 40 92              		R1=0	// QImode move
00008253 19 D3 0D 00        		[_buffer]=R1	// QImode move
00000E90                    	.debug
00000E90 2E 00 73 00        		.dw '.stabn 0x44,0,127,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         37 00 2C 00
         00 00 00 00
00000EA4 13 00 00 00        		.dd LM77-_main
00000EA6 0D 00 0A 00        		.dw 0x0d,0x0a
00008255                    	.code
                            	LM77:
00008255 09 93 64 00        		R1=100	// QImode move
00008257 19 D3 0E 00        		[_buffer+1]=R1	// QImode move
00000EA8                    	.debug
00000EA8 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
00000EBC 17 00 00 00        		.dd LM78-_main
00000EBE 0D 00 0A 00        		.dw 0x0d,0x0a
00008259                    	.code
                            	LM78:
00008259 54 92              		R1=20	// QImode move
0000825A 19 D3 0F 00        		[_buffer+2]=R1	// QImode move
00000EC0                    	.debug
00000EC0 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
00000ED4 1A 00 00 00        		.dd LM79-_main
00000ED6 0D 00 0A 00        		.dw 0x0d,0x0a
0000825C                    	.code
                            	LM79:
                            	L59:
0000825C 0F 9F 60 82        		pc=L61	// Indirect jump
0000825E 0F 9F 73 82        		pc=L60	// Indirect jump
                            	L61:
00000ED8                    	.debug
00000ED8 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000EEC 1E 00 00 00        		.dd LM80-_main
00000EEE 0D 00 0A 00        		.dw 0x0d,0x0a
00008260                    	.code
                            	LM80:
00008260 40 F0 BA 81        		call _KeyScan	// call without return value
00000EF0                    	.debug
00000EF0 2E 00 73 00        		.dw '.stabn 0x44,0,132,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         32 00 2C 00
         00 00 00 00
00000F04 20 00 00 00        		.dd LM81-_main
00000F06 0D 00 0A 00        		.dw 0x0d,0x0a
00008262                    	.code
                            	LM81:
00008262 11 93 0F 00        		R1=[_buffer+2]	// QImode move
00008264 C8 D2              		[SP--]=R1	// QImode move
00008265 11 93 0E 00        		R1=[_buffer+1]	// QImode move
00008267 C8 D2              		[SP--]=R1	// QImode move
00008268 11 93 0D 00        		R1=[_buffer]	// QImode move
0000826A C8 D2              		[SP--]=R1	// QImode move
0000826B 40 F0 80 80        		call _show	// call without return value
0000826D 43 00              		SP = SP + 3	//SP
00000F08                    	.debug
00000F08 2E 00 73 00        		.dw '.stabn 0x44,0,133,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         33 00 2C 00
         00 00 00 00
00000F1C 2C 00 00 00        		.dd LM82-_main
00000F1E 0D 00 0A 00        		.dw 0x0d,0x0a
0000826E                    	.code
                            	LM82:
0000826E 41 92              		R1=1	// QImode move
0000826F 19 D3 12 70        		[28690]=R1	// QImode move
00000F20                    	.debug
00000F20 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
00000F34 2F 00 00 00        		.dd LM83-_main
00000F36 0D 00 0A 00        		.dw 0x0d,0x0a
00008271                    	.code
                            	LM83:
00008271 0F 9F 5C 82        		pc=L59	// Indirect jump
                            	L60:
00000F38                    	.debug
00000F38 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00000F4C 31 00 00 00        		.dd LM84-_main
00000F4E 0D 00 0A 00        		.dw 0x0d,0x0a
00008273                    	.code
                            	LM84:
00000F50                    	.debug
00000F50 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00000F64 31 00 00 00        		.dd LM85-_main
00000F66 0D 00 0A 00        		.dw 0x0d,0x0a
00008273                    	.code
                            	LM85:
                            	L58:
                            	
00008273 41 00              		sp+=1
00008274 88 98              		pop bp from [sp]
00008275 90 9A              		retf
                            		.endp	// end of main
                            	
00000F68                    	.debug
00000F68 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000F71 34 00 00 00        		.dd LME5-_main
00000F73 0D 00 0A 00        		.dw 0x0d,0x0a
00008276                    	.code
                            	LME5:
0000000D                    	.iram
                            	.public _buffer
                            	_buffer:
0000000D 00 00 00 00        		.dw 8 dup(0)
         00 00 00 00
         00 00 00 00
         00 00 00 00
                            	.external __lshiu1
                            	.external __modi1
                            	.external __divi1
                            		.end
0 error(s), 0 warning(s).



