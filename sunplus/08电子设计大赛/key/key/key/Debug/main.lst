Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\PROGRA~1\SunPlus\UNSPID~1.0\cc1.exe C:\DOCUME~1\a\LOCALS~1\Temp\ccWwaaaa.i -fkeep-inline-functions -quiet -dumpbase main.c -mglobal-var-iram -gstabs -Wall -o .\Debug/main.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "G:/yangsong/key/key/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         47 00 3A 00
         2F 00 79 00
         61 00 6E 00
         67 00 73 00
         6F 00 6E 00
         67 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6B 00 65 00
         79 00 2F 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008026                    	.code
0000002D                    	.debug
0000002D 2E 00 73 00        		.dw '.stabs "G:/yangsong/key/key/main.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         47 00 3A 00
         2F 00 79 00
         61 00 6E 00
         67 00 73 00
         6F 00 6E 00
         67 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6D 00 61 00
         69 00 6E 00
         2E 00 63 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008026                    	.code
00008026                    	.code
                            	Ltext0:
00000060                    	.debug
00000060 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000008C                    	.debug
0000008C 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000000B2                    	.debug
000000B2 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000000ED                    	.debug
000000ED 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000011D                    	.debug
0000011D 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000157                    	.debug
00000157 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000197                    	.debug
00000197 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000001D6                    	.debug
000001D6 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000208                    	.debug
00000208 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000023E                    	.debug
0000023E 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000274                    	.debug
00000274 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000002A7                    	.debug
000002A7 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000002CD                    	.debug
000002CD 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000002F4                    	.debug
000002F4 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000320                    	.debug
00000320 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000361                    	.debug
00000361 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000390                    	.debug
00000390 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000003C0                    	.debug
000003C0 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000003F5                    	.debug
000003F5 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00008026                    	.code
00000415                    	.debug
00000415 2E 00 73 00        		.dw '.stabs "delay:F19",36,0,0,',0,0,offset _delay,seg _delay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 65 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.CODE
                            	.public _delay
                            	_delay:	.proc
00000435                    	.debug
00000435 2E 00 73 00        		.dw '.stabs "G:/yangsong/key/key/mykey.h",0x84,0,0,',0,0,offset Ltext1, seg Ltext1,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         47 00 3A 00
         2F 00 79 00
         61 00 6E 00
         67 00 73 00
         6F 00 6E 00
         67 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6D 00 79 00
         6B 00 65 00
         79 00 2E 00
         68 00 22 00
         2C 00 30 00
         78 00 38 00
         34 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.code
00008026                    	.code
                            	Ltext1:
00000469                    	.debug
00000469 2E 00 73 00        		.dw '.stabn 0x44,0,25,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         2C 00 00 00
         00 00      
0000047C 00 00 00 00        		.dd LM1-_delay
0000047E 0D 00 0A 00        		.dw 0x0d,0x0a
00008026                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008026 88 DA              		push bp to [sp]
00008027 41 20              		sp-=1
00008028 08 0B 01 00        		bp=sp+1
                            	
0000802A 0D 03 04 00        		R1=BP+4
00000480                    	.debug
00000480 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
00000493 06 00 00 00        		.dd LM2-_delay
00000495 0D 00 0A 00        		.dw 0x0d,0x0a
0000802C                    	.code
                            	LM2:
                            	LBB2:
00000497                    	.debug
00000497 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
000004AA 06 00 00 00        		.dd LM3-_delay
000004AC 0D 00 0A 00        		.dw 0x0d,0x0a
0000802C                    	.code
                            	LM3:
                            	L3:
0000802C 01 95              		R2=R1	// QImode move
0000802D C2 96              		R3=[R2]	// QImode move
0000802E 0B 05 FF FF        		R2=R3+(-1)
00008030 02 97              		R3=R2	// QImode move
00008031 01 95              		R2=R1	// QImode move
00008032 C2 D6              		[R2]=R3	// QImode move
00008033 0B 47 FF FF        		CMP R3,(-1)	// QImode compare
00008035 04 4E 01 EE        		NSJNZ L5	//QImode NE
         00 EE      
00008038 0F 9F 4E 80        		pc=L4	// Indirect jump
                            	L5:
000004AE                    	.debug
000004AE 2E 00 73 00        		.dw '.stabn 0x44,0,30,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         2C 00 00 00
         00 00      
000004C1 14 00 00 00        		.dd LM4-_delay
000004C3 0D 00 0A 00        		.dw 0x0d,0x0a
0000803A                    	.code
                            	LM4:
0000803A 40 94              		R2=0	// QImode move
0000803B C5 D4              		[BP]=R2	// QImode move
                            	L6:
0000803C C5 94              		R2=[BP]	// QImode move
0000803D 41 44              		CMP R2,1	// QImode compare
0000803E 04 AE 01 EE        		NSJNG L9	//QImode LE
         00 EE      
00008041 0F 9F 4C 80        		pc=L7	// Indirect jump
                            	L9:
000004C5                    	.debug
000004C5 2E 00 73 00        		.dw '.stabn 0x44,0,31,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         2C 00 00 00
         00 00      
000004D8 1D 00 00 00        		.dd LM5-_delay
000004DA 0D 00 0A 00        		.dw 0x0d,0x0a
00008043                    	.code
                            	LM5:
00008043 41 94              		R2=1	// QImode move
00008044 1A D5 12 70        		[28690]=R2	// QImode move
000004DC                    	.debug
000004DC 2E 00 73 00        		.dw '.stabn 0x44,0,30,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         2C 00 00 00
         00 00      
000004EF 20 00 00 00        		.dd LM6-_delay
000004F1 0D 00 0A 00        		.dw 0x0d,0x0a
00008046                    	.code
                            	LM6:
                            	L8:
00008046 C5 94              		R2=[BP]	// QImode move
00008047 0A 07 01 00        		R3=R2+1
00008049 C5 D6              		[BP]=R3	// QImode move
0000804A 0F 9F 3C 80        		pc=L6	// Indirect jump
                            	L7:
000004F3                    	.debug
000004F3 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
00000506 26 00 00 00        		.dd LM7-_delay
00000508 0D 00 0A 00        		.dw 0x0d,0x0a
0000804C                    	.code
                            	LM7:
0000804C 0F 9F 2C 80        		pc=L3	// Indirect jump
                            	L4:
0000050A                    	.debug
0000050A 2E 00 73 00        		.dw '.stabn 0x44,0,33,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         2C 00 00 00
         00 00      
0000051D 28 00 00 00        		.dd LM8-_delay
0000051F 0D 00 0A 00        		.dw 0x0d,0x0a
0000804E                    	.code
                            	LM8:
                            	LBE2:
00000521                    	.debug
00000521 2E 00 73 00        		.dw '.stabn 0x44,0,33,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 33 00
         2C 00 00 00
         00 00      
00000534 28 00 00 00        		.dd LM9-_delay
00000536 0D 00 0A 00        		.dw 0x0d,0x0a
0000804E                    	.code
                            	LM9:
                            	L2:
                            	
0000804E 41 00              		sp+=1
0000804F 88 98              		pop bp from [sp]
00008050 90 9A              		retf
                            		.endp	// end of delay
                            	
00000538                    	.debug
00000538 2E 00 73 00        		.dw '.stabs "x:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
00008051                    	.CODE
00000551                    	.debug
00000551 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000563 06 00 00 00        		.dd LBB2-_delay
00000565 0D 00 0A 00        		.dw 0x0d,0x0a
00008051                    	.code
00000567                    	.debug
00000567 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008051                    	.CODE
0000057F                    	.debug
0000057F 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000591 28 00 00 00        		.dd LBE2-_delay
00000593 0D 00 0A 00        		.dw 0x0d,0x0a
00008051                    	.code
00000595                    	.debug
00000595 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000059E 2B 00 00 00        		.dd LME1-_delay
000005A0 0D 00 0A 00        		.dw 0x0d,0x0a
00008051                    	.code
                            	LME1:
00008051                    	.code
000005A2                    	.debug
000005A2 2E 00 73 00        		.dw '.stabs "storemem:F19",36,0,0,',0,0,offset _storemem,seg _storemem,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 74 00
         6F 00 72 00
         65 00 6D 00
         65 00 6D 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 2B 00
         00 00 0D 00
         0A 00      
00008051                    	.CODE
                            	.public _storemem
                            	_storemem:	.proc
000005C5                    	.debug
000005C5 2E 00 73 00        		.dw '.stabn 0x44,0,35,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         2C 00 00 00
         00 00      
000005D8 00 00 00 00        		.dd LM10-_storemem
000005DA 0D 00 0A 00        		.dw 0x0d,0x0a
00008051                    	.code
                            	LM10:
                            		// total=8, vars=8
                            		// frame_pointer_needed: 1
00008051 88 DA              		push bp to [sp]
00008052 48 20              		sp-=8
00008053 08 0B 01 00        		bp=sp+1
                            	
00008055 0D 03 0B 00        		R1=BP+11
000005DC                    	.debug
000005DC 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
000005EF 06 00 00 00        		.dd LM11-_storemem
000005F1 0D 00 0A 00        		.dw 0x0d,0x0a
00008057                    	.code
                            	LM11:
                            	LBB3:
000005F3                    	.debug
000005F3 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
00000606 06 00 00 00        		.dd LM12-_storemem
00000608 0D 00 0A 00        		.dw 0x0d,0x0a
00008057                    	.code
                            	LM12:
00008057 12 95 02 03        		R2=[_freq]	// QImode move
00008059 1A D5 04 03        		[_mem_freq]=R2	// QImode move
0000060A                    	.debug
0000060A 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
0000061D 0A 00 00 00        		.dd LM13-_storemem
0000061F 0D 00 0A 00        		.dw 0x0d,0x0a
0000805B                    	.code
                            	LM13:
0000805B 12 95 03 03        		R2=[_vol]	// QImode move
0000805D 1A D5 05 03        		[_mem_vol]=R2	// QImode move
00000621                    	.debug
00000621 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
00000634 0E 00 00 00        		.dd LM14-_storemem
00000636 0D 00 0A 00        		.dw 0x0d,0x0a
0000805F                    	.code
                            	LM14:
0000805F 12 95 01 03        		R2=[_mode]	// QImode move
00008061 40 44              		CMP R2,0	// QImode test
00008062 2F 4E 01 EE        		NSJNZ L13	//QImode NE
         00 EE      
00000638                    	.debug
00000638 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
0000064B 14 00 00 00        		.dd LM15-_storemem
0000064D 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
                            	LM15:
00008065 40 94              		R2=0	// QImode move
00008066 C5 D4              		[BP]=R2	// QImode move
                            	L14:
00008067 C5 94              		R2=[BP]	// QImode move
00008068 0A 45 FF 00        		CMP R2,255	// QImode compare
0000806A 04 AE 01 EE        		NSJNG L17	//QImode LE
         00 EE      
0000806D 0F 9F 92 80        		pc=L13	// Indirect jump
                            	L17:
0000064F                    	.debug
0000064F 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
00000662 1E 00 00 00        		.dd LM16-_storemem
00000664 0D 00 0A 00        		.dw 0x0d,0x0a
0000806F                    	.code
                            	LM16:
0000806F 41 94              		R2=1	// QImode move
00008070 1A D5 12 70        		[28690]=R2	// QImode move
00000666                    	.debug
00000666 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
00000679 21 00 00 00        		.dd LM17-_storemem
0000067B 0D 00 0A 00        		.dw 0x0d,0x0a
00008072                    	.code
                            	LM17:
00008072 0A 95 06 03        		R2=_mem_table	// QImode move
00008074 C5 96              		R3=[BP]	// QImode move
00008075 03 05              		R2 = R2 + R3	//addqi3
00008076 0B 97 06 03        		R3=_mem_table	// QImode move
00008078 C5 98              		R4=[BP]	// QImode move
00008079 04 07              		R3 = R3 + R4	//addqi3
0000807A 0C 99 01 02        		R4=_SINE	// QImode move
0000807C 07 D8              		[bp+7]=R4	// QImode move
0000807D C5 98              		R4=[BP]	// QImode move
0000807E 01 D8              		[bp+1]=R4	// QImode move
0000807F 07 98              		R4=[bp+7]	// QImode move
00008080 07 D8              		[bp+7]=R4	// QImode move
00008081 07 98              		R4=[bp+7]	// QImode move
00008082 01 08              		R4 = R4 + [bp+1]	//addqi3
00008083 07 D8              		[bp+7]=R4	// QImode move
00008084 03 99              		R4=R3	// QImode move
00008085 C4 98              		R4=[R4]	// QImode move
00008086 02 D8              		[bp+2]=R4	// QImode move
00008087 02 96              		R3=[bp+2]	// QImode move
00008088 07 98              		R4=[bp+7]	// QImode move
00008089 C4 06              		R3 = R3 + [R4]	//addqi3
0000808A 02 99              		R4=R2	// QImode move
0000808B C4 D6              		[R4]=R3	// QImode move
0000067D                    	.debug
0000067D 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
00000690 3B 00 00 00        		.dd LM18-_storemem
00000692 0D 00 0A 00        		.dw 0x0d,0x0a
0000808C                    	.code
                            	LM18:
                            	L16:
0000808C C5 94              		R2=[BP]	// QImode move
0000808D 0A 07 01 00        		R3=R2+1
0000808F C5 D6              		[BP]=R3	// QImode move
00008090 0F 9F 67 80        		pc=L14	// Indirect jump
                            	L15:
                            	L13:
00000694                    	.debug
00000694 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
000006A7 41 00 00 00        		.dd LM19-_storemem
000006A9 0D 00 0A 00        		.dw 0x0d,0x0a
00008092                    	.code
                            	LM19:
00008092 12 95 01 03        		R2=[_mode]	// QImode move
00008094 41 44              		CMP R2,1	// QImode compare
00008095 2F 4E 01 EE        		NSJNZ L18	//QImode NE
         00 EE      
000006AB                    	.debug
000006AB 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
000006BE 47 00 00 00        		.dd LM20-_storemem
000006C0 0D 00 0A 00        		.dw 0x0d,0x0a
00008098                    	.code
                            	LM20:
00008098 40 94              		R2=0	// QImode move
00008099 C5 D4              		[BP]=R2	// QImode move
                            	L19:
0000809A C5 94              		R2=[BP]	// QImode move
0000809B 0A 45 FF 00        		CMP R2,255	// QImode compare
0000809D 04 AE 01 EE        		NSJNG L22	//QImode LE
         00 EE      
000080A0 0F 9F C5 80        		pc=L18	// Indirect jump
                            	L22:
000006C2                    	.debug
000006C2 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
000006D5 51 00 00 00        		.dd LM21-_storemem
000006D7 0D 00 0A 00        		.dw 0x0d,0x0a
000080A2                    	.code
                            	LM21:
000080A2 41 94              		R2=1	// QImode move
000080A3 1A D5 12 70        		[28690]=R2	// QImode move
000006D9                    	.debug
000006D9 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
000006EC 54 00 00 00        		.dd LM22-_storemem
000006EE 0D 00 0A 00        		.dw 0x0d,0x0a
000080A5                    	.code
                            	LM22:
000080A5 0A 95 06 03        		R2=_mem_table	// QImode move
000080A7 C5 96              		R3=[BP]	// QImode move
000080A8 03 05              		R2 = R2 + R3	//addqi3
000080A9 0B 97 06 03        		R3=_mem_table	// QImode move
000080AB C5 98              		R4=[BP]	// QImode move
000080AC 04 07              		R3 = R3 + R4	//addqi3
000080AD 0C 99 01 00        		R4=_SQUR	// QImode move
000080AF 07 D8              		[bp+7]=R4	// QImode move
000080B0 C5 98              		R4=[BP]	// QImode move
000080B1 03 D8              		[bp+3]=R4	// QImode move
000080B2 07 98              		R4=[bp+7]	// QImode move
000080B3 07 D8              		[bp+7]=R4	// QImode move
000080B4 07 98              		R4=[bp+7]	// QImode move
000080B5 03 08              		R4 = R4 + [bp+3]	//addqi3
000080B6 07 D8              		[bp+7]=R4	// QImode move
000080B7 03 99              		R4=R3	// QImode move
000080B8 C4 98              		R4=[R4]	// QImode move
000080B9 04 D8              		[bp+4]=R4	// QImode move
000080BA 04 96              		R3=[bp+4]	// QImode move
000080BB 07 98              		R4=[bp+7]	// QImode move
000080BC C4 06              		R3 = R3 + [R4]	//addqi3
000080BD 02 99              		R4=R2	// QImode move
000080BE C4 D6              		[R4]=R3	// QImode move
000006F0                    	.debug
000006F0 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
00000703 6E 00 00 00        		.dd LM23-_storemem
00000705 0D 00 0A 00        		.dw 0x0d,0x0a
000080BF                    	.code
                            	LM23:
                            	L21:
000080BF C5 94              		R2=[BP]	// QImode move
000080C0 0A 07 01 00        		R3=R2+1
000080C2 C5 D6              		[BP]=R3	// QImode move
000080C3 0F 9F 9A 80        		pc=L19	// Indirect jump
                            	L20:
                            	L18:
00000707                    	.debug
00000707 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
0000071A 74 00 00 00        		.dd LM24-_storemem
0000071C 0D 00 0A 00        		.dw 0x0d,0x0a
000080C5                    	.code
                            	LM24:
000080C5 12 95 01 03        		R2=[_mode]	// QImode move
000080C7 42 44              		CMP R2,2	// QImode compare
000080C8 2F 4E 01 EE        		NSJNZ L23	//QImode NE
         00 EE      
0000071E                    	.debug
0000071E 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
00000731 7A 00 00 00        		.dd LM25-_storemem
00000733 0D 00 0A 00        		.dw 0x0d,0x0a
000080CB                    	.code
                            	LM25:
000080CB 40 94              		R2=0	// QImode move
000080CC C5 D4              		[BP]=R2	// QImode move
                            	L24:
000080CD C5 94              		R2=[BP]	// QImode move
000080CE 0A 45 FF 00        		CMP R2,255	// QImode compare
000080D0 04 AE 01 EE        		NSJNG L27	//QImode LE
         00 EE      
000080D3 0F 9F F8 80        		pc=L23	// Indirect jump
                            	L27:
00000735                    	.debug
00000735 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
00000748 84 00 00 00        		.dd LM26-_storemem
0000074A 0D 00 0A 00        		.dw 0x0d,0x0a
000080D5                    	.code
                            	LM26:
000080D5 41 94              		R2=1	// QImode move
000080D6 1A D5 12 70        		[28690]=R2	// QImode move
0000074C                    	.debug
0000074C 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
0000075F 87 00 00 00        		.dd LM27-_storemem
00000761 0D 00 0A 00        		.dw 0x0d,0x0a
000080D8                    	.code
                            	LM27:
000080D8 0A 95 06 03        		R2=_mem_table	// QImode move
000080DA C5 96              		R3=[BP]	// QImode move
000080DB 03 05              		R2 = R2 + R3	//addqi3
000080DC 0B 97 06 03        		R3=_mem_table	// QImode move
000080DE C5 98              		R4=[BP]	// QImode move
000080DF 04 07              		R3 = R3 + R4	//addqi3
000080E0 0C 99 01 01        		R4=_TRIG	// QImode move
000080E2 07 D8              		[bp+7]=R4	// QImode move
000080E3 C5 98              		R4=[BP]	// QImode move
000080E4 05 D8              		[bp+5]=R4	// QImode move
000080E5 07 98              		R4=[bp+7]	// QImode move
000080E6 07 D8              		[bp+7]=R4	// QImode move
000080E7 07 98              		R4=[bp+7]	// QImode move
000080E8 05 08              		R4 = R4 + [bp+5]	//addqi3
000080E9 07 D8              		[bp+7]=R4	// QImode move
000080EA 03 99              		R4=R3	// QImode move
000080EB C4 98              		R4=[R4]	// QImode move
000080EC 06 D8              		[bp+6]=R4	// QImode move
000080ED 06 96              		R3=[bp+6]	// QImode move
000080EE 07 98              		R4=[bp+7]	// QImode move
000080EF C4 06              		R3 = R3 + [R4]	//addqi3
000080F0 02 99              		R4=R2	// QImode move
000080F1 C4 D6              		[R4]=R3	// QImode move
00000763                    	.debug
00000763 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
00000776 A1 00 00 00        		.dd LM28-_storemem
00000778 0D 00 0A 00        		.dw 0x0d,0x0a
000080F2                    	.code
                            	LM28:
                            	L26:
000080F2 C5 94              		R2=[BP]	// QImode move
000080F3 0A 07 01 00        		R3=R2+1
000080F5 C5 D6              		[BP]=R3	// QImode move
000080F6 0F 9F CD 80        		pc=L24	// Indirect jump
                            	L25:
                            	L23:
0000077A                    	.debug
0000077A 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
0000078D A7 00 00 00        		.dd LM29-_storemem
0000078F 0D 00 0A 00        		.dw 0x0d,0x0a
000080F8                    	.code
                            	LM29:
000080F8 12 95 01 03        		R2=[_mode]	// QImode move
000080FA 43 44              		CMP R2,3	// QImode compare
000080FB 24 4E 01 EE        		NSJNZ L28	//QImode NE
         00 EE      
00000791                    	.debug
00000791 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
000007A4 AD 00 00 00        		.dd LM30-_storemem
000007A6 0D 00 0A 00        		.dw 0x0d,0x0a
000080FE                    	.code
                            	LM30:
000080FE 40 94              		R2=0	// QImode move
000080FF C5 D4              		[BP]=R2	// QImode move
                            	L29:
00008100 C5 94              		R2=[BP]	// QImode move
00008101 0A 45 FF 00        		CMP R2,255	// QImode compare
00008103 04 AE 01 EE        		NSJNG L32	//QImode LE
         00 EE      
00008106 0F 9F 20 81        		pc=L28	// Indirect jump
                            	L32:
000007A8                    	.debug
000007A8 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
000007BB B7 00 00 00        		.dd LM31-_storemem
000007BD 0D 00 0A 00        		.dw 0x0d,0x0a
00008108                    	.code
                            	LM31:
00008108 41 94              		R2=1	// QImode move
00008109 1A D5 12 70        		[28690]=R2	// QImode move
000007BF                    	.debug
000007BF 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
000007D2 BA 00 00 00        		.dd LM32-_storemem
000007D4 0D 00 0A 00        		.dw 0x0d,0x0a
0000810B                    	.code
                            	LM32:
0000810B 0A 95 06 03        		R2=_mem_table	// QImode move
0000810D C5 96              		R3=[BP]	// QImode move
0000810E 03 05              		R2 = R2 + R3	//addqi3
0000810F 0B 97 06 03        		R3=_mem_table	// QImode move
00008111 C5 98              		R4=[BP]	// QImode move
00008112 04 07              		R3 = R3 + R4	//addqi3
00008113 03 99              		R4=R3	// QImode move
00008114 C4 98              		R4=[R4]	// QImode move
00008115 07 D8              		[bp+7]=R4	// QImode move
00008116 07 96              		R3=[bp+7]	// QImode move
00008117 43 99              		R4=R3 lsl 1
00008118 02 97              		R3=R2	// QImode move
00008119 C3 D8              		[R3]=R4	// QImode move
000007D6                    	.debug
000007D6 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
000007E9 C9 00 00 00        		.dd LM33-_storemem
000007EB 0D 00 0A 00        		.dw 0x0d,0x0a
0000811A                    	.code
                            	LM33:
                            	L31:
0000811A C5 94              		R2=[BP]	// QImode move
0000811B 0A 07 01 00        		R3=R2+1
0000811D C5 D6              		[BP]=R3	// QImode move
0000811E 0F 9F 00 81        		pc=L29	// Indirect jump
                            	L30:
                            	L28:
000007ED                    	.debug
000007ED 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00000800 CF 00 00 00        		.dd LM34-_storemem
00000802 0D 00 0A 00        		.dw 0x0d,0x0a
00008120                    	.code
                            	LM34:
                            	LBE3:
00000804                    	.debug
00000804 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00000817 CF 00 00 00        		.dd LM35-_storemem
00000819 0D 00 0A 00        		.dw 0x0d,0x0a
00008120                    	.code
                            	LM35:
                            	L12:
                            	
00008120 48 00              		sp+=8
00008121 88 98              		pop bp from [sp]
00008122 90 9A              		retf
                            		.endp	// end of storemem
                            	
0000081B                    	.debug
0000081B 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000082D 06 00 00 00        		.dd LBB3-_storemem
0000082F 0D 00 0A 00        		.dw 0x0d,0x0a
00008123                    	.code
00000831                    	.debug
00000831 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008123                    	.CODE
00000849                    	.debug
00000849 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000085B CF 00 00 00        		.dd LBE3-_storemem
0000085D 0D 00 0A 00        		.dw 0x0d,0x0a
00008123                    	.code
0000085F                    	.debug
0000085F 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000868 D2 00 00 00        		.dd LME2-_storemem
0000086A 0D 00 0A 00        		.dw 0x0d,0x0a
00008123                    	.code
                            	LME2:
00008123                    	.code
0000086C                    	.debug
0000086C 2E 00 73 00        		.dw '.stabs "clearmem:F19",36,0,0,',0,0,offset _clearmem,seg _clearmem,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6C 00
         65 00 61 00
         72 00 6D 00
         65 00 6D 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 FD 00
         00 00 0D 00
         0A 00      
00008123                    	.CODE
                            	.public _clearmem
                            	_clearmem:	.proc
0000088F                    	.debug
0000088F 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
000008A2 00 00 00 00        		.dd LM36-_clearmem
000008A4 0D 00 0A 00        		.dw 0x0d,0x0a
00008123                    	.code
                            	LM36:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008123 88 DA              		push bp to [sp]
00008124 41 20              		sp-=1
00008125 08 0B 01 00        		bp=sp+1
                            	
00008127 0D 03 04 00        		R1=BP+4
000008A6                    	.debug
000008A6 2E 00 73 00        		.dw '.stabn 0x44,0,74,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 34 00
         2C 00 00 00
         00 00      
000008B9 06 00 00 00        		.dd LM37-_clearmem
000008BB 0D 00 0A 00        		.dw 0x0d,0x0a
00008129                    	.code
                            	LM37:
                            	LBB4:
000008BD                    	.debug
000008BD 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
000008D0 06 00 00 00        		.dd LM38-_clearmem
000008D2 0D 00 0A 00        		.dw 0x0d,0x0a
00008129                    	.code
                            	LM38:
00008129 40 94              		R2=0	// QImode move
0000812A 1A D5 04 03        		[_mem_freq]=R2	// QImode move
000008D4                    	.debug
000008D4 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
000008E7 09 00 00 00        		.dd LM39-_clearmem
000008E9 0D 00 0A 00        		.dw 0x0d,0x0a
0000812C                    	.code
                            	LM39:
0000812C 40 94              		R2=0	// QImode move
0000812D 1A D5 05 03        		[_mem_vol]=R2	// QImode move
000008EB                    	.debug
000008EB 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
000008FE 0C 00 00 00        		.dd LM40-_clearmem
00000900 0D 00 0A 00        		.dw 0x0d,0x0a
0000812F                    	.code
                            	LM40:
0000812F 40 94              		R2=0	// QImode move
00008130 C5 D4              		[BP]=R2	// QImode move
                            	L42:
00008131 C5 94              		R2=[BP]	// QImode move
00008132 0A 45 FF 00        		CMP R2,255	// QImode compare
00008134 04 AE 01 EE        		NSJNG L45	//QImode LE
         00 EE      
00008137 0F 9F 49 81        		pc=L43	// Indirect jump
                            	L45:
00000902                    	.debug
00000902 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
00000915 16 00 00 00        		.dd LM41-_clearmem
00000917 0D 00 0A 00        		.dw 0x0d,0x0a
00008139                    	.code
                            	LM41:
00008139 41 94              		R2=1	// QImode move
0000813A 1A D5 12 70        		[28690]=R2	// QImode move
00000919                    	.debug
00000919 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
0000092C 19 00 00 00        		.dd LM42-_clearmem
0000092E 0D 00 0A 00        		.dw 0x0d,0x0a
0000813C                    	.code
                            	LM42:
0000813C 0A 95 06 03        		R2=_mem_table	// QImode move
0000813E C5 96              		R3=[BP]	// QImode move
0000813F 03 05              		R2 = R2 + R3	//addqi3
00008140 40 96              		R3=0	// QImode move
00008141 02 99              		R4=R2	// QImode move
00008142 C4 D6              		[R4]=R3	// QImode move
00000930                    	.debug
00000930 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
00000943 20 00 00 00        		.dd LM43-_clearmem
00000945 0D 00 0A 00        		.dw 0x0d,0x0a
00008143                    	.code
                            	LM43:
                            	L44:
00008143 C5 94              		R2=[BP]	// QImode move
00008144 0A 07 01 00        		R3=R2+1
00008146 C5 D6              		[BP]=R3	// QImode move
00008147 0F 9F 31 81        		pc=L42	// Indirect jump
                            	L43:
00000947                    	.debug
00000947 2E 00 73 00        		.dw '.stabn 0x44,0,82,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 32 00
         2C 00 00 00
         00 00      
0000095A 26 00 00 00        		.dd LM44-_clearmem
0000095C 0D 00 0A 00        		.dw 0x0d,0x0a
00008149                    	.code
                            	LM44:
                            	LBE4:
0000095E                    	.debug
0000095E 2E 00 73 00        		.dw '.stabn 0x44,0,82,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 32 00
         2C 00 00 00
         00 00      
00000971 26 00 00 00        		.dd LM45-_clearmem
00000973 0D 00 0A 00        		.dw 0x0d,0x0a
00008149                    	.code
                            	LM45:
                            	L41:
                            	
00008149 41 00              		sp+=1
0000814A 88 98              		pop bp from [sp]
0000814B 90 9A              		retf
                            		.endp	// end of clearmem
                            	
00000975                    	.debug
00000975 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000987 06 00 00 00        		.dd LBB4-_clearmem
00000989 0D 00 0A 00        		.dw 0x0d,0x0a
0000814C                    	.code
0000098B                    	.debug
0000098B 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000814C                    	.CODE
000009A3                    	.debug
000009A3 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000009B5 26 00 00 00        		.dd LBE4-_clearmem
000009B7 0D 00 0A 00        		.dw 0x0d,0x0a
0000814C                    	.code
000009B9                    	.debug
000009B9 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000009C2 29 00 00 00        		.dd LME3-_clearmem
000009C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000814C                    	.code
                            	LME3:
0000814C                    	.code
000009C6                    	.debug
000009C6 2E 00 73 00        		.dw '.stabs "initkey:F19",36,0,0,',0,0,offset _initkey,seg _initkey,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         69 00 74 00
         6B 00 65 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         26 01 00 00
         0D 00 0A 00
0000814C                    	.CODE
                            	.public _initkey
                            	_initkey:	.proc
000009E8                    	.debug
000009E8 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
000009FB 00 00 00 00        		.dd LM46-_initkey
000009FD 0D 00 0A 00        		.dw 0x0d,0x0a
0000814C                    	.code
                            	LM46:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
0000814C 88 DA              		push bp to [sp]
0000814D 08 0B 01 00        		bp=sp+1
                            	
0000814F 0D 03 03 00        		R1=BP+3
000009FF                    	.debug
000009FF 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
00000A12 05 00 00 00        		.dd LM47-_initkey
00000A14 0D 00 0A 00        		.dw 0x0d,0x0a
00008151                    	.code
                            	LM47:
00008151 12 95 07 70        		R2=[28679]	// QImode move
00008153 0A B7 00 FF        		R3=R2&(-256)
00008155 1B D7 07 70        		[28679]=R3	// QImode move
00000A16                    	.debug
00000A16 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
00000A29 0B 00 00 00        		.dd LM48-_initkey
00000A2B 0D 00 0A 00        		.dw 0x0d,0x0a
00008157                    	.code
                            	LM48:
00008157 12 95 08 70        		R2=[28680]	// QImode move
00008159 0A B7 00 FF        		R3=R2&(-256)
0000815B 1B D7 08 70        		[28680]=R3	// QImode move
00000A2D                    	.debug
00000A2D 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
00000A40 11 00 00 00        		.dd LM49-_initkey
00000A42 0D 00 0A 00        		.dw 0x0d,0x0a
0000815D                    	.code
                            	LM49:
0000815D 12 95 05 70        		R2=[28677]	// QImode move
0000815F 0A A7 FF 00        		R3=R2|255
00008161 1B D7 05 70        		[28677]=R3	// QImode move
00000A44                    	.debug
00000A44 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
00000A57 17 00 00 00        		.dd LM50-_initkey
00000A59 0D 00 0A 00        		.dw 0x0d,0x0a
00008163                    	.code
                            	LM50:
00000A5B                    	.debug
00000A5B 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
00000A6E 17 00 00 00        		.dd LM51-_initkey
00000A70 0D 00 0A 00        		.dw 0x0d,0x0a
00008163                    	.code
                            	LM51:
                            	L47:
                            	
00008163 88 98              		pop bp from [sp]
00008164 90 9A              		retf
                            		.endp	// end of initkey
                            	
00000A72                    	.debug
00000A72 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000A7B 19 00 00 00        		.dd LME4-_initkey
00000A7D 0D 00 0A 00        		.dw 0x0d,0x0a
00008165                    	.code
                            	LME4:
00008165                    	.code
00000A7F                    	.debug
00000A7F 2E 00 73 00        		.dw '.stabs "KeyScan:F19",36,0,0,',0,0,offset _KeyScan,seg _KeyScan,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 53 00
         63 00 61 00
         6E 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         3F 01 00 00
         0D 00 0A 00
00008165                    	.CODE
                            	.public _KeyScan
                            	_KeyScan:	.proc
00000AA1                    	.debug
00000AA1 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
00000AB4 00 00 00 00        		.dd LM52-_KeyScan
00000AB6 0D 00 0A 00        		.dw 0x0d,0x0a
00008165                    	.code
                            	LM52:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008165 88 DA              		push bp to [sp]
00008166 43 20              		sp-=3
00008167 08 0B 01 00        		bp=sp+1
                            	
00008169 0D 03 06 00        		R1=BP+6
0000816B 02 D2              		[bp+2]=R1	// QImode move
00000AB8                    	.debug
00000AB8 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000ACB 07 00 00 00        		.dd LM53-_KeyScan
00000ACD 0D 00 0A 00        		.dw 0x0d,0x0a
0000816C                    	.code
                            	LM53:
                            	LBB5:
00000ACF                    	.debug
00000ACF 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
00000AE2 07 00 00 00        		.dd LM54-_KeyScan
00000AE4 0D 00 0A 00        		.dw 0x0d,0x0a
0000816C                    	.code
                            	LM54:
0000816C 05 93              		R1=BP	// QImode move
0000816D 0D 05 01 00        		R2=BP+1
0000816F 11 93 05 70        		R1=[28677]	// QImode move
00008171 09 B9 FF 00        		R4=R1&255
00008173 02 97              		R3=R2	// QImode move
00008174 C3 D8              		[R3]=R4	// QImode move
00000AE6                    	.debug
00000AE6 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000AF9 10 00 00 00        		.dd LM55-_KeyScan
00000AFB 0D 00 0A 00        		.dw 0x0d,0x0a
00008175                    	.code
                            	LM55:
00008175 05 93              		R1=BP	// QImode move
00008176 0D 05 01 00        		R2=BP+1
00008178 02 97              		R3=R2	// QImode move
00008179 C3 92              		R1=[R3]	// QImode move
0000817A 09 43 FF 00        		CMP R1,255	// QImode compare
0000817C 04 4E 01 EE        		NSJNZ L49	//QImode NE
         00 EE      
00000AFD                    	.debug
00000AFD 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
00000B10 1A 00 00 00        		.dd LM56-_KeyScan
00000B12 0D 00 0A 00        		.dw 0x0d,0x0a
0000817F                    	.code
                            	LM56:
0000817F 0F 9F 5F 82        		pc=L48	// Indirect jump
                            	L49:
00000B14                    	.debug
00000B14 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000B27 1C 00 00 00        		.dd LM57-_KeyScan
00000B29 0D 00 0A 00        		.dw 0x0d,0x0a
00008181                    	.code
                            	LM57:
00008181 12 95 05 70        		R2=[28677]	// QImode move
00008183 0A A3 00 FF        		R1=R2|(-256)
00008185 09 85 FF FF        		R2=R1^0xffff	// one_cmplqi2
00008187 C5 D4              		[BP]=R2	// QImode move
00000B2B                    	.debug
00000B2B 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000B3E 23 00 00 00        		.dd LM58-_KeyScan
00000B40 0D 00 0A 00        		.dw 0x0d,0x0a
00008188                    	.code
                            	LM58:
00008188 C5 92              		R1=[BP]	// QImode move
00008189 48 42              		CMP R1,8	// QImode compare
0000818A 02 4E 0F 9F        		NSJZ L61	//QImode EQ
         10 82      
0000818D 48 42              		CMP R1,8	// QImode compare
0000818E 16 BE 01 EE        		NSJG L69	//QImode GT
         00 EE      
00008191 42 42              		CMP R1,2	// QImode compare
00008192 02 4E 0F 9F        		NSJZ L64	//QImode EQ
         32 82      
00008195 42 42              		CMP R1,2	// QImode compare
00008196 08 BE 01 EE        		NSJG L70	//QImode GT
         00 EE      
00008199 41 42              		CMP R1,1	// QImode compare
0000819A 02 4E 0F 9F        		NSJZ L65	//QImode EQ
         3C 82      
0000819D 0F 9F 51 82        		pc=L67	// Indirect jump
                            	L70:
0000819F 44 42              		CMP R1,4	// QImode compare
000081A0 02 4E 0F 9F        		NSJZ L63	//QImode EQ
         28 82      
000081A3 0F 9F 51 82        		pc=L67	// Indirect jump
                            	L69:
000081A5 60 42              		CMP R1,32	// QImode compare
000081A6 39 5E 01 EE        		NSJZ L57	//QImode EQ
         00 EE      
000081A9 60 42              		CMP R1,32	// QImode compare
000081AA 08 BE 01 EE        		NSJG L71	//QImode GT
         00 EE      
000081AD 50 42              		CMP R1,16	// QImode compare
000081AE 02 4E 0F 9F        		NSJZ L59	//QImode EQ
         F8 81      
000081B1 0F 9F 51 82        		pc=L67	// Indirect jump
                            	L71:
000081B3 09 43 40 00        		CMP R1,64	// QImode compare
000081B5 11 5E 01 EE        		NSJZ L55	//QImode EQ
         00 EE      
000081B8 09 43 80 00        		CMP R1,128	// QImode compare
000081BA 04 5E 01 EE        		NSJZ L51	//QImode EQ
         00 EE      
000081BD 0F 9F 51 82        		pc=L67	// Indirect jump
                            	L51:
00000B42                    	.debug
00000B42 2E 00 73 00        		.dw '.stabn 0x44,0,100,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         30 00 2C 00
         00 00 00 00
00000B56 5A 00 00 00        		.dd LM59-_KeyScan
00000B58 0D 00 0A 00        		.dw 0x0d,0x0a
000081BF                    	.code
                            	LM59:
                            	L52:
000081BF 0F 9F C3 81        		pc=L54	// Indirect jump
000081C1 0F 9F C5 81        		pc=L53	// Indirect jump
                            	L54:
000081C3 0F 9F BF 81        		pc=L52	// Indirect jump
                            	L53:
00000B5A                    	.debug
00000B5A 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000B6E 60 00 00 00        		.dd LM60-_KeyScan
00000B70 0D 00 0A 00        		.dw 0x0d,0x0a
000081C5                    	.code
                            	LM60:
000081C5 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L55:
00000B72                    	.debug
00000B72 2E 00 73 00        		.dw '.stabn 0x44,0,103,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         33 00 2C 00
         00 00 00 00
00000B86 62 00 00 00        		.dd LM61-_KeyScan
00000B88 0D 00 0A 00        		.dw 0x0d,0x0a
000081C7                    	.code
                            	LM61:
000081C7 11 93 02 03        		R1=[_freq]	// QImode move
000081C9 0A 95 64 00        		R2=100	// QImode move
000081CB 19 05 02 03        		[_freq]=R1+R2  //addqi3_Qrr
00000B8A                    	.debug
00000B8A 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000B9E 68 00 00 00        		.dd LM62-_KeyScan
00000BA0 0D 00 0A 00        		.dw 0x0d,0x0a
000081CD                    	.code
                            	LM62:
000081CD 11 93 02 03        		R1=[_freq]	// QImode move
000081CF 09 43 1F 4E        		CMP R1,19999	// QImode compare
000081D1 06 8E 01 EE        		NSJNA L56	//QImode LEU
         00 EE      
00000BA2                    	.debug
00000BA2 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000BB6 6F 00 00 00        		.dd LM63-_KeyScan
00000BB8 0D 00 0A 00        		.dw 0x0d,0x0a
000081D4                    	.code
                            	LM63:
000081D4 09 93 64 00        		R1=100	// QImode move
000081D6 19 D3 02 03        		[_freq]=R1	// QImode move
                            	L56:
00000BBA                    	.debug
00000BBA 2E 00 73 00        		.dw '.stabn 0x44,0,108,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         38 00 2C 00
         00 00 00 00
00000BCE 73 00 00 00        		.dd LM64-_KeyScan
00000BD0 0D 00 0A 00        		.dw 0x0d,0x0a
000081D8                    	.code
                            	LM64:
000081D8 09 93 FF 0F        		R1=4095	// QImode move
000081DA C8 D2              		[SP--]=R1	// QImode move
000081DB 40 F0 26 80        		call _delay	// call without return value
000081DD 41 00              		SP = SP + 1	//SP
00000BD2                    	.debug
00000BD2 2E 00 73 00        		.dw '.stabn 0x44,0,109,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         39 00 2C 00
         00 00 00 00
00000BE6 79 00 00 00        		.dd LM65-_KeyScan
00000BE8 0D 00 0A 00        		.dw 0x0d,0x0a
000081DE                    	.code
                            	LM65:
000081DE 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L57:
00000BEA                    	.debug
00000BEA 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
00000BFE 7B 00 00 00        		.dd LM66-_KeyScan
00000C00 0D 00 0A 00        		.dw 0x0d,0x0a
000081E0                    	.code
                            	LM66:
000081E0 11 93 02 03        		R1=[_freq]	// QImode move
000081E2 0A 65 64 00        		R2=(-100)	// QImode move
000081E4 19 05 02 03        		[_freq]=R1+R2  //addqi3_Qrr
00000C02                    	.debug
00000C02 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
00000C16 81 00 00 00        		.dd LM67-_KeyScan
00000C18 0D 00 0A 00        		.dw 0x0d,0x0a
000081E6                    	.code
                            	LM67:
000081E6 11 93 02 03        		R1=[_freq]	// QImode move
000081E8 40 42              		CMP R1,0	// QImode test
000081E9 06 4E 01 EE        		NSJNZ L58	//QImode NE
         00 EE      
00000C1A                    	.debug
00000C1A 2E 00 73 00        		.dw '.stabn 0x44,0,114,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         34 00 2C 00
         00 00 00 00
00000C2E 87 00 00 00        		.dd LM68-_KeyScan
00000C30 0D 00 0A 00        		.dw 0x0d,0x0a
000081EC                    	.code
                            	LM68:
000081EC 09 93 20 4E        		R1=20000	// QImode move
000081EE 19 D3 02 03        		[_freq]=R1	// QImode move
                            	L58:
00000C32                    	.debug
00000C32 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
00000C46 8B 00 00 00        		.dd LM69-_KeyScan
00000C48 0D 00 0A 00        		.dw 0x0d,0x0a
000081F0                    	.code
                            	LM69:
000081F0 09 93 FF 0F        		R1=4095	// QImode move
000081F2 C8 D2              		[SP--]=R1	// QImode move
000081F3 40 F0 26 80        		call _delay	// call without return value
000081F5 41 00              		SP = SP + 1	//SP
00000C4A                    	.debug
00000C4A 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000C5E 91 00 00 00        		.dd LM70-_KeyScan
00000C60 0D 00 0A 00        		.dw 0x0d,0x0a
000081F6                    	.code
                            	LM70:
000081F6 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L59:
00000C62                    	.debug
00000C62 2E 00 73 00        		.dw '.stabn 0x44,0,119,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         39 00 2C 00
         00 00 00 00
00000C76 93 00 00 00        		.dd LM71-_KeyScan
00000C78 0D 00 0A 00        		.dw 0x0d,0x0a
000081F8                    	.code
                            	LM71:
000081F8 11 93 03 03        		R1=[_vol]	// QImode move
000081FA 72 42              		CMP R1,50	// QImode compare
000081FB 07 4E 01 EE        		NSJNZ L60	//QImode NE
         00 EE      
00000C7A                    	.debug
00000C7A 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
00000C8E 99 00 00 00        		.dd LM72-_KeyScan
00000C90 0D 00 0A 00        		.dw 0x0d,0x0a
000081FE                    	.code
                            	LM72:
000081FE 40 92              		R1=0	// QImode move
000081FF 19 D3 03 03        		[_vol]=R1	// QImode move
00000C92                    	.debug
00000C92 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000CA6 9C 00 00 00        		.dd LM73-_KeyScan
00000CA8 0D 00 0A 00        		.dw 0x0d,0x0a
00008201                    	.code
                            	LM73:
00008201 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L60:
00000CAA                    	.debug
00000CAA 2E 00 73 00        		.dw '.stabn 0x44,0,124,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         34 00 2C 00
         00 00 00 00
00000CBE 9E 00 00 00        		.dd LM74-_KeyScan
00000CC0 0D 00 0A 00        		.dw 0x0d,0x0a
00008203                    	.code
                            	LM74:
00008203 09 93 FF 0F        		R1=4095	// QImode move
00008205 C8 D2              		[SP--]=R1	// QImode move
00008206 40 F0 26 80        		call _delay	// call without return value
00008208 41 00              		SP = SP + 1	//SP
00000CC2                    	.debug
00000CC2 2E 00 73 00        		.dw '.stabn 0x44,0,125,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         35 00 2C 00
         00 00 00 00
00000CD6 A4 00 00 00        		.dd LM75-_KeyScan
00000CD8 0D 00 0A 00        		.dw 0x0d,0x0a
00008209                    	.code
                            	LM75:
00008209 11 93 03 03        		R1=[_vol]	// QImode move
0000820B 41 94              		R2=1	// QImode move
0000820C 19 05 03 03        		[_vol]=R1+R2  //addqi3_Qrr
00000CDA                    	.debug
00000CDA 2E 00 73 00        		.dw '.stabn 0x44,0,126,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         36 00 2C 00
         00 00 00 00
00000CEE A9 00 00 00        		.dd LM76-_KeyScan
00000CF0 0D 00 0A 00        		.dw 0x0d,0x0a
0000820E                    	.code
                            	LM76:
0000820E 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L61:
00000CF2                    	.debug
00000CF2 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
00000D06 AB 00 00 00        		.dd LM77-_KeyScan
00000D08 0D 00 0A 00        		.dw 0x0d,0x0a
00008210                    	.code
                            	LM77:
00008210 11 93 03 03        		R1=[_vol]	// QImode move
00008212 40 42              		CMP R1,0	// QImode test
00008213 07 4E 01 EE        		NSJNZ L62	//QImode NE
         00 EE      
00000D0A                    	.debug
00000D0A 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
00000D1E B1 00 00 00        		.dd LM78-_KeyScan
00000D20 0D 00 0A 00        		.dw 0x0d,0x0a
00008216                    	.code
                            	LM78:
00008216 72 92              		R1=50	// QImode move
00008217 19 D3 03 03        		[_vol]=R1	// QImode move
00000D22                    	.debug
00000D22 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000D36 B4 00 00 00        		.dd LM79-_KeyScan
00000D38 0D 00 0A 00        		.dw 0x0d,0x0a
00008219                    	.code
                            	LM79:
00008219 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L62:
00000D3A                    	.debug
00000D3A 2E 00 73 00        		.dw '.stabn 0x44,0,133,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         33 00 2C 00
         00 00 00 00
00000D4E B6 00 00 00        		.dd LM80-_KeyScan
00000D50 0D 00 0A 00        		.dw 0x0d,0x0a
0000821B                    	.code
                            	LM80:
0000821B 11 93 03 03        		R1=[_vol]	// QImode move
0000821D 41 64              		R2=(-1)	// QImode move
0000821E 19 05 03 03        		[_vol]=R1+R2  //addqi3_Qrr
00000D52                    	.debug
00000D52 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
00000D66 BB 00 00 00        		.dd LM81-_KeyScan
00000D68 0D 00 0A 00        		.dw 0x0d,0x0a
00008220                    	.code
                            	LM81:
00008220 09 93 FF 0F        		R1=4095	// QImode move
00008222 C8 D2              		[SP--]=R1	// QImode move
00008223 40 F0 26 80        		call _delay	// call without return value
00008225 41 00              		SP = SP + 1	//SP
00000D6A                    	.debug
00000D6A 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
00000D7E C1 00 00 00        		.dd LM82-_KeyScan
00000D80 0D 00 0A 00        		.dw 0x0d,0x0a
00008226                    	.code
                            	LM82:
00008226 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L63:
00000D82                    	.debug
00000D82 2E 00 73 00        		.dw '.stabn 0x44,0,137,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         37 00 2C 00
         00 00 00 00
00000D96 C3 00 00 00        		.dd LM83-_KeyScan
00000D98 0D 00 0A 00        		.dw 0x0d,0x0a
00008228                    	.code
                            	LM83:
00008228 40 F0 51 80        		call _storemem	// call without return value
00000D9A                    	.debug
00000D9A 2E 00 73 00        		.dw '.stabn 0x44,0,138,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         38 00 2C 00
         00 00 00 00
00000DAE C5 00 00 00        		.dd LM84-_KeyScan
00000DB0 0D 00 0A 00        		.dw 0x0d,0x0a
0000822A                    	.code
                            	LM84:
0000822A 09 93 FF 0F        		R1=4095	// QImode move
0000822C C8 D2              		[SP--]=R1	// QImode move
0000822D 40 F0 26 80        		call _delay	// call without return value
0000822F 41 00              		SP = SP + 1	//SP
00000DB2                    	.debug
00000DB2 2E 00 73 00        		.dw '.stabn 0x44,0,139,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         39 00 2C 00
         00 00 00 00
00000DC6 CB 00 00 00        		.dd LM85-_KeyScan
00000DC8 0D 00 0A 00        		.dw 0x0d,0x0a
00008230                    	.code
                            	LM85:
00008230 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L64:
00000DCA                    	.debug
00000DCA 2E 00 73 00        		.dw '.stabn 0x44,0,141,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         31 00 2C 00
         00 00 00 00
00000DDE CD 00 00 00        		.dd LM86-_KeyScan
00000DE0 0D 00 0A 00        		.dw 0x0d,0x0a
00008232                    	.code
                            	LM86:
00008232 40 F0 23 81        		call _clearmem	// call without return value
00000DE2                    	.debug
00000DE2 2E 00 73 00        		.dw '.stabn 0x44,0,142,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         32 00 2C 00
         00 00 00 00
00000DF6 CF 00 00 00        		.dd LM87-_KeyScan
00000DF8 0D 00 0A 00        		.dw 0x0d,0x0a
00008234                    	.code
                            	LM87:
00008234 09 93 FF 0F        		R1=4095	// QImode move
00008236 C8 D2              		[SP--]=R1	// QImode move
00008237 40 F0 26 80        		call _delay	// call without return value
00008239 41 00              		SP = SP + 1	//SP
00000DFA                    	.debug
00000DFA 2E 00 73 00        		.dw '.stabn 0x44,0,143,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         33 00 2C 00
         00 00 00 00
00000E0E D5 00 00 00        		.dd LM88-_KeyScan
00000E10 0D 00 0A 00        		.dw 0x0d,0x0a
0000823A                    	.code
                            	LM88:
0000823A 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L65:
00000E12                    	.debug
00000E12 2E 00 73 00        		.dw '.stabn 0x44,0,145,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         35 00 2C 00
         00 00 00 00
00000E26 D7 00 00 00        		.dd LM89-_KeyScan
00000E28 0D 00 0A 00        		.dw 0x0d,0x0a
0000823C                    	.code
                            	LM89:
0000823C 11 93 01 03        		R1=[_mode]	// QImode move
0000823E 41 94              		R2=1	// QImode move
0000823F 19 05 01 03        		[_mode]=R1+R2  //addqi3_Qrr
00000E2A                    	.debug
00000E2A 2E 00 73 00        		.dw '.stabn 0x44,0,146,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         36 00 2C 00
         00 00 00 00
00000E3E DC 00 00 00        		.dd LM90-_KeyScan
00000E40 0D 00 0A 00        		.dw 0x0d,0x0a
00008241                    	.code
                            	LM90:
00008241 11 93 01 03        		R1=[_mode]	// QImode move
00008243 44 42              		CMP R1,4	// QImode compare
00008244 05 4E 01 EE        		NSJNZ L66	//QImode NE
         00 EE      
00000E42                    	.debug
00000E42 2E 00 73 00        		.dw '.stabn 0x44,0,148,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         38 00 2C 00
         00 00 00 00
00000E56 E2 00 00 00        		.dd LM91-_KeyScan
00000E58 0D 00 0A 00        		.dw 0x0d,0x0a
00008247                    	.code
                            	LM91:
00008247 40 92              		R1=0	// QImode move
00008248 19 D3 01 03        		[_mode]=R1	// QImode move
                            	L66:
00000E5A                    	.debug
00000E5A 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
00000E6E E5 00 00 00        		.dd LM92-_KeyScan
00000E70 0D 00 0A 00        		.dw 0x0d,0x0a
0000824A                    	.code
                            	LM92:
0000824A 41 62              		R1=(-1)	// QImode move
0000824B C8 D2              		[SP--]=R1	// QImode move
0000824C 40 F0 26 80        		call _delay	// call without return value
0000824E 41 00              		SP = SP + 1	//SP
00000E72                    	.debug
00000E72 2E 00 73 00        		.dw '.stabn 0x44,0,151,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         31 00 2C 00
         00 00 00 00
00000E86 EA 00 00 00        		.dd LM93-_KeyScan
00000E88 0D 00 0A 00        		.dw 0x0d,0x0a
0000824F                    	.code
                            	LM93:
0000824F 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L67:
00000E8A                    	.debug
00000E8A 2E 00 73 00        		.dw '.stabn 0x44,0,153,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         33 00 2C 00
         00 00 00 00
00000E9E EC 00 00 00        		.dd LM94-_KeyScan
00000EA0 0D 00 0A 00        		.dw 0x0d,0x0a
00008251                    	.code
                            	LM94:
00008251 0F 9F 53 82        		pc=L50	// Indirect jump
                            	L50:
00000EA2                    	.debug
00000EA2 2E 00 73 00        		.dw '.stabn 0x44,0,155,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         35 00 2C 00
         00 00 00 00
00000EB6 EE 00 00 00        		.dd LM95-_KeyScan
00000EB8 0D 00 0A 00        		.dw 0x0d,0x0a
00008253                    	.code
                            	LM95:
00008253 11 93 03 03        		R1=[_vol]	// QImode move
00008255 C8 D2              		[SP--]=R1	// QImode move
00008256 11 93 02 03        		R1=[_freq]	// QImode move
00008258 C8 D2              		[SP--]=R1	// QImode move
00008259 11 93 01 03        		R1=[_mode]	// QImode move
0000825B C8 D2              		[SP--]=R1	// QImode move
0000825C 40 F0 09 83        		call _show	// call without return value
0000825E 43 00              		SP = SP + 3	//SP
00000EBA                    	.debug
00000EBA 2E 00 73 00        		.dw '.stabn 0x44,0,156,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         36 00 2C 00
         00 00 00 00
00000ECE FA 00 00 00        		.dd LM96-_KeyScan
00000ED0 0D 00 0A 00        		.dw 0x0d,0x0a
0000825F                    	.code
                            	LM96:
                            	LBE5:
00000ED2                    	.debug
00000ED2 2E 00 73 00        		.dw '.stabn 0x44,0,156,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         36 00 2C 00
         00 00 00 00
00000EE6 FA 00 00 00        		.dd LM97-_KeyScan
00000EE8 0D 00 0A 00        		.dw 0x0d,0x0a
0000825F                    	.code
                            	LM97:
                            	L48:
                            	
0000825F 43 00              		sp+=3
00008260 88 98              		pop bp from [sp]
00008261 90 9A              		retf
                            		.endp	// end of KeyScan
                            	
00000EEA                    	.debug
00000EEA 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000EFC 07 00 00 00        		.dd LBB5-_KeyScan
00000EFE 0D 00 0A 00        		.dw 0x0d,0x0a
00008262                    	.code
00000F00                    	.debug
00000F00 2E 00 73 00        		.dw '.stabs "temp:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 65 00
         6D 00 70 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008262                    	.CODE
00000F1B                    	.debug
00000F1B 2E 00 73 00        		.dw '.stabs "value:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 61 00
         6C 00 75 00
         65 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
00008262                    	.CODE
00000F37                    	.debug
00000F37 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000F49 FA 00 00 00        		.dd LBE5-_KeyScan
00000F4B 0D 00 0A 00        		.dw 0x0d,0x0a
00008262                    	.code
00000F4D                    	.debug
00000F4D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000F56 FD 00 00 00        		.dd LME5-_KeyScan
00000F58 0D 00 0A 00        		.dw 0x0d,0x0a
00008262                    	.code
                            	LME5:
00008262                    	.code
00000F5A                    	.debug
00000F5A 2E 00 73 00        		.dw '.stabs "sendword:F19",36,0,0,',0,0,offset _sendword,seg _sendword,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 65 00
         6E 00 64 00
         77 00 6F 00
         72 00 64 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 3C 02
         00 00 0D 00
         0A 00      
00008262                    	.CODE
                            	.public _sendword
                            	_sendword:	.proc
00000F7D                    	.debug
00000F7D 2E 00 73 00        		.dw '.stabs "G:/yangsong/key/key/my7219.h",0x84,0,0,',0,0,offset Ltext2, seg Ltext2,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         47 00 3A 00
         2F 00 79 00
         61 00 6E 00
         67 00 73 00
         6F 00 6E 00
         67 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6D 00 79 00
         37 00 32 00
         31 00 39 00
         2E 00 68 00
         22 00 2C 00
         30 00 78 00
         38 00 34 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 3C 02
         00 00 0D 00
         0A 00      
00008262                    	.code
00008262                    	.code
                            	Ltext2:
00000FB2                    	.debug
00000FB2 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
00000FC5 00 00 00 00        		.dd LM98-_sendword
00000FC7 0D 00 0A 00        		.dw 0x0d,0x0a
00008262                    	.code
                            	LM98:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
00008262 88 DA              		push bp to [sp]
00008263 42 20              		sp-=2
00008264 08 0B 01 00        		bp=sp+1
                            	
00008266 0D 03 05 00        		R1=BP+5
00000FC9                    	.debug
00000FC9 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
00000FDC 06 00 00 00        		.dd LM99-_sendword
00000FDE 0D 00 0A 00        		.dw 0x0d,0x0a
00008268                    	.code
                            	LM99:
                            	LBB6:
00000FE0                    	.debug
00000FE0 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
00000FF3 06 00 00 00        		.dd LM100-_sendword
00000FF5 0D 00 0A 00        		.dw 0x0d,0x0a
00008268                    	.code
                            	LM100:
00008268 12 95 05 70        		R2=[28677]	// QImode move
0000826A 0A B7 FF BF        		R3=R2&(-16385)
0000826C 1B D7 05 70        		[28677]=R3	// QImode move
00000FF7                    	.debug
00000FF7 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
0000100A 0C 00 00 00        		.dd LM101-_sendword
0000100C 0D 00 0A 00        		.dw 0x0d,0x0a
0000826E                    	.code
                            	LM101:
0000826E 40 94              		R2=0	// QImode move
0000826F C5 D4              		[BP]=R2	// QImode move
                            	L90:
00008270 C5 94              		R2=[BP]	// QImode move
00008271 4F 44              		CMP R2,15	// QImode compare
00008272 04 AE 01 EE        		NSJNG L93	//QImode LE
         00 EE      
00008275 0F 9F BD 82        		pc=L91	// Indirect jump
                            	L93:
0000100E                    	.debug
0000100E 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
00001021 15 00 00 00        		.dd LM102-_sendword
00001023 0D 00 0A 00        		.dw 0x0d,0x0a
00008277                    	.code
                            	LM102:
00008277 41 94              		R2=1	// QImode move
00008278 1A D5 12 70        		[28690]=R2	// QImode move
00001025                    	.debug
00001025 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
00001038 18 00 00 00        		.dd LM103-_sendword
0000103A 0D 00 0A 00        		.dw 0x0d,0x0a
0000827A                    	.code
                            	LM103:
0000827A 05 95              		R2=BP	// QImode move
0000827B 0D 07 01 00        		R3=BP+1
0000827D 01 95              		R2=R1	// QImode move
0000827E C2 94              		R2=[R2]	// QImode move
0000827F 0A B9 00 80        		R4=R2&(-32768)
00008281 03 95              		R2=R3	// QImode move
00008282 C2 D8              		[R2]=R4	// QImode move
0000103C                    	.debug
0000103C 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
0000104F 21 00 00 00        		.dd LM104-_sendword
00001051 0D 00 0A 00        		.dw 0x0d,0x0a
00008283                    	.code
                            	LM104:
00008283 01 97              		R3=R1	// QImode move
00008284 C3 94              		R2=[R3]	// QImode move
00008285 42 97              		R3=R2 lsl 1
00008286 01 99              		R4=R1	// QImode move
00008287 C4 D6              		[R4]=R3	// QImode move
00001053                    	.debug
00001053 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
00001066 26 00 00 00        		.dd LM105-_sendword
00001068 0D 00 0A 00        		.dw 0x0d,0x0a
00008288                    	.code
                            	LM105:
00008288 05 95              		R2=BP	// QImode move
00008289 0D 07 01 00        		R3=BP+1
0000828B 03 99              		R4=R3	// QImode move
0000828C C4 94              		R2=[R4]	// QImode move
0000828D 40 44              		CMP R2,0	// QImode test
0000828E 16 5E 01 EE        		NSJZ L94	//QImode EQ
         00 EE      
0000106A                    	.debug
0000106A 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
0000107D 2F 00 00 00        		.dd LM106-_sendword
0000107F 0D 00 0A 00        		.dw 0x0d,0x0a
00008291                    	.code
                            	LM106:
00008291 12 95 05 70        		R2=[28677]	// QImode move
00008293 0A A7 00 80        		R3=R2|(-32768)
00008295 1B D7 05 70        		[28677]=R3	// QImode move
00001081                    	.debug
00001081 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
00001094 35 00 00 00        		.dd LM107-_sendword
00001096 0D 00 0A 00        		.dw 0x0d,0x0a
00008297                    	.code
                            	LM107:
00008297 12 95 05 70        		R2=[28677]	// QImode move
00008299 0A B7 FF DF        		R3=R2&(-8193)
0000829B 1B D7 05 70        		[28677]=R3	// QImode move
00001098                    	.debug
00001098 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
000010AB 3B 00 00 00        		.dd LM108-_sendword
000010AD 0D 00 0A 00        		.dw 0x0d,0x0a
0000829D                    	.code
                            	LM108:
0000829D 12 95 05 70        		R2=[28677]	// QImode move
0000829F 0A A7 00 20        		R3=R2|8192
000082A1 1B D7 05 70        		[28677]=R3	// QImode move
000010AF                    	.debug
000010AF 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
000010C2 41 00 00 00        		.dd LM109-_sendword
000010C4 0D 00 0A 00        		.dw 0x0d,0x0a
000082A3                    	.code
                            	LM109:
000082A3 0F 9F B7 82        		pc=L92	// Indirect jump
                            	L94:
000010C6                    	.debug
000010C6 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
000010D9 43 00 00 00        		.dd LM110-_sendword
000010DB 0D 00 0A 00        		.dw 0x0d,0x0a
000082A5                    	.code
                            	LM110:
000082A5 12 95 05 70        		R2=[28677]	// QImode move
000082A7 0A B7 FF 7F        		R3=R2&32767
000082A9 1B D7 05 70        		[28677]=R3	// QImode move
000010DD                    	.debug
000010DD 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
000010F0 49 00 00 00        		.dd LM111-_sendword
000010F2 0D 00 0A 00        		.dw 0x0d,0x0a
000082AB                    	.code
                            	LM111:
000082AB 12 95 05 70        		R2=[28677]	// QImode move
000082AD 0A B7 FF DF        		R3=R2&(-8193)
000082AF 1B D7 05 70        		[28677]=R3	// QImode move
000010F4                    	.debug
000010F4 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
00001107 4F 00 00 00        		.dd LM112-_sendword
00001109 0D 00 0A 00        		.dw 0x0d,0x0a
000082B1                    	.code
                            	LM112:
000082B1 12 95 05 70        		R2=[28677]	// QImode move
000082B3 0A A7 00 20        		R3=R2|8192
000082B5 1B D7 05 70        		[28677]=R3	// QImode move
                            	L95:
0000110B                    	.debug
0000110B 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
0000111E 55 00 00 00        		.dd LM113-_sendword
00001120 0D 00 0A 00        		.dw 0x0d,0x0a
000082B7                    	.code
                            	LM113:
                            	L92:
000082B7 C5 94              		R2=[BP]	// QImode move
000082B8 0A 07 01 00        		R3=R2+1
000082BA C5 D6              		[BP]=R3	// QImode move
000082BB 0F 9F 70 82        		pc=L90	// Indirect jump
                            	L91:
00001122                    	.debug
00001122 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
00001135 5B 00 00 00        		.dd LM114-_sendword
00001137 0D 00 0A 00        		.dw 0x0d,0x0a
000082BD                    	.code
                            	LM114:
000082BD 12 95 05 70        		R2=[28677]	// QImode move
000082BF 0A A7 00 40        		R3=R2|16384
000082C1 1B D7 05 70        		[28677]=R3	// QImode move
00001139                    	.debug
00001139 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
0000114C 61 00 00 00        		.dd LM115-_sendword
0000114E 0D 00 0A 00        		.dw 0x0d,0x0a
000082C3                    	.code
                            	LM115:
000082C3 41 94              		R2=1	// QImode move
000082C4 1A D5 12 70        		[28690]=R2	// QImode move
00001150                    	.debug
00001150 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
00001163 64 00 00 00        		.dd LM116-_sendword
00001165 0D 00 0A 00        		.dw 0x0d,0x0a
000082C6                    	.code
                            	LM116:
                            	LBE6:
00001167                    	.debug
00001167 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
0000117A 64 00 00 00        		.dd LM117-_sendword
0000117C 0D 00 0A 00        		.dw 0x0d,0x0a
000082C6                    	.code
                            	LM117:
                            	L89:
                            	
000082C6 42 00              		sp+=2
000082C7 88 98              		pop bp from [sp]
000082C8 90 9A              		retf
                            		.endp	// end of sendword
                            	
0000117E                    	.debug
0000117E 2E 00 73 00        		.dw '.stabs "word:p4",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 6F 00
         72 00 64 00
         3A 00 70 00
         34 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
000082C9                    	.CODE
0000119A                    	.debug
0000119A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000011AC 06 00 00 00        		.dd LBB6-_sendword
000011AE 0D 00 0A 00        		.dw 0x0d,0x0a
000082C9                    	.code
000011B0                    	.debug
000011B0 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000082C9                    	.CODE
000011C8                    	.debug
000011C8 2E 00 73 00        		.dw '.stabs "temp:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 65 00
         6D 00 70 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
000082C9                    	.CODE
000011E3                    	.debug
000011E3 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000011F5 64 00 00 00        		.dd LBE6-_sendword
000011F7 0D 00 0A 00        		.dw 0x0d,0x0a
000082C9                    	.code
000011F9                    	.debug
000011F9 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001202 67 00 00 00        		.dd LME6-_sendword
00001204 0D 00 0A 00        		.dw 0x0d,0x0a
000082C9                    	.code
                            	LME6:
000082C9                    	.code
00001206                    	.debug
00001206 2E 00 73 00        		.dw '.stabs "init7219:F19",36,0,0,',0,0,offset _init7219,seg _init7219,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         69 00 74 00
         37 00 32 00
         31 00 39 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 A3 02
         00 00 0D 00
         0A 00      
000082C9                    	.CODE
                            	.public _init7219
                            	_init7219:	.proc
00001229                    	.debug
00001229 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
0000123C 00 00 00 00        		.dd LM118-_init7219
0000123E 0D 00 0A 00        		.dw 0x0d,0x0a
000082C9                    	.code
                            	LM118:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000082C9 88 DA              		push bp to [sp]
000082CA 41 20              		sp-=1
000082CB 08 0B 01 00        		bp=sp+1
                            	
000082CD 0D 03 04 00        		R1=BP+4
000082CF C5 D2              		[BP]=R1	// QImode move
00001240                    	.debug
00001240 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
00001253 07 00 00 00        		.dd LM119-_init7219
00001255 0D 00 0A 00        		.dw 0x0d,0x0a
000082D0                    	.code
                            	LM119:
000082D0 11 93 07 70        		R1=[28679]	// QImode move
000082D2 09 A5 00 F0        		R2=R1|(-4096)
000082D4 1A D5 07 70        		[28679]=R2	// QImode move
00001257                    	.debug
00001257 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
0000126A 0D 00 00 00        		.dd LM120-_init7219
0000126C 0D 00 0A 00        		.dw 0x0d,0x0a
000082D6                    	.code
                            	LM120:
000082D6 11 93 08 70        		R1=[28680]	// QImode move
000082D8 09 A5 00 F0        		R2=R1|(-4096)
000082DA 1A D5 08 70        		[28680]=R2	// QImode move
0000126E                    	.debug
0000126E 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
00001281 13 00 00 00        		.dd LM121-_init7219
00001283 0D 00 0A 00        		.dw 0x0d,0x0a
000082DC                    	.code
                            	LM121:
000082DC 11 93 05 70        		R1=[28677]	// QImode move
000082DE 09 B5 FF 0F        		R2=R1&4095
000082E0 1A D5 05 70        		[28677]=R2	// QImode move
00001285                    	.debug
00001285 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
00001298 19 00 00 00        		.dd LM122-_init7219
0000129A 0D 00 0A 00        		.dw 0x0d,0x0a
000082E2                    	.code
                            	LM122:
000082E2 09 93 07 0B        		R1=2823	// QImode move
000082E4 C8 D2              		[SP--]=R1	// QImode move
000082E5 40 F0 62 82        		call _sendword	// call without return value
000082E7 41 00              		SP = SP + 1	//SP
0000129C                    	.debug
0000129C 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
000012AF 1F 00 00 00        		.dd LM123-_init7219
000012B1 0D 00 0A 00        		.dw 0x0d,0x0a
000082E8                    	.code
                            	LM123:
000082E8 09 93 FF 09        		R1=2559	// QImode move
000082EA C8 D2              		[SP--]=R1	// QImode move
000082EB 40 F0 62 82        		call _sendword	// call without return value
000082ED 41 00              		SP = SP + 1	//SP
000012B3                    	.debug
000012B3 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
000012C6 25 00 00 00        		.dd LM124-_init7219
000012C8 0D 00 0A 00        		.dw 0x0d,0x0a
000082EE                    	.code
                            	LM124:
000082EE 09 93 0A 0A        		R1=2570	// QImode move
000082F0 C8 D2              		[SP--]=R1	// QImode move
000082F1 40 F0 62 82        		call _sendword	// call without return value
000082F3 41 00              		SP = SP + 1	//SP
000012CA                    	.debug
000012CA 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
000012DD 2B 00 00 00        		.dd LM125-_init7219
000012DF 0D 00 0A 00        		.dw 0x0d,0x0a
000082F4                    	.code
                            	LM125:
000082F4 09 93 01 0C        		R1=3073	// QImode move
000082F6 C8 D2              		[SP--]=R1	// QImode move
000082F7 40 F0 62 82        		call _sendword	// call without return value
000082F9 41 00              		SP = SP + 1	//SP
000012E1                    	.debug
000012E1 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
000012F4 31 00 00 00        		.dd LM126-_init7219
000012F6 0D 00 0A 00        		.dw 0x0d,0x0a
000082FA                    	.code
                            	LM126:
000082FA 09 93 01 0F        		R1=3841	// QImode move
000082FC C8 D2              		[SP--]=R1	// QImode move
000082FD 40 F0 62 82        		call _sendword	// call without return value
000082FF 41 00              		SP = SP + 1	//SP
000012F8                    	.debug
000012F8 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
0000130B 37 00 00 00        		.dd LM127-_init7219
0000130D 0D 00 0A 00        		.dw 0x0d,0x0a
00008300                    	.code
                            	LM127:
00008300 09 93 00 0F        		R1=3840	// QImode move
00008302 C8 D2              		[SP--]=R1	// QImode move
00008303 40 F0 62 82        		call _sendword	// call without return value
00008305 41 00              		SP = SP + 1	//SP
0000130F                    	.debug
0000130F 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00001322 3D 00 00 00        		.dd LM128-_init7219
00001324 0D 00 0A 00        		.dw 0x0d,0x0a
00008306                    	.code
                            	LM128:
00001326                    	.debug
00001326 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00001339 3D 00 00 00        		.dd LM129-_init7219
0000133B 0D 00 0A 00        		.dw 0x0d,0x0a
00008306                    	.code
                            	LM129:
                            	L98:
                            	
00008306 41 00              		sp+=1
00008307 88 98              		pop bp from [sp]
00008308 90 9A              		retf
                            		.endp	// end of init7219
                            	
0000133D                    	.debug
0000133D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001346 40 00 00 00        		.dd LME7-_init7219
00001348 0D 00 0A 00        		.dw 0x0d,0x0a
00008309                    	.code
                            	LME7:
00008309                    	.code
0000134A                    	.debug
0000134A 2E 00 73 00        		.dw '.stabs "show:F19",36,0,0,',0,0,offset _show,seg _show,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 77 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 E3 02
         00 00 0D 00
         0A 00      
00008309                    	.CODE
                            	.public _show
                            	_show:	.proc
00001369                    	.debug
00001369 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
0000137C 00 00 00 00        		.dd LM130-_show
0000137E 0D 00 0A 00        		.dw 0x0d,0x0a
00008309                    	.code
                            	LM130:
                            		// total=14, vars=14
                            		// frame_pointer_needed: 1
00008309 88 DA              		push bp to [sp]
0000830A 4E 20              		sp-=14
0000830B 08 0B 01 00        		bp=sp+1
                            	
0000830D 0D 03 11 00        		R1=BP+17
0000830F 08 D2              		[bp+8]=R1	// QImode move
00001380                    	.debug
00001380 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00001393 07 00 00 00        		.dd LM131-_show
00001395 0D 00 0A 00        		.dw 0x0d,0x0a
00008310                    	.code
                            	LM131:
                            	LBB7:
00001397                    	.debug
00001397 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
000013AA 07 00 00 00        		.dd LM132-_show
000013AC 0D 00 0A 00        		.dw 0x0d,0x0a
00008310                    	.code
                            	LM132:
00008310 11 93 07 70        		R1=[28679]	// QImode move
00008312 09 A5 00 F0        		R2=R1|(-4096)
00008314 1A D5 07 70        		[28679]=R2	// QImode move
000013AE                    	.debug
000013AE 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
000013C1 0D 00 00 00        		.dd LM133-_show
000013C3 0D 00 0A 00        		.dw 0x0d,0x0a
00008316                    	.code
                            	LM133:
00008316 11 93 08 70        		R1=[28680]	// QImode move
00008318 09 A5 00 F0        		R2=R1|(-4096)
0000831A 1A D5 08 70        		[28680]=R2	// QImode move
000013C5                    	.debug
000013C5 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
000013D8 13 00 00 00        		.dd LM134-_show
000013DA 0D 00 0A 00        		.dw 0x0d,0x0a
0000831C                    	.code
                            	LM134:
0000831C 11 93 05 70        		R1=[28677]	// QImode move
0000831E 09 B5 FF 0F        		R2=R1&4095
00008320 1A D5 05 70        		[28677]=R2	// QImode move
000013DC                    	.debug
000013DC 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
000013EF 19 00 00 00        		.dd LM135-_show
000013F1 0D 00 0A 00        		.dw 0x0d,0x0a
00008322                    	.code
                            	LM135:
00008322 09 93 07 0B        		R1=2823	// QImode move
00008324 C8 D2              		[SP--]=R1	// QImode move
00008325 40 F0 62 82        		call _sendword	// call without return value
00008327 41 00              		SP = SP + 1	//SP
000013F3                    	.debug
000013F3 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
00001406 1F 00 00 00        		.dd LM136-_show
00001408 0D 00 0A 00        		.dw 0x0d,0x0a
00008328                    	.code
                            	LM136:
00008328 09 93 FF 09        		R1=2559	// QImode move
0000832A C8 D2              		[SP--]=R1	// QImode move
0000832B 40 F0 62 82        		call _sendword	// call without return value
0000832D 41 00              		SP = SP + 1	//SP
0000140A                    	.debug
0000140A 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
0000141D 25 00 00 00        		.dd LM137-_show
0000141F 0D 00 0A 00        		.dw 0x0d,0x0a
0000832E                    	.code
                            	LM137:
0000832E 09 93 0A 0A        		R1=2570	// QImode move
00008330 C8 D2              		[SP--]=R1	// QImode move
00008331 40 F0 62 82        		call _sendword	// call without return value
00008333 41 00              		SP = SP + 1	//SP
00001421                    	.debug
00001421 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
00001434 2B 00 00 00        		.dd LM138-_show
00001436 0D 00 0A 00        		.dw 0x0d,0x0a
00008334                    	.code
                            	LM138:
00008334 09 93 01 0C        		R1=3073	// QImode move
00008336 C8 D2              		[SP--]=R1	// QImode move
00008337 40 F0 62 82        		call _sendword	// call without return value
00008339 41 00              		SP = SP + 1	//SP
00001438                    	.debug
00001438 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
0000144B 31 00 00 00        		.dd LM139-_show
0000144D 0D 00 0A 00        		.dw 0x0d,0x0a
0000833A                    	.code
                            	LM139:
0000833A 08 94              		R2=[bp+8]	// QImode move
0000833B C2 92              		R1=[R2]	// QImode move
0000833C C5 D2              		[BP]=R1	// QImode move
0000144F                    	.debug
0000144F 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00001462 34 00 00 00        		.dd LM140-_show
00001464 0D 00 0A 00        		.dw 0x0d,0x0a
0000833D                    	.code
                            	LM140:
0000833D 05 93              		R1=BP	// QImode move
0000833E 0D 07 02 00        		R3=BP+2
00008340 09 D6              		[bp+9]=R3	// QImode move
00008341 08 92              		R1=[bp+8]	// QImode move
00008342 08 98              		R4=[bp+8]	// QImode move
00008343 0C 05 01 00        		R2=R4+1
00008345 02 97              		R3=R2	// QImode move
00008346 C3 92              		R1=[R3]	// QImode move
00008347 0A 95 10 27        		R2=10000	// QImode move
00008349 C8 D4              		[SP--]=R2	// QImode move
0000834A C8 D2              		[SP--]=R1	// QImode move
0000834B 40 F0 DF 85        		call __divi1	// call with return value
0000834D 42 00              		SP = SP + 2	//SP
0000834E 09 98              		R4=[bp+9]	// QImode move
0000834F C4 D2              		[R4]=R1	// QImode move
00001466                    	.debug
00001466 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
00001479 47 00 00 00        		.dd LM141-_show
0000147B 0D 00 0A 00        		.dw 0x0d,0x0a
00008350                    	.code
                            	LM141:
00008350 05 93              		R1=BP	// QImode move
00008351 0D 03 03 00        		R1=BP+3
00008353 0A D2              		[bp+10]=R1	// QImode move
00008354 08 92              		R1=[bp+8]	// QImode move
00008355 08 96              		R3=[bp+8]	// QImode move
00008356 0B 05 01 00        		R2=R3+1
00008358 02 99              		R4=R2	// QImode move
00008359 C4 92              		R1=[R4]	// QImode move
0000835A 0A 95 10 27        		R2=10000	// QImode move
0000835C C8 D4              		[SP--]=R2	// QImode move
0000835D C8 D2              		[SP--]=R1	// QImode move
0000835E 40 F0 10 86        		call __modi1	// call with return value
00008360 42 00              		SP = SP + 2	//SP
00008361 0A 95 E8 03        		R2=1000	// QImode move
00008363 C8 D4              		[SP--]=R2	// QImode move
00008364 C8 D2              		[SP--]=R1	// QImode move
00008365 40 F0 DF 85        		call __divi1	// call with return value
00008367 42 00              		SP = SP + 2	//SP
00008368 0A 94              		R2=[bp+10]	// QImode move
00008369 C2 D2              		[R2]=R1	// QImode move
0000147D                    	.debug
0000147D 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00001490 61 00 00 00        		.dd LM142-_show
00001492 0D 00 0A 00        		.dw 0x0d,0x0a
0000836A                    	.code
                            	LM142:
0000836A 05 95              		R2=BP	// QImode move
0000836B 0D 03 03 00        		R1=BP+3
0000836D 05 95              		R2=BP	// QImode move
0000836E 0D 07 03 00        		R3=BP+3
00008370 03 99              		R4=R3	// QImode move
00008371 C4 98              		R4=[R4]	// QImode move
00008372 0C A5 80 00        		R2=R4|128
00008374 01 99              		R4=R1	// QImode move
00008375 C4 D4              		[R4]=R2	// QImode move
00001494                    	.debug
00001494 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
000014A7 6D 00 00 00        		.dd LM143-_show
000014A9 0D 00 0A 00        		.dw 0x0d,0x0a
00008376                    	.code
                            	LM143:
00008376 05 93              		R1=BP	// QImode move
00008377 0D 03 04 00        		R1=BP+4
00008379 0B D2              		[bp+11]=R1	// QImode move
0000837A 08 92              		R1=[bp+8]	// QImode move
0000837B 08 96              		R3=[bp+8]	// QImode move
0000837C 0B 05 01 00        		R2=R3+1
0000837E 02 99              		R4=R2	// QImode move
0000837F C4 92              		R1=[R4]	// QImode move
00008380 0A 95 64 00        		R2=100	// QImode move
00008382 C8 D4              		[SP--]=R2	// QImode move
00008383 C8 D2              		[SP--]=R1	// QImode move
00008384 40 F0 DF 85        		call __divi1	// call with return value
00008386 42 00              		SP = SP + 2	//SP
00008387 4A 94              		R2=10	// QImode move
00008388 C8 D4              		[SP--]=R2	// QImode move
00008389 C8 D2              		[SP--]=R1	// QImode move
0000838A 40 F0 10 86        		call __modi1	// call with return value
0000838C 42 00              		SP = SP + 2	//SP
0000838D 0B 94              		R2=[bp+11]	// QImode move
0000838E C2 D2              		[R2]=R1	// QImode move
000014AB                    	.debug
000014AB 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
000014BE 86 00 00 00        		.dd LM144-_show
000014C0 0D 00 0A 00        		.dw 0x0d,0x0a
0000838F                    	.code
                            	LM144:
0000838F 05 93              		R1=BP	// QImode move
00008390 0D 07 06 00        		R3=BP+6
00008392 0C D6              		[bp+12]=R3	// QImode move
00008393 08 92              		R1=[bp+8]	// QImode move
00008394 08 98              		R4=[bp+8]	// QImode move
00008395 0C 05 02 00        		R2=R4+2
00008397 02 97              		R3=R2	// QImode move
00008398 C3 92              		R1=[R3]	// QImode move
00008399 4A 94              		R2=10	// QImode move
0000839A C8 D4              		[SP--]=R2	// QImode move
0000839B C8 D2              		[SP--]=R1	// QImode move
0000839C 40 F0 DF 85        		call __divi1	// call with return value
0000839E 42 00              		SP = SP + 2	//SP
0000839F 09 A5 80 00        		R2=R1|128
000083A1 0C 98              		R4=[bp+12]	// QImode move
000083A2 C4 D4              		[R4]=R2	// QImode move
000014C2                    	.debug
000014C2 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
000014D5 9A 00 00 00        		.dd LM145-_show
000014D7 0D 00 0A 00        		.dw 0x0d,0x0a
000083A3                    	.code
                            	LM145:
000083A3 05 93              		R1=BP	// QImode move
000083A4 0D 07 07 00        		R3=BP+7
000083A6 0D D6              		[bp+13]=R3	// QImode move
000083A7 08 92              		R1=[bp+8]	// QImode move
000083A8 08 98              		R4=[bp+8]	// QImode move
000083A9 0C 05 02 00        		R2=R4+2
000083AB 02 97              		R3=R2	// QImode move
000083AC C3 92              		R1=[R3]	// QImode move
000083AD 4A 94              		R2=10	// QImode move
000083AE C8 D4              		[SP--]=R2	// QImode move
000083AF C8 D2              		[SP--]=R1	// QImode move
000083B0 40 F0 10 86        		call __modi1	// call with return value
000083B2 42 00              		SP = SP + 2	//SP
000083B3 0D 98              		R4=[bp+13]	// QImode move
000083B4 C4 D2              		[R4]=R1	// QImode move
000014D9                    	.debug
000014D9 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
000014EC AC 00 00 00        		.dd LM146-_show
000014EE 0D 00 0A 00        		.dw 0x0d,0x0a
000083B5                    	.code
                            	LM146:
000083B5 41 92              		R1=1	// QImode move
000083B6 19 D3 12 70        		[28690]=R1	// QImode move
000014F0                    	.debug
000014F0 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
00001503 AF 00 00 00        		.dd LM147-_show
00001505 0D 00 0A 00        		.dw 0x0d,0x0a
000083B8                    	.code
                            	LM147:
000083B8 C5 94              		R2=[BP]	// QImode move
000083B9 0A A3 00 08        		R1=R2|2048
000083BB C8 D2              		[SP--]=R1	// QImode move
000083BC 40 F0 62 82        		call _sendword	// call without return value
000083BE 41 00              		SP = SP + 1	//SP
00001507                    	.debug
00001507 2E 00 73 00        		.dw '.stabn 0x44,0,100,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         30 00 2C 00
         00 00 00 00
0000151B B6 00 00 00        		.dd LM148-_show
0000151D 0D 00 0A 00        		.dw 0x0d,0x0a
000083BF                    	.code
                            	LM148:
000083BF 09 93 0F 07        		R1=1807	// QImode move
000083C1 C8 D2              		[SP--]=R1	// QImode move
000083C2 40 F0 62 82        		call _sendword	// call without return value
000083C4 41 00              		SP = SP + 1	//SP
0000151F                    	.debug
0000151F 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00001533 BC 00 00 00        		.dd LM149-_show
00001535 0D 00 0A 00        		.dw 0x0d,0x0a
000083C5                    	.code
                            	LM149:
000083C5 05 93              		R1=BP	// QImode move
000083C6 0D 05 02 00        		R2=BP+2
000083C8 02 97              		R3=R2	// QImode move
000083C9 C3 96              		R3=[R3]	// QImode move
000083CA 0B A3 00 06        		R1=R3|1536
000083CC C8 D2              		[SP--]=R1	// QImode move
000083CD 40 F0 62 82        		call _sendword	// call without return value
000083CF 41 00              		SP = SP + 1	//SP
00001537                    	.debug
00001537 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
0000154B C7 00 00 00        		.dd LM150-_show
0000154D 0D 00 0A 00        		.dw 0x0d,0x0a
000083D0                    	.code
                            	LM150:
000083D0 05 93              		R1=BP	// QImode move
000083D1 0D 05 03 00        		R2=BP+3
000083D3 02 99              		R4=R2	// QImode move
000083D4 C4 98              		R4=[R4]	// QImode move
000083D5 0C A3 00 05        		R1=R4|1280
000083D7 C8 D2              		[SP--]=R1	// QImode move
000083D8 40 F0 62 82        		call _sendword	// call without return value
000083DA 41 00              		SP = SP + 1	//SP
0000154F                    	.debug
0000154F 2E 00 73 00        		.dw '.stabn 0x44,0,103,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         33 00 2C 00
         00 00 00 00
00001563 D2 00 00 00        		.dd LM151-_show
00001565 0D 00 0A 00        		.dw 0x0d,0x0a
000083DB                    	.code
                            	LM151:
000083DB 05 93              		R1=BP	// QImode move
000083DC 0D 05 04 00        		R2=BP+4
000083DE 02 97              		R3=R2	// QImode move
000083DF C3 96              		R3=[R3]	// QImode move
000083E0 0B A3 00 04        		R1=R3|1024
000083E2 C8 D2              		[SP--]=R1	// QImode move
000083E3 40 F0 62 82        		call _sendword	// call without return value
000083E5 41 00              		SP = SP + 1	//SP
00001567                    	.debug
00001567 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
0000157B DD 00 00 00        		.dd LM152-_show
0000157D 0D 00 0A 00        		.dw 0x0d,0x0a
000083E6                    	.code
                            	LM152:
000083E6 09 93 0F 03        		R1=783	// QImode move
000083E8 C8 D2              		[SP--]=R1	// QImode move
000083E9 40 F0 62 82        		call _sendword	// call without return value
000083EB 41 00              		SP = SP + 1	//SP
0000157F                    	.debug
0000157F 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00001593 E3 00 00 00        		.dd LM153-_show
00001595 0D 00 0A 00        		.dw 0x0d,0x0a
000083EC                    	.code
                            	LM153:
000083EC 05 93              		R1=BP	// QImode move
000083ED 0D 05 06 00        		R2=BP+6
000083EF 02 99              		R4=R2	// QImode move
000083F0 C4 98              		R4=[R4]	// QImode move
000083F1 0C A3 00 02        		R1=R4|512
000083F3 C8 D2              		[SP--]=R1	// QImode move
000083F4 40 F0 62 82        		call _sendword	// call without return value
000083F6 41 00              		SP = SP + 1	//SP
00001597                    	.debug
00001597 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
000015AB EE 00 00 00        		.dd LM154-_show
000015AD 0D 00 0A 00        		.dw 0x0d,0x0a
000083F7                    	.code
                            	LM154:
000083F7 05 93              		R1=BP	// QImode move
000083F8 0D 05 07 00        		R2=BP+7
000083FA 02 97              		R3=R2	// QImode move
000083FB C3 96              		R3=[R3]	// QImode move
000083FC 0B A3 00 01        		R1=R3|256
000083FE C8 D2              		[SP--]=R1	// QImode move
000083FF 40 F0 62 82        		call _sendword	// call without return value
00008401 41 00              		SP = SP + 1	//SP
000015AF                    	.debug
000015AF 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
000015C3 F9 00 00 00        		.dd LM155-_show
000015C5 0D 00 0A 00        		.dw 0x0d,0x0a
00008402                    	.code
                            	LM155:
                            	LBE7:
000015C7                    	.debug
000015C7 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
000015DB F9 00 00 00        		.dd LM156-_show
000015DD 0D 00 0A 00        		.dw 0x0d,0x0a
00008402                    	.code
                            	LM156:
                            	L99:
                            	
00008402 4E 00              		sp+=14
00008403 88 98              		pop bp from [sp]
00008404 90 9A              		retf
                            		.endp	// end of show
                            	
000015DF                    	.debug
000015DF 2E 00 73 00        		.dw '.stabs "mode:p1",160,0,0,17',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 6F 00
         64 00 65 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         37 00 0D 00
         0A 00      
00008405                    	.CODE
000015FC                    	.debug
000015FC 2E 00 73 00        		.dw '.stabs "freq:p1",160,0,0,18',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 72 00
         65 00 71 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         38 00 0D 00
         0A 00      
00008405                    	.CODE
00001619                    	.debug
00001619 2E 00 73 00        		.dw '.stabs "mvol:p1",160,0,0,19',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 76 00
         6F 00 6C 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         39 00 0D 00
         0A 00      
00008405                    	.CODE
00001636                    	.debug
00001636 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001648 07 00 00 00        		.dd LBB7-_show
0000164A 0D 00 0A 00        		.dw 0x0d,0x0a
00008405                    	.code
0000164C                    	.debug
0000164C 2E 00 73 00        		.dw '.stabs "tmp:20=ar1;0;7;1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         70 00 3A 00
         32 00 30 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 37 00
         3B 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008405                    	.CODE
00001671                    	.debug
00001671 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001683 F9 00 00 00        		.dd LBE7-_show
00001685 0D 00 0A 00        		.dw 0x0d,0x0a
00008405                    	.code
00001687                    	.debug
00001687 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001690 FC 00 00 00        		.dd LME8-_show
00001692 0D 00 0A 00        		.dw 0x0d,0x0a
00008405                    	.code
                            	LME8:
00008405                    	.code
00001694                    	.debug
00001694 2E 00 73 00        		.dw '.stabs "delay_wave:F19",36,0,0,',0,0,offset _delay_wave,seg _delay_wave,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 65 00
         6C 00 61 00
         79 00 5F 00
         77 00 61 00
         76 00 65 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 DF 03
         00 00 0D 00
         0A 00      
00008405                    	.CODE
                            	.public _delay_wave
                            	_delay_wave:	.proc
000016B9                    	.debug
000016B9 2E 00 73 00        		.dw '.stabs "G:/yangsong/key/key/wave.h",0x84,0,0,',0,0,offset Ltext3, seg Ltext3,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         47 00 3A 00
         2F 00 79 00
         61 00 6E 00
         67 00 73 00
         6F 00 6E 00
         67 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6B 00 65 00
         79 00 2F 00
         77 00 61 00
         76 00 65 00
         2E 00 68 00
         22 00 2C 00
         30 00 78 00
         38 00 34 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 DF 03
         00 00 0D 00
         0A 00      
00008405                    	.code
00008405                    	.code
                            	Ltext3:
000016EC                    	.debug
000016EC 2E 00 73 00        		.dw '.stabn 0x44,0,10,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         2C 00 00 00
         00 00      
000016FF 00 00 00 00        		.dd LM157-_delay_wave
00001701 0D 00 0A 00        		.dw 0x0d,0x0a
00008405                    	.code
                            	LM157:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
00008405 88 DA              		push bp to [sp]
00008406 08 0B 01 00        		bp=sp+1
                            	
00008408 0D 03 03 00        		R1=BP+3
00001703                    	.debug
00001703 2E 00 73 00        		.dw '.stabn 0x44,0,11,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         2C 00 00 00
         00 00      
00001716 05 00 00 00        		.dd LM158-_delay_wave
00001718 0D 00 0A 00        		.dw 0x0d,0x0a
0000840A                    	.code
                            	LM158:
                            	L101:
0000840A 01 95              		R2=R1	// QImode move
0000840B C2 96              		R3=[R2]	// QImode move
0000840C 0B 05 FF FF        		R2=R3+(-1)
0000840E 02 97              		R3=R2	// QImode move
0000840F 01 95              		R2=R1	// QImode move
00008410 C2 D6              		[R2]=R3	// QImode move
00008411 0B 47 FF FF        		CMP R3,(-1)	// QImode compare
00008413 04 4E 01 EE        		NSJNZ L103	//QImode NE
         00 EE      
00008416 0F 9F 1D 84        		pc=L102	// Indirect jump
                            	L103:
0000171A                    	.debug
0000171A 2E 00 73 00        		.dw '.stabn 0x44,0,13,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         2C 00 00 00
         00 00      
0000172D 13 00 00 00        		.dd LM159-_delay_wave
0000172F 0D 00 0A 00        		.dw 0x0d,0x0a
00008418                    	.code
                            	LM159:
00008418 41 94              		R2=1	// QImode move
00008419 1A D5 12 70        		[28690]=R2	// QImode move
00001731                    	.debug
00001731 2E 00 73 00        		.dw '.stabn 0x44,0,14,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         2C 00 00 00
         00 00      
00001744 16 00 00 00        		.dd LM160-_delay_wave
00001746 0D 00 0A 00        		.dw 0x0d,0x0a
0000841B                    	.code
                            	LM160:
0000841B 0F 9F 0A 84        		pc=L101	// Indirect jump
                            	L102:
00001748                    	.debug
00001748 2E 00 73 00        		.dw '.stabn 0x44,0,15,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         2C 00 00 00
         00 00      
0000175B 18 00 00 00        		.dd LM161-_delay_wave
0000175D 0D 00 0A 00        		.dw 0x0d,0x0a
0000841D                    	.code
                            	LM161:
0000175F                    	.debug
0000175F 2E 00 73 00        		.dw '.stabn 0x44,0,15,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         2C 00 00 00
         00 00      
00001772 18 00 00 00        		.dd LM162-_delay_wave
00001774 0D 00 0A 00        		.dw 0x0d,0x0a
0000841D                    	.code
                            	LM162:
                            	L100:
                            	
0000841D 88 98              		pop bp from [sp]
0000841E 90 9A              		retf
                            		.endp	// end of delay_wave
                            	
00001776                    	.debug
00001776 2E 00 73 00        		.dw '.stabs "x:p1",160,0,0,3',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         33 00 0D 00
         0A 00      
0000841F                    	.CODE
0000178F                    	.debug
0000178F 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001798 1A 00 00 00        		.dd LME9-_delay_wave
0000179A 0D 00 0A 00        		.dw 0x0d,0x0a
0000841F                    	.code
                            	LME9:
0000841F                    	.code
0000179C                    	.debug
0000179C 2E 00 73 00        		.dw '.stabs "initwave:F19",36,0,0,',0,0,offset _initwave,seg _initwave,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         69 00 74 00
         77 00 61 00
         76 00 65 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 F9 03
         00 00 0D 00
         0A 00      
0000841F                    	.CODE
                            	.public _initwave
                            	_initwave:	.proc
000017BF                    	.debug
000017BF 2E 00 73 00        		.dw '.stabn 0x44,0,17,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         2C 00 00 00
         00 00      
000017D2 00 00 00 00        		.dd LM163-_initwave
000017D4 0D 00 0A 00        		.dw 0x0d,0x0a
0000841F                    	.code
                            	LM163:
                            		// total=5, vars=5
                            		// frame_pointer_needed: 1
0000841F 88 DA              		push bp to [sp]
00008420 45 20              		sp-=5
00008421 08 0B 01 00        		bp=sp+1
                            	
00008423 0D 03 08 00        		R1=BP+8
00008425 01 D2              		[bp+1]=R1	// QImode move
000017D6                    	.debug
000017D6 2E 00 73 00        		.dw '.stabn 0x44,0,18,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         2C 00 00 00
         00 00      
000017E9 07 00 00 00        		.dd LM164-_initwave
000017EB 0D 00 0A 00        		.dw 0x0d,0x0a
00008426                    	.code
                            	LM164:
                            	LBB8:
000017ED                    	.debug
000017ED 2E 00 73 00        		.dw '.stabn 0x44,0,19,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         2C 00 00 00
         00 00      
00001800 07 00 00 00        		.dd LM165-_initwave
00001802 0D 00 0A 00        		.dw 0x0d,0x0a
00008426                    	.code
                            	LM165:
00008426 40 92              		R1=0	// QImode move
00008427 19 D3 2A 70        		[28714]=R1	// QImode move
00001804                    	.debug
00001804 2E 00 73 00        		.dw '.stabn 0x44,0,20,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         2C 00 00 00
         00 00      
00001817 0A 00 00 00        		.dd LM166-_initwave
00001819 0D 00 0A 00        		.dw 0x0d,0x0a
00008429                    	.code
                            	LM166:
00008429 40 92              		R1=0	// QImode move
0000842A C5 D2              		[BP]=R1	// QImode move
                            	L106:
0000842B C5 92              		R1=[BP]	// QImode move
0000842C 09 43 FF 00        		CMP R1,255	// QImode compare
0000842E 04 AE 01 EE        		NSJNG L109	//QImode LE
         00 EE      
00008431 0F 9F 8C 84        		pc=L107	// Indirect jump
                            	L109:
0000181B                    	.debug
0000181B 2E 00 73 00        		.dw '.stabn 0x44,0,22,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         2C 00 00 00
         00 00      
0000182E 14 00 00 00        		.dd LM167-_initwave
00001830 0D 00 0A 00        		.dw 0x0d,0x0a
00008433                    	.code
                            	LM167:
00008433 09 93 01 02        		R1=_SINE	// QImode move
00008435 C5 94              		R2=[BP]	// QImode move
00008436 02 03              		R1 = R1 + R2	//addqi3
00008437 0A 95 01 02        		R2=_SINE	// QImode move
00008439 C5 96              		R3=[BP]	// QImode move
0000843A 03 05              		R2 = R2 + R3	//addqi3
0000843B 02 99              		R4=R2	// QImode move
0000843C C4 96              		R3=[R4]	// QImode move
0000843D 4B 95              		R2=R3 lsl 2
0000843E 5A 95              		R2=R2 lsl 4
0000843F 01 97              		R3=R1	// QImode move
00008440 C3 D4              		[R3]=R2	// QImode move
00001832                    	.debug
00001832 2E 00 73 00        		.dw '.stabn 0x44,0,23,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         2C 00 00 00
         00 00      
00001845 22 00 00 00        		.dd LM168-_initwave
00001847 0D 00 0A 00        		.dw 0x0d,0x0a
00008441                    	.code
                            	LM168:
00008441 09 93 01 02        		R1=_SINE	// QImode move
00008443 C5 94              		R2=[BP]	// QImode move
00008444 02 D2              		[bp+2]=R1	// QImode move
00008445 02 98              		R4=[bp+2]	// QImode move
00008446 02 09              		R4 = R4 + R2	//addqi3
00008447 02 D8              		[bp+2]=R4	// QImode move
00008448 09 93 01 02        		R1=_SINE	// QImode move
0000844A C5 96              		R3=[BP]	// QImode move
0000844B 01 95              		R2=R1	// QImode move
0000844C 03 05              		R2 = R2 + R3	//addqi3
0000844D 02 97              		R3=R2	// QImode move
0000844E C3 92              		R1=[R3]	// QImode move
0000844F 72 94              		R2=50	// QImode move
00008450 C8 D4              		[SP--]=R2	// QImode move
00008451 C8 D2              		[SP--]=R1	// QImode move
00008452 40 F0 AB 85        		call __divu1	// call with return value
00008454 42 00              		SP = SP + 2	//SP
00008455 02 98              		R4=[bp+2]	// QImode move
00008456 C4 D2              		[R4]=R1	// QImode move
00001849                    	.debug
00001849 2E 00 73 00        		.dw '.stabn 0x44,0,24,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         2C 00 00 00
         00 00      
0000185C 38 00 00 00        		.dd LM169-_initwave
0000185E 0D 00 0A 00        		.dw 0x0d,0x0a
00008457                    	.code
                            	LM169:
00008457 09 93 01 00        		R1=_SQUR	// QImode move
00008459 C5 94              		R2=[BP]	// QImode move
0000845A 03 D2              		[bp+3]=R1	// QImode move
0000845B 03 92              		R1=[bp+3]	// QImode move
0000845C 02 03              		R1 = R1 + R2	//addqi3
0000845D 03 D2              		[bp+3]=R1	// QImode move
0000845E 09 93 01 00        		R1=_SQUR	// QImode move
00008460 C5 96              		R3=[BP]	// QImode move
00008461 01 95              		R2=R1	// QImode move
00008462 03 05              		R2 = R2 + R3	//addqi3
00008463 02 97              		R3=R2	// QImode move
00008464 C3 92              		R1=[R3]	// QImode move
00008465 72 94              		R2=50	// QImode move
00008466 C8 D4              		[SP--]=R2	// QImode move
00008467 C8 D2              		[SP--]=R1	// QImode move
00008468 40 F0 AB 85        		call __divu1	// call with return value
0000846A 42 00              		SP = SP + 2	//SP
0000846B 03 98              		R4=[bp+3]	// QImode move
0000846C C4 D2              		[R4]=R1	// QImode move
00001860                    	.debug
00001860 2E 00 73 00        		.dw '.stabn 0x44,0,25,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         2C 00 00 00
         00 00      
00001873 4E 00 00 00        		.dd LM170-_initwave
00001875 0D 00 0A 00        		.dw 0x0d,0x0a
0000846D                    	.code
                            	LM170:
0000846D 09 93 01 01        		R1=_TRIG	// QImode move
0000846F C5 94              		R2=[BP]	// QImode move
00008470 04 D2              		[bp+4]=R1	// QImode move
00008471 04 92              		R1=[bp+4]	// QImode move
00008472 02 03              		R1 = R1 + R2	//addqi3
00008473 04 D2              		[bp+4]=R1	// QImode move
00008474 09 93 01 01        		R1=_TRIG	// QImode move
00008476 C5 96              		R3=[BP]	// QImode move
00008477 01 95              		R2=R1	// QImode move
00008478 03 05              		R2 = R2 + R3	//addqi3
00008479 02 97              		R3=R2	// QImode move
0000847A C3 92              		R1=[R3]	// QImode move
0000847B 5E 94              		R2=30	// QImode move
0000847C C8 D4              		[SP--]=R2	// QImode move
0000847D C8 D2              		[SP--]=R1	// QImode move
0000847E 40 F0 AB 85        		call __divu1	// call with return value
00008480 42 00              		SP = SP + 2	//SP
00008481 04 98              		R4=[bp+4]	// QImode move
00008482 C4 D2              		[R4]=R1	// QImode move
00001877                    	.debug
00001877 2E 00 73 00        		.dw '.stabn 0x44,0,26,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         2C 00 00 00
         00 00      
0000188A 64 00 00 00        		.dd LM171-_initwave
0000188C 0D 00 0A 00        		.dw 0x0d,0x0a
00008483                    	.code
                            	LM171:
00008483 41 92              		R1=1	// QImode move
00008484 19 D3 12 70        		[28690]=R1	// QImode move
0000188E                    	.debug
0000188E 2E 00 73 00        		.dw '.stabn 0x44,0,20,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         2C 00 00 00
         00 00      
000018A1 67 00 00 00        		.dd LM172-_initwave
000018A3 0D 00 0A 00        		.dw 0x0d,0x0a
00008486                    	.code
                            	LM172:
                            	L108:
00008486 C5 92              		R1=[BP]	// QImode move
00008487 09 05 01 00        		R2=R1+1
00008489 C5 D4              		[BP]=R2	// QImode move
0000848A 0F 9F 2B 84        		pc=L106	// Indirect jump
                            	L107:
000018A5                    	.debug
000018A5 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
000018B8 6D 00 00 00        		.dd LM173-_initwave
000018BA 0D 00 0A 00        		.dw 0x0d,0x0a
0000848C                    	.code
                            	LM173:
                            	LBE8:
000018BC                    	.debug
000018BC 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
000018CF 6D 00 00 00        		.dd LM174-_initwave
000018D1 0D 00 0A 00        		.dw 0x0d,0x0a
0000848C                    	.code
                            	LM174:
                            	L105:
                            	
0000848C 45 00              		sp+=5
0000848D 88 98              		pop bp from [sp]
0000848E 90 9A              		retf
                            		.endp	// end of initwave
                            	
000018D3                    	.debug
000018D3 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000018E5 07 00 00 00        		.dd LBB8-_initwave
000018E7 0D 00 0A 00        		.dw 0x0d,0x0a
0000848F                    	.code
000018E9                    	.debug
000018E9 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000848F                    	.CODE
00001901                    	.debug
00001901 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001913 6D 00 00 00        		.dd LBE8-_initwave
00001915 0D 00 0A 00        		.dw 0x0d,0x0a
0000848F                    	.code
00001917                    	.debug
00001917 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001920 70 00 00 00        		.dd LME10-_initwave
00001922 0D 00 0A 00        		.dw 0x0d,0x0a
0000848F                    	.code
                            	LME10:
0000848F                    	.code
00001924                    	.debug
00001924 2E 00 73 00        		.dw '.stabs "wave:F19",36,0,0,',0,0,offset _wave,seg _wave,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 61 00
         76 00 65 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 69 04
         00 00 0D 00
         0A 00      
0000848F                    	.CODE
                            	.public _wave
                            	_wave:	.proc
00001943                    	.debug
00001943 2E 00 73 00        		.dw '.stabn 0x44,0,30,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         2C 00 00 00
         00 00      
00001956 00 00 00 00        		.dd LM175-_wave
00001958 0D 00 0A 00        		.dw 0x0d,0x0a
0000848F                    	.code
                            	LM175:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
0000848F 88 DA              		push bp to [sp]
00008490 42 20              		sp-=2
00008491 08 0B 01 00        		bp=sp+1
                            	
00008493 0D 03 05 00        		R1=BP+5
00008495 01 D2              		[bp+1]=R1	// QImode move
0000195A                    	.debug
0000195A 2E 00 73 00        		.dw '.stabn 0x44,0,31,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         2C 00 00 00
         00 00      
0000196D 07 00 00 00        		.dd LM176-_wave
0000196F 0D 00 0A 00        		.dw 0x0d,0x0a
00008496                    	.code
                            	LM176:
                            	LBB9:
00001971                    	.debug
00001971 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
00001984 07 00 00 00        		.dd LM177-_wave
00001986 0D 00 0A 00        		.dw 0x0d,0x0a
00008496                    	.code
                            	LM177:
00008496 11 93 01 03        		R1=[_mode]	// QImode move
00008498 40 42              		CMP R1,0	// QImode test
00008499 33 4E 01 EE        		NSJNZ L112	//QImode NE
         00 EE      
00001988                    	.debug
00001988 2E 00 73 00        		.dw '.stabn 0x44,0,34,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         2C 00 00 00
         00 00      
0000199B 0D 00 00 00        		.dd LM178-_wave
0000199D 0D 00 0A 00        		.dw 0x0d,0x0a
0000849C                    	.code
                            	LM178:
0000849C 40 92              		R1=0	// QImode move
0000849D C5 D2              		[BP]=R1	// QImode move
                            	L113:
0000849E C5 92              		R1=[BP]	// QImode move
0000849F 09 43 FF 00        		CMP R1,255	// QImode compare
000084A1 04 AE 01 EE        		NSJNG L116	//QImode LE
         00 EE      
000084A4 0F 9F CB 84        		pc=L114	// Indirect jump
                            	L116:
0000199F                    	.debug
0000199F 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
000019B2 17 00 00 00        		.dd LM179-_wave
000019B4 0D 00 0A 00        		.dw 0x0d,0x0a
000084A6                    	.code
                            	LM179:
000084A6 09 93 01 02        		R1=_SINE	// QImode move
000084A8 C5 94              		R2=[BP]	// QImode move
000084A9 02 03              		R1 = R1 + R2	//addqi3
000084AA 01 97              		R3=R1	// QImode move
000084AB C3 94              		R2=[R3]	// QImode move
000084AC 11 93 03 03        		R1=[_vol]	// QImode move
000084AE 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
000084AF 1B D7 17 70        		[28695]=R3	// QImode move
000019B6                    	.debug
000019B6 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
000019C9 22 00 00 00        		.dd LM180-_wave
000019CB 0D 00 0A 00        		.dw 0x0d,0x0a
000084B1                    	.code
                            	LM180:
000084B1 11 93 02 03        		R1=[_freq]	// QImode move
000084B3 0A 95 64 00        		R2=100	// QImode move
000084B5 C8 D4              		[SP--]=R2	// QImode move
000084B6 C8 D2              		[SP--]=R1	// QImode move
000084B7 40 F0 AB 85        		call __divu1	// call with return value
000084B9 42 00              		SP = SP + 2	//SP
000084BA 0B 97 C8 00        		R3=200	// QImode move
000084BC 03 95              		R2=R3	// QImode move
000084BD 01 25              		R2 = R2 - R1	//subqi3
000084BE C8 D4              		[SP--]=R2	// QImode move
000084BF 40 F0 05 84        		call _delay_wave	// call without return value
000084C1 41 00              		SP = SP + 1	//SP
000019CD                    	.debug
000019CD 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
000019E0 33 00 00 00        		.dd LM181-_wave
000019E2 0D 00 0A 00        		.dw 0x0d,0x0a
000084C2                    	.code
                            	LM181:
000084C2 41 92              		R1=1	// QImode move
000084C3 19 D3 12 70        		[28690]=R1	// QImode move
000019E4                    	.debug
000019E4 2E 00 73 00        		.dw '.stabn 0x44,0,34,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         2C 00 00 00
         00 00      
000019F7 36 00 00 00        		.dd LM182-_wave
000019F9 0D 00 0A 00        		.dw 0x0d,0x0a
000084C5                    	.code
                            	LM182:
                            	L115:
000084C5 C5 92              		R1=[BP]	// QImode move
000084C6 09 05 01 00        		R2=R1+1
000084C8 C5 D4              		[BP]=R2	// QImode move
000084C9 0F 9F 9E 84        		pc=L113	// Indirect jump
                            	L114:
000019FB                    	.debug
000019FB 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
00001A0E 3C 00 00 00        		.dd LM183-_wave
00001A10 0D 00 0A 00        		.dw 0x0d,0x0a
000084CB                    	.code
                            	LM183:
000084CB 0F 9F 71 85        		pc=L111	// Indirect jump
                            	L112:
00001A12                    	.debug
00001A12 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
00001A25 3E 00 00 00        		.dd LM184-_wave
00001A27 0D 00 0A 00        		.dw 0x0d,0x0a
000084CD                    	.code
                            	LM184:
000084CD 11 93 01 03        		R1=[_mode]	// QImode move
000084CF 41 42              		CMP R1,1	// QImode compare
000084D0 33 4E 01 EE        		NSJNZ L117	//QImode NE
         00 EE      
00001A29                    	.debug
00001A29 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
00001A3C 44 00 00 00        		.dd LM185-_wave
00001A3E 0D 00 0A 00        		.dw 0x0d,0x0a
000084D3                    	.code
                            	LM185:
000084D3 40 92              		R1=0	// QImode move
000084D4 C5 D2              		[BP]=R1	// QImode move
                            	L118:
000084D5 C5 92              		R1=[BP]	// QImode move
000084D6 09 43 FF 00        		CMP R1,255	// QImode compare
000084D8 04 AE 01 EE        		NSJNG L121	//QImode LE
         00 EE      
000084DB 0F 9F 02 85        		pc=L119	// Indirect jump
                            	L121:
00001A40                    	.debug
00001A40 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
00001A53 4E 00 00 00        		.dd LM186-_wave
00001A55 0D 00 0A 00        		.dw 0x0d,0x0a
000084DD                    	.code
                            	LM186:
000084DD 09 93 01 00        		R1=_SQUR	// QImode move
000084DF C5 94              		R2=[BP]	// QImode move
000084E0 02 03              		R1 = R1 + R2	//addqi3
000084E1 01 97              		R3=R1	// QImode move
000084E2 C3 94              		R2=[R3]	// QImode move
000084E3 11 93 03 03        		R1=[_vol]	// QImode move
000084E5 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
000084E6 1B D7 17 70        		[28695]=R3	// QImode move
00001A57                    	.debug
00001A57 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
00001A6A 59 00 00 00        		.dd LM187-_wave
00001A6C 0D 00 0A 00        		.dw 0x0d,0x0a
000084E8                    	.code
                            	LM187:
000084E8 11 93 02 03        		R1=[_freq]	// QImode move
000084EA 0A 95 64 00        		R2=100	// QImode move
000084EC C8 D4              		[SP--]=R2	// QImode move
000084ED C8 D2              		[SP--]=R1	// QImode move
000084EE 40 F0 AB 85        		call __divu1	// call with return value
000084F0 42 00              		SP = SP + 2	//SP
000084F1 0B 97 C8 00        		R3=200	// QImode move
000084F3 03 95              		R2=R3	// QImode move
000084F4 01 25              		R2 = R2 - R1	//subqi3
000084F5 C8 D4              		[SP--]=R2	// QImode move
000084F6 40 F0 05 84        		call _delay_wave	// call without return value
000084F8 41 00              		SP = SP + 1	//SP
00001A6E                    	.debug
00001A6E 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
00001A81 6A 00 00 00        		.dd LM188-_wave
00001A83 0D 00 0A 00        		.dw 0x0d,0x0a
000084F9                    	.code
                            	LM188:
000084F9 41 92              		R1=1	// QImode move
000084FA 19 D3 12 70        		[28690]=R1	// QImode move
00001A85                    	.debug
00001A85 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
00001A98 6D 00 00 00        		.dd LM189-_wave
00001A9A 0D 00 0A 00        		.dw 0x0d,0x0a
000084FC                    	.code
                            	LM189:
                            	L120:
000084FC C5 92              		R1=[BP]	// QImode move
000084FD 09 05 01 00        		R2=R1+1
000084FF C5 D4              		[BP]=R2	// QImode move
00008500 0F 9F D5 84        		pc=L118	// Indirect jump
                            	L119:
00001A9C                    	.debug
00001A9C 2E 00 73 00        		.dw '.stabn 0x44,0,50,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 30 00
         2C 00 00 00
         00 00      
00001AAF 73 00 00 00        		.dd LM190-_wave
00001AB1 0D 00 0A 00        		.dw 0x0d,0x0a
00008502                    	.code
                            	LM190:
00008502 0F 9F 71 85        		pc=L111	// Indirect jump
                            	L117:
00001AB3                    	.debug
00001AB3 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
00001AC6 75 00 00 00        		.dd LM191-_wave
00001AC8 0D 00 0A 00        		.dw 0x0d,0x0a
00008504                    	.code
                            	LM191:
00008504 11 93 01 03        		R1=[_mode]	// QImode move
00008506 42 42              		CMP R1,2	// QImode compare
00008507 33 4E 01 EE        		NSJNZ L122	//QImode NE
         00 EE      
00001ACA                    	.debug
00001ACA 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
00001ADD 7B 00 00 00        		.dd LM192-_wave
00001ADF 0D 00 0A 00        		.dw 0x0d,0x0a
0000850A                    	.code
                            	LM192:
0000850A 40 92              		R1=0	// QImode move
0000850B C5 D2              		[BP]=R1	// QImode move
                            	L123:
0000850C C5 92              		R1=[BP]	// QImode move
0000850D 09 43 FF 00        		CMP R1,255	// QImode compare
0000850F 04 AE 01 EE        		NSJNG L126	//QImode LE
         00 EE      
00008512 0F 9F 39 85        		pc=L124	// Indirect jump
                            	L126:
00001AE1                    	.debug
00001AE1 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
00001AF4 85 00 00 00        		.dd LM193-_wave
00001AF6 0D 00 0A 00        		.dw 0x0d,0x0a
00008514                    	.code
                            	LM193:
00008514 09 93 01 01        		R1=_TRIG	// QImode move
00008516 C5 94              		R2=[BP]	// QImode move
00008517 02 03              		R1 = R1 + R2	//addqi3
00008518 01 97              		R3=R1	// QImode move
00008519 C3 94              		R2=[R3]	// QImode move
0000851A 11 93 03 03        		R1=[_vol]	// QImode move
0000851C 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
0000851D 1B D7 17 70        		[28695]=R3	// QImode move
00001AF8                    	.debug
00001AF8 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
00001B0B 90 00 00 00        		.dd LM194-_wave
00001B0D 0D 00 0A 00        		.dw 0x0d,0x0a
0000851F                    	.code
                            	LM194:
0000851F 11 93 02 03        		R1=[_freq]	// QImode move
00008521 0A 95 64 00        		R2=100	// QImode move
00008523 C8 D4              		[SP--]=R2	// QImode move
00008524 C8 D2              		[SP--]=R1	// QImode move
00008525 40 F0 AB 85        		call __divu1	// call with return value
00008527 42 00              		SP = SP + 2	//SP
00008528 0B 97 C8 00        		R3=200	// QImode move
0000852A 03 95              		R2=R3	// QImode move
0000852B 01 25              		R2 = R2 - R1	//subqi3
0000852C C8 D4              		[SP--]=R2	// QImode move
0000852D 40 F0 05 84        		call _delay_wave	// call without return value
0000852F 41 00              		SP = SP + 1	//SP
00001B0F                    	.debug
00001B0F 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
00001B22 A1 00 00 00        		.dd LM195-_wave
00001B24 0D 00 0A 00        		.dw 0x0d,0x0a
00008530                    	.code
                            	LM195:
00008530 41 92              		R1=1	// QImode move
00008531 19 D3 12 70        		[28690]=R1	// QImode move
00001B26                    	.debug
00001B26 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
00001B39 A4 00 00 00        		.dd LM196-_wave
00001B3B 0D 00 0A 00        		.dw 0x0d,0x0a
00008533                    	.code
                            	LM196:
                            	L125:
00008533 C5 92              		R1=[BP]	// QImode move
00008534 09 05 01 00        		R2=R1+1
00008536 C5 D4              		[BP]=R2	// QImode move
00008537 0F 9F 0C 85        		pc=L123	// Indirect jump
                            	L124:
00001B3D                    	.debug
00001B3D 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
00001B50 AA 00 00 00        		.dd LM197-_wave
00001B52 0D 00 0A 00        		.dw 0x0d,0x0a
00008539                    	.code
                            	LM197:
00008539 0F 9F 71 85        		pc=L111	// Indirect jump
                            	L122:
00001B54                    	.debug
00001B54 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
00001B67 AC 00 00 00        		.dd LM198-_wave
00001B69 0D 00 0A 00        		.dw 0x0d,0x0a
0000853B                    	.code
                            	LM198:
0000853B 11 93 01 03        		R1=[_mode]	// QImode move
0000853D 43 42              		CMP R1,3	// QImode compare
0000853E 32 4E 01 EE        		NSJNZ L127	//QImode NE
         00 EE      
00001B6B                    	.debug
00001B6B 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
00001B7E B2 00 00 00        		.dd LM199-_wave
00001B80 0D 00 0A 00        		.dw 0x0d,0x0a
00008541                    	.code
                            	LM199:
00008541 40 92              		R1=0	// QImode move
00008542 C5 D2              		[BP]=R1	// QImode move
                            	L128:
00008543 C5 92              		R1=[BP]	// QImode move
00008544 09 43 FF 00        		CMP R1,255	// QImode compare
00008546 04 AE 01 EE        		NSJNG L131	//QImode LE
         00 EE      
00008549 0F 9F 6F 85        		pc=L129	// Indirect jump
                            	L131:
00001B82                    	.debug
00001B82 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
00001B95 BC 00 00 00        		.dd LM200-_wave
00001B97 0D 00 0A 00        		.dw 0x0d,0x0a
0000854B                    	.code
                            	LM200:
0000854B 09 93 06 03        		R1=_mem_table	// QImode move
0000854D C5 94              		R2=[BP]	// QImode move
0000854E 02 03              		R1 = R1 + R2	//addqi3
0000854F 01 97              		R3=R1	// QImode move
00008550 C3 94              		R2=[R3]	// QImode move
00008551 4A 92              		R1=10	// QImode move
00008552 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
00008553 1B D7 17 70        		[28695]=R3	// QImode move
00001B99                    	.debug
00001B99 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
00001BAC C6 00 00 00        		.dd LM201-_wave
00001BAE 0D 00 0A 00        		.dw 0x0d,0x0a
00008555                    	.code
                            	LM201:
00008555 11 93 04 03        		R1=[_mem_freq]	// QImode move
00008557 0A 95 64 00        		R2=100	// QImode move
00008559 C8 D4              		[SP--]=R2	// QImode move
0000855A C8 D2              		[SP--]=R1	// QImode move
0000855B 40 F0 AB 85        		call __divu1	// call with return value
0000855D 42 00              		SP = SP + 2	//SP
0000855E 0B 97 C8 00        		R3=200	// QImode move
00008560 03 95              		R2=R3	// QImode move
00008561 01 25              		R2 = R2 - R1	//subqi3
00008562 C8 D4              		[SP--]=R2	// QImode move
00008563 40 F0 05 84        		call _delay_wave	// call without return value
00008565 41 00              		SP = SP + 1	//SP
00001BB0                    	.debug
00001BB0 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
00001BC3 D7 00 00 00        		.dd LM202-_wave
00001BC5 0D 00 0A 00        		.dw 0x0d,0x0a
00008566                    	.code
                            	LM202:
00008566 41 92              		R1=1	// QImode move
00008567 19 D3 12 70        		[28690]=R1	// QImode move
00001BC7                    	.debug
00001BC7 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
00001BDA DA 00 00 00        		.dd LM203-_wave
00001BDC 0D 00 0A 00        		.dw 0x0d,0x0a
00008569                    	.code
                            	LM203:
                            	L130:
00008569 C5 92              		R1=[BP]	// QImode move
0000856A 09 05 01 00        		R2=R1+1
0000856C C5 D4              		[BP]=R2	// QImode move
0000856D 0F 9F 43 85        		pc=L128	// Indirect jump
                            	L129:
00001BDE                    	.debug
00001BDE 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
00001BF1 E0 00 00 00        		.dd LM204-_wave
00001BF3 0D 00 0A 00        		.dw 0x0d,0x0a
0000856F                    	.code
                            	LM204:
0000856F 0F 9F 71 85        		pc=L111	// Indirect jump
                            	L127:
00001BF5                    	.debug
00001BF5 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00001C08 E2 00 00 00        		.dd LM205-_wave
00001C0A 0D 00 0A 00        		.dw 0x0d,0x0a
00008571                    	.code
                            	LM205:
                            	LBE9:
00001C0C                    	.debug
00001C0C 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00001C1F E2 00 00 00        		.dd LM206-_wave
00001C21 0D 00 0A 00        		.dw 0x0d,0x0a
00008571                    	.code
                            	LM206:
                            	L111:
                            	
00008571 42 00              		sp+=2
00008572 88 98              		pop bp from [sp]
00008573 90 9A              		retf
                            		.endp	// end of wave
                            	
00001C23                    	.debug
00001C23 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001C35 07 00 00 00        		.dd LBB9-_wave
00001C37 0D 00 0A 00        		.dw 0x0d,0x0a
00008574                    	.code
00001C39                    	.debug
00001C39 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008574                    	.CODE
00001C51                    	.debug
00001C51 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00001C63 E2 00 00 00        		.dd LBE9-_wave
00001C65 0D 00 0A 00        		.dw 0x0d,0x0a
00008574                    	.code
00001C67                    	.debug
00001C67 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001C70 E5 00 00 00        		.dd LME11-_wave
00001C72 0D 00 0A 00        		.dw 0x0d,0x0a
00008574                    	.code
                            	LME11:
00001C74                    	.debug
00001C74 2E 00 73 00        		.dw '.stabs "mode:G4",32,0,0,',0,0,offset _mode,seg _mode,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 6F 00
         64 00 65 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 03 00 00
         0D 00 0A 00
00008574                    	.CODE
00001C92                    	.debug
00001C92 2E 00 73 00        		.dw '.stabs "freq:G4",32,0,0,',0,0,offset _freq,seg _freq,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 72 00
         65 00 71 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         01 03 00 00
         0D 00 0A 00
00008574                    	.CODE
00001CB0                    	.debug
00001CB0 2E 00 73 00        		.dw '.stabs "vol:G4",32,0,0,',0,0,offset _vol,seg _vol,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         6C 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 02 03
         00 00 0D 00
         0A 00      
00008574                    	.CODE
00001CCD                    	.debug
00001CCD 2E 00 73 00        		.dw '.stabs "index:G4",32,0,0,',0,0,offset _index,seg _index,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         64 00 65 00
         78 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 05 04
         00 00 0D 00
         0A 00      
00008574                    	.CODE
00001CEC                    	.debug
00001CEC 2E 00 73 00        		.dw '.stabs "mem_freq:G4",32,0,0,',0,0,offset _mem_freq,seg _mem_freq,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 65 00
         6D 00 5F 00
         66 00 72 00
         65 00 71 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         03 03 00 00
         0D 00 0A 00
00008574                    	.CODE
00001D0E                    	.debug
00001D0E 2E 00 73 00        		.dw '.stabs "mem_vol:G4",32,0,0,',0,0,offset _mem_vol,seg _mem_vol,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 65 00
         6D 00 5F 00
         76 00 6F 00
         6C 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 04 03
         00 00 0D 00
         0A 00      
00008574                    	.CODE
                            	.public _SQUR
00000001                    	.iram
                            	_SQUR:
00000001 C0 FF              		.dw -64
00000002 C0 FF              		.dw -64
00000003 C0 FF              		.dw -64
00000004 C0 FF              		.dw -64
00000005 C0 FF              		.dw -64
00000006 C0 FF              		.dw -64
00000007 C0 FF              		.dw -64
00000008 C0 FF              		.dw -64
00000009 C0 FF              		.dw -64
0000000A C0 FF              		.dw -64
0000000B C0 FF              		.dw -64
0000000C C0 FF              		.dw -64
0000000D C0 FF              		.dw -64
0000000E C0 FF              		.dw -64
0000000F C0 FF              		.dw -64
00000010 C0 FF              		.dw -64
00000011 C0 FF              		.dw -64
00000012 C0 FF              		.dw -64
00000013 C0 FF              		.dw -64
00000014 C0 FF              		.dw -64
00000015 C0 FF              		.dw -64
00000016 C0 FF              		.dw -64
00000017 C0 FF              		.dw -64
00000018 C0 FF              		.dw -64
00000019 C0 FF              		.dw -64
0000001A C0 FF              		.dw -64
0000001B C0 FF              		.dw -64
0000001C C0 FF              		.dw -64
0000001D C0 FF              		.dw -64
0000001E C0 FF              		.dw -64
0000001F C0 FF              		.dw -64
00000020 C0 FF              		.dw -64
00000021 C0 FF              		.dw -64
00000022 C0 FF              		.dw -64
00000023 C0 FF              		.dw -64
00000024 C0 FF              		.dw -64
00000025 C0 FF              		.dw -64
00000026 C0 FF              		.dw -64
00000027 C0 FF              		.dw -64
00000028 C0 FF              		.dw -64
00000029 C0 FF              		.dw -64
0000002A C0 FF              		.dw -64
0000002B C0 FF              		.dw -64
0000002C C0 FF              		.dw -64
0000002D C0 FF              		.dw -64
0000002E C0 FF              		.dw -64
0000002F C0 FF              		.dw -64
00000030 C0 FF              		.dw -64
00000031 C0 FF              		.dw -64
00000032 C0 FF              		.dw -64
00000033 C0 FF              		.dw -64
00000034 C0 FF              		.dw -64
00000035 C0 FF              		.dw -64
00000036 C0 FF              		.dw -64
00000037 C0 FF              		.dw -64
00000038 C0 FF              		.dw -64
00000039 C0 FF              		.dw -64
0000003A C0 FF              		.dw -64
0000003B C0 FF              		.dw -64
0000003C C0 FF              		.dw -64
0000003D C0 FF              		.dw -64
0000003E C0 FF              		.dw -64
0000003F C0 FF              		.dw -64
00000040 C0 FF              		.dw -64
00000041 C0 FF              		.dw -64
00000042 C0 FF              		.dw -64
00000043 C0 FF              		.dw -64
00000044 C0 FF              		.dw -64
00000045 C0 FF              		.dw -64
00000046 C0 FF              		.dw -64
00000047 C0 FF              		.dw -64
00000048 C0 FF              		.dw -64
00000049 C0 FF              		.dw -64
0000004A C0 FF              		.dw -64
0000004B C0 FF              		.dw -64
0000004C C0 FF              		.dw -64
0000004D C0 FF              		.dw -64
0000004E C0 FF              		.dw -64
0000004F C0 FF              		.dw -64
00000050 C0 FF              		.dw -64
00000051 C0 FF              		.dw -64
00000052 C0 FF              		.dw -64
00000053 C0 FF              		.dw -64
00000054 C0 FF              		.dw -64
00000055 C0 FF              		.dw -64
00000056 C0 FF              		.dw -64
00000057 C0 FF              		.dw -64
00000058 C0 FF              		.dw -64
00000059 C0 FF              		.dw -64
0000005A C0 FF              		.dw -64
0000005B C0 FF              		.dw -64
0000005C C0 FF              		.dw -64
0000005D C0 FF              		.dw -64
0000005E C0 FF              		.dw -64
0000005F C0 FF              		.dw -64
00000060 C0 FF              		.dw -64
00000061 C0 FF              		.dw -64
00000062 C0 FF              		.dw -64
00000063 C0 FF              		.dw -64
00000064 C0 FF              		.dw -64
00000065 C0 FF              		.dw -64
00000066 C0 FF              		.dw -64
00000067 C0 FF              		.dw -64
00000068 C0 FF              		.dw -64
00000069 C0 FF              		.dw -64
0000006A C0 FF              		.dw -64
0000006B C0 FF              		.dw -64
0000006C C0 FF              		.dw -64
0000006D C0 FF              		.dw -64
0000006E C0 FF              		.dw -64
0000006F C0 FF              		.dw -64
00000070 C0 FF              		.dw -64
00000071 C0 FF              		.dw -64
00000072 C0 FF              		.dw -64
00000073 C0 FF              		.dw -64
00000074 C0 FF              		.dw -64
00000075 C0 FF              		.dw -64
00000076 C0 FF              		.dw -64
00000077 C0 FF              		.dw -64
00000078 C0 FF              		.dw -64
00000079 C0 FF              		.dw -64
0000007A C0 FF              		.dw -64
0000007B C0 FF              		.dw -64
0000007C C0 FF              		.dw -64
0000007D C0 FF              		.dw -64
0000007E C0 FF              		.dw -64
0000007F C0 FF              		.dw -64
00000080 C0 FF              		.dw -64
00000081 00 00              		.dw 0
00000082 00 00              		.dw 0
00000083 00 00              		.dw 0
00000084 00 00              		.dw 0
00000085 00 00              		.dw 0
00000086 00 00              		.dw 0
00000087 00 00              		.dw 0
00000088 00 00              		.dw 0
00000089 00 00              		.dw 0
0000008A 00 00              		.dw 0
0000008B 00 00              		.dw 0
0000008C 00 00              		.dw 0
0000008D 00 00              		.dw 0
0000008E 00 00              		.dw 0
0000008F 00 00              		.dw 0
00000090 00 00              		.dw 0
00000091 00 00              		.dw 0
00000092 00 00              		.dw 0
00000093 00 00              		.dw 0
00000094 00 00              		.dw 0
00000095 00 00              		.dw 0
00000096 00 00              		.dw 0
00000097 00 00              		.dw 0
00000098 00 00              		.dw 0
00000099 00 00              		.dw 0
0000009A 00 00              		.dw 0
0000009B 00 00              		.dw 0
0000009C 00 00              		.dw 0
0000009D 00 00              		.dw 0
0000009E 00 00              		.dw 0
0000009F 00 00              		.dw 0
000000A0 00 00              		.dw 0
000000A1 00 00              		.dw 0
000000A2 00 00              		.dw 0
000000A3 00 00              		.dw 0
000000A4 00 00              		.dw 0
000000A5 00 00              		.dw 0
000000A6 00 00              		.dw 0
000000A7 00 00              		.dw 0
000000A8 00 00              		.dw 0
000000A9 00 00              		.dw 0
000000AA 00 00              		.dw 0
000000AB 00 00              		.dw 0
000000AC 00 00              		.dw 0
000000AD 00 00              		.dw 0
000000AE 00 00              		.dw 0
000000AF 00 00              		.dw 0
000000B0 00 00              		.dw 0
000000B1 00 00              		.dw 0
000000B2 00 00              		.dw 0
000000B3 00 00              		.dw 0
000000B4 00 00              		.dw 0
000000B5 00 00              		.dw 0
000000B6 00 00              		.dw 0
000000B7 00 00              		.dw 0
000000B8 00 00              		.dw 0
000000B9 00 00              		.dw 0
000000BA 00 00              		.dw 0
000000BB 00 00              		.dw 0
000000BC 00 00              		.dw 0
000000BD 00 00              		.dw 0
000000BE 00 00              		.dw 0
000000BF 00 00              		.dw 0
000000C0 00 00              		.dw 0
000000C1 00 00              		.dw 0
000000C2 00 00              		.dw 0
000000C3 00 00              		.dw 0
000000C4 00 00              		.dw 0
000000C5 00 00              		.dw 0
000000C6 00 00              		.dw 0
000000C7 00 00              		.dw 0
000000C8 00 00              		.dw 0
000000C9 00 00              		.dw 0
000000CA 00 00              		.dw 0
000000CB 00 00              		.dw 0
000000CC 00 00              		.dw 0
000000CD 00 00              		.dw 0
000000CE 00 00              		.dw 0
000000CF 00 00              		.dw 0
000000D0 00 00              		.dw 0
000000D1 00 00              		.dw 0
000000D2 00 00              		.dw 0
000000D3 00 00              		.dw 0
000000D4 00 00              		.dw 0
000000D5 00 00              		.dw 0
000000D6 00 00              		.dw 0
000000D7 00 00              		.dw 0
000000D8 00 00              		.dw 0
000000D9 00 00              		.dw 0
000000DA 00 00              		.dw 0
000000DB 00 00              		.dw 0
000000DC 00 00              		.dw 0
000000DD 00 00              		.dw 0
000000DE 00 00              		.dw 0
000000DF 00 00              		.dw 0
000000E0 00 00              		.dw 0
000000E1 00 00              		.dw 0
000000E2 00 00              		.dw 0
000000E3 00 00              		.dw 0
000000E4 00 00              		.dw 0
000000E5 00 00              		.dw 0
000000E6 00 00              		.dw 0
000000E7 00 00              		.dw 0
000000E8 00 00              		.dw 0
000000E9 00 00              		.dw 0
000000EA 00 00              		.dw 0
000000EB 00 00              		.dw 0
000000EC 00 00              		.dw 0
000000ED 00 00              		.dw 0
000000EE 00 00              		.dw 0
000000EF 00 00              		.dw 0
000000F0 00 00              		.dw 0
000000F1 00 00              		.dw 0
000000F2 00 00              		.dw 0
000000F3 00 00              		.dw 0
000000F4 00 00              		.dw 0
000000F5 00 00              		.dw 0
000000F6 00 00              		.dw 0
000000F7 00 00              		.dw 0
000000F8 00 00              		.dw 0
000000F9 00 00              		.dw 0
000000FA 00 00              		.dw 0
000000FB 00 00              		.dw 0
000000FC 00 00              		.dw 0
000000FD 00 00              		.dw 0
000000FE 00 00              		.dw 0
000000FF 00 00              		.dw 0
00000100 00 00              		.dw 0
00001D2F                    	.debug
00001D2F 2E 00 73 00        		.dw '.stabs "SQUR:G21=ar1;0;255;4",32,0,0,',0,0,offset _SQUR,seg _SQUR,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 51 00
         55 00 52 00
         3A 00 47 00
         32 00 31 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 32 00
         35 00 35 00
         3B 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008574                    	.CODE
                            	.public _TRIG
00000101                    	.iram
                            	_TRIG:
00000101 00 00              		.dw 0
00000102 05 01              		.dw 261
00000103 0A 02              		.dw 522
00000104 0F 03              		.dw 783
00000105 14 04              		.dw 1044
00000106 1A 05              		.dw 1306
00000107 1F 06              		.dw 1567
00000108 24 07              		.dw 1828
00000109 29 08              		.dw 2089
0000010A 2F 09              		.dw 2351
0000010B 34 0A              		.dw 2612
0000010C 39 0B              		.dw 2873
0000010D 3E 0C              		.dw 3134
0000010E 43 0D              		.dw 3395
0000010F 49 0E              		.dw 3657
00000110 4E 0F              		.dw 3918
00000111 53 10              		.dw 4179
00000112 58 11              		.dw 4440
00000113 5E 12              		.dw 4702
00000114 63 13              		.dw 4963
00000115 68 14              		.dw 5224
00000116 6D 15              		.dw 5485
00000117 72 16              		.dw 5746
00000118 78 17              		.dw 6008
00000119 7D 18              		.dw 6269
0000011A 82 19              		.dw 6530
0000011B 87 1A              		.dw 6791
0000011C 8D 1B              		.dw 7053
0000011D 92 1C              		.dw 7314
0000011E 97 1D              		.dw 7575
0000011F 9C 1E              		.dw 7836
00000120 A1 1F              		.dw 8097
00000121 A7 20              		.dw 8359
00000122 AC 21              		.dw 8620
00000123 B1 22              		.dw 8881
00000124 B6 23              		.dw 9142
00000125 BC 24              		.dw 9404
00000126 C1 25              		.dw 9665
00000127 C6 26              		.dw 9926
00000128 CB 27              		.dw 10187
00000129 D0 28              		.dw 10448
0000012A D6 29              		.dw 10710
0000012B DB 2A              		.dw 10971
0000012C E0 2B              		.dw 11232
0000012D E5 2C              		.dw 11493
0000012E EB 2D              		.dw 11755
0000012F F0 2E              		.dw 12016
00000130 F5 2F              		.dw 12277
00000131 FA 30              		.dw 12538
00000132 00 32              		.dw 12800
00000133 05 33              		.dw 13061
00000134 0A 34              		.dw 13322
00000135 0F 35              		.dw 13583
00000136 14 36              		.dw 13844
00000137 1A 37              		.dw 14106
00000138 1F 38              		.dw 14367
00000139 24 39              		.dw 14628
0000013A 29 3A              		.dw 14889
0000013B 2F 3B              		.dw 15151
0000013C 34 3C              		.dw 15412
0000013D 39 3D              		.dw 15673
0000013E 3E 3E              		.dw 15934
0000013F 43 3F              		.dw 16195
00000140 49 40              		.dw 16457
00000141 4E 41              		.dw 16718
00000142 53 42              		.dw 16979
00000143 58 43              		.dw 17240
00000144 5E 44              		.dw 17502
00000145 63 45              		.dw 17763
00000146 68 46              		.dw 18024
00000147 6D 47              		.dw 18285
00000148 72 48              		.dw 18546
00000149 78 49              		.dw 18808
0000014A 7D 4A              		.dw 19069
0000014B 82 4B              		.dw 19330
0000014C 87 4C              		.dw 19591
0000014D 8D 4D              		.dw 19853
0000014E 92 4E              		.dw 20114
0000014F 97 4F              		.dw 20375
00000150 9C 50              		.dw 20636
00000151 A1 51              		.dw 20897
00000152 A7 52              		.dw 21159
00000153 AC 53              		.dw 21420
00000154 B1 54              		.dw 21681
00000155 B6 55              		.dw 21942
00000156 BC 56              		.dw 22204
00000157 C1 57              		.dw 22465
00000158 C6 58              		.dw 22726
00000159 CB 59              		.dw 22987
0000015A D0 5A              		.dw 23248
0000015B D6 5B              		.dw 23510
0000015C DB 5C              		.dw 23771
0000015D E0 5D              		.dw 24032
0000015E E5 5E              		.dw 24293
0000015F EB 5F              		.dw 24555
00000160 F0 60              		.dw 24816
00000161 F5 61              		.dw 25077
00000162 FA 62              		.dw 25338
00000163 00 64              		.dw 25600
00000164 05 65              		.dw 25861
00000165 0A 66              		.dw 26122
00000166 0F 67              		.dw 26383
00000167 14 68              		.dw 26644
00000168 1A 69              		.dw 26906
00000169 1F 6A              		.dw 27167
0000016A 24 6B              		.dw 27428
0000016B 29 6C              		.dw 27689
0000016C 2F 6D              		.dw 27951
0000016D 34 6E              		.dw 28212
0000016E 39 6F              		.dw 28473
0000016F 3E 70              		.dw 28734
00000170 43 71              		.dw 28995
00000171 49 72              		.dw 29257
00000172 4E 73              		.dw 29518
00000173 53 74              		.dw 29779
00000174 58 75              		.dw 30040
00000175 5E 76              		.dw 30302
00000176 63 77              		.dw 30563
00000177 68 78              		.dw 30824
00000178 6D 79              		.dw 31085
00000179 72 7A              		.dw 31346
0000017A 78 7B              		.dw 31608
0000017B 7D 7C              		.dw 31869
0000017C 82 7D              		.dw 32130
0000017D 87 7E              		.dw 32391
0000017E 8D 7F              		.dw 32653
0000017F 92 80              		.dw -32622
00000180 97 81              		.dw -32361
00000181 9C 82              		.dw -32100
00000182 97 81              		.dw -32361
00000183 92 80              		.dw -32622
00000184 8D 7F              		.dw 32653
00000185 87 7E              		.dw 32391
00000186 82 7D              		.dw 32130
00000187 7D 7C              		.dw 31869
00000188 78 7B              		.dw 31608
00000189 72 7A              		.dw 31346
0000018A 6D 79              		.dw 31085
0000018B 68 78              		.dw 30824
0000018C 63 77              		.dw 30563
0000018D 5E 76              		.dw 30302
0000018E 58 75              		.dw 30040
0000018F 53 74              		.dw 29779
00000190 4E 73              		.dw 29518
00000191 49 72              		.dw 29257
00000192 43 71              		.dw 28995
00000193 3E 70              		.dw 28734
00000194 39 6F              		.dw 28473
00000195 34 6E              		.dw 28212
00000196 2F 6D              		.dw 27951
00000197 29 6C              		.dw 27689
00000198 24 6B              		.dw 27428
00000199 1F 6A              		.dw 27167
0000019A 1A 69              		.dw 26906
0000019B 14 68              		.dw 26644
0000019C 0F 67              		.dw 26383
0000019D 0A 66              		.dw 26122
0000019E 05 65              		.dw 25861
0000019F 00 64              		.dw 25600
000001A0 FA 62              		.dw 25338
000001A1 F5 61              		.dw 25077
000001A2 F0 60              		.dw 24816
000001A3 EB 5F              		.dw 24555
000001A4 E5 5E              		.dw 24293
000001A5 E0 5D              		.dw 24032
000001A6 DB 5C              		.dw 23771
000001A7 D6 5B              		.dw 23510
000001A8 D0 5A              		.dw 23248
000001A9 CB 59              		.dw 22987
000001AA C6 58              		.dw 22726
000001AB C1 57              		.dw 22465
000001AC BC 56              		.dw 22204
000001AD B6 55              		.dw 21942
000001AE B1 54              		.dw 21681
000001AF AC 53              		.dw 21420
000001B0 A7 52              		.dw 21159
000001B1 A1 51              		.dw 20897
000001B2 9C 50              		.dw 20636
000001B3 97 4F              		.dw 20375
000001B4 92 4E              		.dw 20114
000001B5 8D 4D              		.dw 19853
000001B6 87 4C              		.dw 19591
000001B7 82 4B              		.dw 19330
000001B8 7D 4A              		.dw 19069
000001B9 78 49              		.dw 18808
000001BA 72 48              		.dw 18546
000001BB 6D 47              		.dw 18285
000001BC 68 46              		.dw 18024
000001BD 63 45              		.dw 17763
000001BE 5E 44              		.dw 17502
000001BF 58 43              		.dw 17240
000001C0 53 42              		.dw 16979
000001C1 4E 41              		.dw 16718
000001C2 49 40              		.dw 16457
000001C3 43 3F              		.dw 16195
000001C4 3E 3E              		.dw 15934
000001C5 39 3D              		.dw 15673
000001C6 34 3C              		.dw 15412
000001C7 2F 3B              		.dw 15151
000001C8 29 3A              		.dw 14889
000001C9 24 39              		.dw 14628
000001CA 1F 38              		.dw 14367
000001CB 1A 37              		.dw 14106
000001CC 14 36              		.dw 13844
000001CD 0F 35              		.dw 13583
000001CE 0A 34              		.dw 13322
000001CF 05 33              		.dw 13061
000001D0 00 32              		.dw 12800
000001D1 FA 30              		.dw 12538
000001D2 F5 2F              		.dw 12277
000001D3 F0 2E              		.dw 12016
000001D4 EB 2D              		.dw 11755
000001D5 E5 2C              		.dw 11493
000001D6 E0 2B              		.dw 11232
000001D7 DB 2A              		.dw 10971
000001D8 D6 29              		.dw 10710
000001D9 D0 28              		.dw 10448
000001DA CB 27              		.dw 10187
000001DB C6 26              		.dw 9926
000001DC C1 25              		.dw 9665
000001DD BC 24              		.dw 9404
000001DE B6 23              		.dw 9142
000001DF B1 22              		.dw 8881
000001E0 AC 21              		.dw 8620
000001E1 A7 20              		.dw 8359
000001E2 A1 1F              		.dw 8097
000001E3 9C 1E              		.dw 7836
000001E4 97 1D              		.dw 7575
000001E5 92 1C              		.dw 7314
000001E6 8D 1B              		.dw 7053
000001E7 87 1A              		.dw 6791
000001E8 82 19              		.dw 6530
000001E9 7D 18              		.dw 6269
000001EA 78 17              		.dw 6008
000001EB 72 16              		.dw 5746
000001EC 6D 15              		.dw 5485
000001ED 68 14              		.dw 5224
000001EE 63 13              		.dw 4963
000001EF 5E 12              		.dw 4702
000001F0 58 11              		.dw 4440
000001F1 53 10              		.dw 4179
000001F2 4E 0F              		.dw 3918
000001F3 49 0E              		.dw 3657
000001F4 43 0D              		.dw 3395
000001F5 3E 0C              		.dw 3134
000001F6 39 0B              		.dw 2873
000001F7 34 0A              		.dw 2612
000001F8 2F 09              		.dw 2351
000001F9 29 08              		.dw 2089
000001FA 24 07              		.dw 1828
000001FB 1F 06              		.dw 1567
000001FC 1A 05              		.dw 1306
000001FD 14 04              		.dw 1044
000001FE 0F 03              		.dw 783
000001FF 0A 02              		.dw 522
00000200 05 01              		.dw 261
00001D5A                    	.debug
00001D5A 2E 00 73 00        		.dw '.stabs "TRIG:G21",32,0,0,',0,0,offset _TRIG,seg _TRIG,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 52 00
         49 00 47 00
         3A 00 47 00
         32 00 31 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 01
         00 00 0D 00
         0A 00      
00008574                    	.CODE
                            	.public _SINE
00000201                    	.iram
                            	_SINE:
00000201 90 01              		.dw 400
00000202 9A 01              		.dw 410
00000203 A4 01              		.dw 420
00000204 AD 01              		.dw 429
00000205 B7 01              		.dw 439
00000206 C1 01              		.dw 449
00000207 CB 01              		.dw 459
00000208 D4 01              		.dw 468
00000209 DE 01              		.dw 478
0000020A E8 01              		.dw 488
0000020B F1 01              		.dw 497
0000020C FB 01              		.dw 507
0000020D 04 02              		.dw 516
0000020E 0D 02              		.dw 525
0000020F 17 02              		.dw 535
00000210 20 02              		.dw 544
00000211 29 02              		.dw 553
00000212 32 02              		.dw 562
00000213 3B 02              		.dw 571
00000214 44 02              		.dw 580
00000215 4D 02              		.dw 589
00000216 55 02              		.dw 597
00000217 5E 02              		.dw 606
00000218 66 02              		.dw 614
00000219 6E 02              		.dw 622
0000021A 76 02              		.dw 630
0000021B 7E 02              		.dw 638
0000021C 86 02              		.dw 646
0000021D 8E 02              		.dw 654
0000021E 95 02              		.dw 661
0000021F 9D 02              		.dw 669
00000220 A4 02              		.dw 676
00000221 AB 02              		.dw 683
00000222 B2 02              		.dw 690
00000223 B8 02              		.dw 696
00000224 BF 02              		.dw 703
00000225 C5 02              		.dw 709
00000226 CB 02              		.dw 715
00000227 D1 02              		.dw 721
00000228 D7 02              		.dw 727
00000229 DD 02              		.dw 733
0000022A E2 02              		.dw 738
0000022B E7 02              		.dw 743
0000022C EC 02              		.dw 748
0000022D F1 02              		.dw 753
0000022E F5 02              		.dw 757
0000022F FA 02              		.dw 762
00000230 FE 02              		.dw 766
00000231 02 03              		.dw 770
00000232 05 03              		.dw 773
00000233 09 03              		.dw 777
00000234 0C 03              		.dw 780
00000235 0F 03              		.dw 783
00000236 12 03              		.dw 786
00000237 14 03              		.dw 788
00000238 16 03              		.dw 790
00000239 18 03              		.dw 792
0000023A 1A 03              		.dw 794
0000023B 1C 03              		.dw 796
0000023C 1D 03              		.dw 797
0000023D 1E 03              		.dw 798
0000023E 1F 03              		.dw 799
0000023F 20 03              		.dw 800
00000240 20 03              		.dw 800
00000241 20 03              		.dw 800
00000242 20 03              		.dw 800
00000243 20 03              		.dw 800
00000244 1F 03              		.dw 799
00000245 1E 03              		.dw 798
00000246 1D 03              		.dw 797
00000247 1C 03              		.dw 796
00000248 1A 03              		.dw 794
00000249 18 03              		.dw 792
0000024A 16 03              		.dw 790
0000024B 14 03              		.dw 788
0000024C 12 03              		.dw 786
0000024D 0F 03              		.dw 783
0000024E 0C 03              		.dw 780
0000024F 09 03              		.dw 777
00000250 05 03              		.dw 773
00000251 02 03              		.dw 770
00000252 FE 02              		.dw 766
00000253 FA 02              		.dw 762
00000254 F5 02              		.dw 757
00000255 F1 02              		.dw 753
00000256 EC 02              		.dw 748
00000257 E7 02              		.dw 743
00000258 E2 02              		.dw 738
00000259 DD 02              		.dw 733
0000025A D7 02              		.dw 727
0000025B D1 02              		.dw 721
0000025C CB 02              		.dw 715
0000025D C5 02              		.dw 709
0000025E BF 02              		.dw 703
0000025F B8 02              		.dw 696
00000260 B2 02              		.dw 690
00000261 AB 02              		.dw 683
00000262 A4 02              		.dw 676
00000263 9D 02              		.dw 669
00000264 95 02              		.dw 661
00000265 8E 02              		.dw 654
00000266 86 02              		.dw 646
00000267 7E 02              		.dw 638
00000268 76 02              		.dw 630
00000269 6E 02              		.dw 622
0000026A 66 02              		.dw 614
0000026B 5E 02              		.dw 606
0000026C 55 02              		.dw 597
0000026D 4D 02              		.dw 589
0000026E 44 02              		.dw 580
0000026F 3B 02              		.dw 571
00000270 32 02              		.dw 562
00000271 29 02              		.dw 553
00000272 20 02              		.dw 544
00000273 17 02              		.dw 535
00000274 0D 02              		.dw 525
00000275 04 02              		.dw 516
00000276 FB 01              		.dw 507
00000277 F1 01              		.dw 497
00000278 E8 01              		.dw 488
00000279 DE 01              		.dw 478
0000027A D4 01              		.dw 468
0000027B CB 01              		.dw 459
0000027C C1 01              		.dw 449
0000027D B7 01              		.dw 439
0000027E AD 01              		.dw 429
0000027F A4 01              		.dw 420
00000280 9A 01              		.dw 410
00000281 90 01              		.dw 400
00000282 86 01              		.dw 390
00000283 7C 01              		.dw 380
00000284 73 01              		.dw 371
00000285 69 01              		.dw 361
00000286 5F 01              		.dw 351
00000287 55 01              		.dw 341
00000288 4C 01              		.dw 332
00000289 42 01              		.dw 322
0000028A 38 01              		.dw 312
0000028B 2F 01              		.dw 303
0000028C 25 01              		.dw 293
0000028D 1C 01              		.dw 284
0000028E 13 01              		.dw 275
0000028F 09 01              		.dw 265
00000290 00 01              		.dw 256
00000291 F7 00              		.dw 247
00000292 EE 00              		.dw 238
00000293 E5 00              		.dw 229
00000294 DC 00              		.dw 220
00000295 D3 00              		.dw 211
00000296 CB 00              		.dw 203
00000297 C2 00              		.dw 194
00000298 BA 00              		.dw 186
00000299 B2 00              		.dw 178
0000029A AA 00              		.dw 170
0000029B A2 00              		.dw 162
0000029C 9A 00              		.dw 154
0000029D 92 00              		.dw 146
0000029E 8B 00              		.dw 139
0000029F 83 00              		.dw 131
000002A0 7C 00              		.dw 124
000002A1 75 00              		.dw 117
000002A2 6E 00              		.dw 110
000002A3 68 00              		.dw 104
000002A4 61 00              		.dw 97
000002A5 5B 00              		.dw 91
000002A6 55 00              		.dw 85
000002A7 4F 00              		.dw 79
000002A8 49 00              		.dw 73
000002A9 43 00              		.dw 67
000002AA 3E 00              		.dw 62
000002AB 39 00              		.dw 57
000002AC 34 00              		.dw 52
000002AD 2F 00              		.dw 47
000002AE 2B 00              		.dw 43
000002AF 26 00              		.dw 38
000002B0 22 00              		.dw 34
000002B1 1E 00              		.dw 30
000002B2 1B 00              		.dw 27
000002B3 17 00              		.dw 23
000002B4 14 00              		.dw 20
000002B5 11 00              		.dw 17
000002B6 0E 00              		.dw 14
000002B7 0C 00              		.dw 12
000002B8 0A 00              		.dw 10
000002B9 08 00              		.dw 8
000002BA 06 00              		.dw 6
000002BB 04 00              		.dw 4
000002BC 03 00              		.dw 3
000002BD 02 00              		.dw 2
000002BE 01 00              		.dw 1
000002BF 00 00              		.dw 0
000002C0 00 00              		.dw 0
000002C1 00 00              		.dw 0
000002C2 00 00              		.dw 0
000002C3 00 00              		.dw 0
000002C4 01 00              		.dw 1
000002C5 02 00              		.dw 2
000002C6 03 00              		.dw 3
000002C7 04 00              		.dw 4
000002C8 06 00              		.dw 6
000002C9 08 00              		.dw 8
000002CA 0A 00              		.dw 10
000002CB 0C 00              		.dw 12
000002CC 0E 00              		.dw 14
000002CD 11 00              		.dw 17
000002CE 14 00              		.dw 20
000002CF 17 00              		.dw 23
000002D0 1B 00              		.dw 27
000002D1 1E 00              		.dw 30
000002D2 22 00              		.dw 34
000002D3 26 00              		.dw 38
000002D4 2B 00              		.dw 43
000002D5 2F 00              		.dw 47
000002D6 34 00              		.dw 52
000002D7 39 00              		.dw 57
000002D8 3E 00              		.dw 62
000002D9 43 00              		.dw 67
000002DA 49 00              		.dw 73
000002DB 4F 00              		.dw 79
000002DC 55 00              		.dw 85
000002DD 5B 00              		.dw 91
000002DE 61 00              		.dw 97
000002DF 68 00              		.dw 104
000002E0 6E 00              		.dw 110
000002E1 75 00              		.dw 117
000002E2 7C 00              		.dw 124
000002E3 83 00              		.dw 131
000002E4 8B 00              		.dw 139
000002E5 92 00              		.dw 146
000002E6 9A 00              		.dw 154
000002E7 A2 00              		.dw 162
000002E8 AA 00              		.dw 170
000002E9 B2 00              		.dw 178
000002EA BA 00              		.dw 186
000002EB C2 00              		.dw 194
000002EC CB 00              		.dw 203
000002ED D3 00              		.dw 211
000002EE DC 00              		.dw 220
000002EF E5 00              		.dw 229
000002F0 EE 00              		.dw 238
000002F1 F7 00              		.dw 247
000002F2 00 01              		.dw 256
000002F3 09 01              		.dw 265
000002F4 13 01              		.dw 275
000002F5 1C 01              		.dw 284
000002F6 25 01              		.dw 293
000002F7 2F 01              		.dw 303
000002F8 38 01              		.dw 312
000002F9 42 01              		.dw 322
000002FA 4C 01              		.dw 332
000002FB 55 01              		.dw 341
000002FC 5F 01              		.dw 351
000002FD 69 01              		.dw 361
000002FE 73 01              		.dw 371
000002FF 7C 01              		.dw 380
00000300 86 01              		.dw 390
00001D79                    	.debug
00001D79 2E 00 73 00        		.dw '.stabs "SINE:G22=ar1;0;255;4",32,0,0,',0,0,offset _SINE,seg _SINE,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 49 00
         4E 00 45 00
         3A 00 47 00
         32 00 32 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 32 00
         35 00 35 00
         3B 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 02
         00 00 0D 00
         0A 00      
00008574                    	.CODE
00001DA4                    	.debug
00001DA4 2E 00 73 00        		.dw '.stabs "mem_table:G21",32,0,0,',0,0,offset _mem_table,seg _mem_table,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 65 00
         6D 00 5F 00
         74 00 61 00
         62 00 6C 00
         65 00 3A 00
         47 00 32 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         05 03 00 00
         0D 00 0A 00
00008574                    	.CODE
00008574                    	.code
00001DC8                    	.debug
00001DC8 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         4E 05 00 00
         0D 00 0A 00
00008574                    	.CODE
                            	.public _main
                            	_main:	.proc
00001DE6                    	.debug
00001DE6 2E 00 73 00        		.dw '.stabs "G:/yangsong/key/key/main.c",0x84,0,0,',0,0,offset Ltext4, seg Ltext4,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         47 00 3A 00
         2F 00 79 00
         61 00 6E 00
         67 00 73 00
         6F 00 6E 00
         67 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6B 00 65 00
         79 00 2F 00
         6D 00 61 00
         69 00 6E 00
         2E 00 63 00
         22 00 2C 00
         30 00 78 00
         38 00 34 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 4E 05
         00 00 0D 00
         0A 00      
00008574                    	.code
00008574                    	.code
                            	Ltext4:
00001E19                    	.debug
00001E19 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
00001E2C 00 00 00 00        		.dd LM207-_main
00001E2E 0D 00 0A 00        		.dw 0x0d,0x0a
00008574                    	.code
                            	LM207:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008574 88 DA              		push bp to [sp]
00008575 41 20              		sp-=1
00008576 08 0B 01 00        		bp=sp+1
                            	
00008578 0D 03 04 00        		R1=BP+4
0000857A C5 D2              		[BP]=R1	// QImode move
00001E30                    	.debug
00001E30 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
00001E43 07 00 00 00        		.dd LM208-_main
00001E45 0D 00 0A 00        		.dw 0x0d,0x0a
0000857B                    	.code
                            	LM208:
0000857B 40 92              		R1=0	// QImode move
0000857C 19 D3 01 03        		[_mode]=R1	// QImode move
00001E47                    	.debug
00001E47 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
00001E5A 0A 00 00 00        		.dd LM209-_main
00001E5C 0D 00 0A 00        		.dw 0x0d,0x0a
0000857E                    	.code
                            	LM209:
0000857E 09 93 64 00        		R1=100	// QImode move
00008580 19 D3 02 03        		[_freq]=R1	// QImode move
00001E5E                    	.debug
00001E5E 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00001E71 0E 00 00 00        		.dd LM210-_main
00001E73 0D 00 0A 00        		.dw 0x0d,0x0a
00008582                    	.code
                            	LM210:
00008582 54 92              		R1=20	// QImode move
00008583 19 D3 03 03        		[_vol]=R1	// QImode move
00001E75                    	.debug
00001E75 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00001E88 11 00 00 00        		.dd LM211-_main
00001E8A 0D 00 0A 00        		.dw 0x0d,0x0a
00008585                    	.code
                            	LM211:
00008585 40 F0 C9 82        		call _init7219	// call without return value
00001E8C                    	.debug
00001E8C 2E 00 73 00        		.dw '.stabn 0x44,0,82,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 32 00
         2C 00 00 00
         00 00      
00001E9F 13 00 00 00        		.dd LM212-_main
00001EA1 0D 00 0A 00        		.dw 0x0d,0x0a
00008587                    	.code
                            	LM212:
00008587 40 F0 4C 81        		call _initkey	// call without return value
00001EA3                    	.debug
00001EA3 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
00001EB6 15 00 00 00        		.dd LM213-_main
00001EB8 0D 00 0A 00        		.dw 0x0d,0x0a
00008589                    	.code
                            	LM213:
00008589 40 F0 1F 84        		call _initwave	// call without return value
00001EBA                    	.debug
00001EBA 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
00001ECD 17 00 00 00        		.dd LM214-_main
00001ECF 0D 00 0A 00        		.dw 0x0d,0x0a
0000858B                    	.code
                            	LM214:
0000858B 09 93 80 00        		R1=128	// QImode move
0000858D 19 D3 13 70        		[28691]=R1	// QImode move
00001ED1                    	.debug
00001ED1 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
00001EE4 1B 00 00 00        		.dd LM215-_main
00001EE6 0D 00 0A 00        		.dw 0x0d,0x0a
0000858F                    	.code
                            	LM215:
0000858F 11 93 03 03        		R1=[_vol]	// QImode move
00008591 C8 D2              		[SP--]=R1	// QImode move
00008592 11 93 02 03        		R1=[_freq]	// QImode move
00008594 C8 D2              		[SP--]=R1	// QImode move
00008595 11 93 01 03        		R1=[_mode]	// QImode move
00008597 C8 D2              		[SP--]=R1	// QImode move
00008598 40 F0 09 83        		call _show	// call without return value
0000859A 43 00              		SP = SP + 3	//SP
00001EE8                    	.debug
00001EE8 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
00001EFB 27 00 00 00        		.dd LM216-_main
00001EFD 0D 00 0A 00        		.dw 0x0d,0x0a
0000859B                    	.code
                            	LM216:
                            	L141:
0000859B 0F 9F 9F 85        		pc=L143	// Indirect jump
0000859D 0F 9F A8 85        		pc=L142	// Indirect jump
                            	L143:
00001EFF                    	.debug
00001EFF 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
00001F12 2B 00 00 00        		.dd LM217-_main
00001F14 0D 00 0A 00        		.dw 0x0d,0x0a
0000859F                    	.code
                            	LM217:
0000859F 40 F0 65 81        		call _KeyScan	// call without return value
00001F16                    	.debug
00001F16 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
00001F29 2D 00 00 00        		.dd LM218-_main
00001F2B 0D 00 0A 00        		.dw 0x0d,0x0a
000085A1                    	.code
                            	LM218:
000085A1 40 F0 8F 84        		call _wave	// call without return value
00001F2D                    	.debug
00001F2D 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
00001F40 2F 00 00 00        		.dd LM219-_main
00001F42 0D 00 0A 00        		.dw 0x0d,0x0a
000085A3                    	.code
                            	LM219:
000085A3 41 92              		R1=1	// QImode move
000085A4 19 D3 12 70        		[28690]=R1	// QImode move
00001F44                    	.debug
00001F44 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
00001F57 32 00 00 00        		.dd LM220-_main
00001F59 0D 00 0A 00        		.dw 0x0d,0x0a
000085A6                    	.code
                            	LM220:
000085A6 0F 9F 9B 85        		pc=L141	// Indirect jump
                            	L142:
00001F5B                    	.debug
00001F5B 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00001F6E 34 00 00 00        		.dd LM221-_main
00001F70 0D 00 0A 00        		.dw 0x0d,0x0a
000085A8                    	.code
                            	LM221:
00001F72                    	.debug
00001F72 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00001F85 34 00 00 00        		.dd LM222-_main
00001F87 0D 00 0A 00        		.dw 0x0d,0x0a
000085A8                    	.code
                            	LM222:
                            	L140:
                            	
000085A8 41 00              		sp+=1
000085A9 88 98              		pop bp from [sp]
000085AA 90 9A              		retf
                            		.endp	// end of main
                            	
00001F89                    	.debug
00001F89 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001F92 37 00 00 00        		.dd LME12-_main
00001F94 0D 00 0A 00        		.dw 0x0d,0x0a
000085AB                    	.code
                            	LME12:
00000301                    	.iram
                            	.public _mode
                            	_mode:
00000301 00 00              		.dw 0
00000302                    	.iram
                            	.public _freq
                            	_freq:
00000302 00 00              		.dw 0
00000303                    	.iram
                            	.public _vol
                            	_vol:
00000303 00 00              		.dw 0
00000304                    	.iram
                            	.public _mem_freq
                            	_mem_freq:
00000304 00 00              		.dw 0
00000305                    	.iram
                            	.public _mem_vol
                            	_mem_vol:
00000305 00 00              		.dw 0
00000306                    	.iram
                            	.public _mem_table
                            	_mem_table:
00000306 00 00 00 00        		.dw 256 dup(0)
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
         00 00 00 00
00000406                    	.iram
                            	.public _index
                            	_index:
00000406 00 00              		.dw 0
                            	.external __divu1
                            	.external __modi1
                            	.external __divi1
                            		.end
0 error(s), 0 warning(s).

