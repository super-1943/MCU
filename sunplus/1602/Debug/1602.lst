Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\PROGRA~1\SunPlus\UNSPID~1.0\cc1.exe C:\DOCUME~1\a\LOCALS~1\Temp\ccE5aaaa.i -fkeep-inline-functions -quiet -dumpbase 1602.c -mglobal-var-iram -gstabs -Wall -o .\Debug/1602.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "C:/Documents and Settings/a/My Documents/1602/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 3A 00
         2F 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         20 00 61 00
         6E 00 64 00
         20 00 53 00
         65 00 74 00
         74 00 69 00
         6E 00 67 00
         73 00 2F 00
         61 00 2F 00
         4D 00 79 00
         20 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         2F 00 31 00
         36 00 30 00
         32 00 2F 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008026                    	.code
00000047                    	.debug
00000047 2E 00 73 00        		.dw '.stabs "C:/Documents and Settings/a/My Documents/1602/1602.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         43 00 3A 00
         2F 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         20 00 61 00
         6E 00 64 00
         20 00 53 00
         65 00 74 00
         74 00 69 00
         6E 00 67 00
         73 00 2F 00
         61 00 2F 00
         4D 00 79 00
         20 00 44 00
         6F 00 63 00
         75 00 6D 00
         65 00 6E 00
         74 00 73 00
         2F 00 31 00
         36 00 30 00
         32 00 2F 00
         31 00 36 00
         30 00 32 00
         2E 00 63 00
         22 00 2C 00
         30 00 78 00
         36 00 34 00
         2C 00 30 00
         2C 00 33 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008026                    	.code
00008026                    	.code
                            	Ltext0:
00000094                    	.debug
00000094 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000000C0                    	.debug
000000C0 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000000E6                    	.debug
000000E6 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000121                    	.debug
00000121 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000151                    	.debug
00000151 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000018B                    	.debug
0000018B 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000001CB                    	.debug
000001CB 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
0000020A                    	.debug
0000020A 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
0000023C                    	.debug
0000023C 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000272                    	.debug
00000272 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000002A8                    	.debug
000002A8 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000002DB                    	.debug
000002DB 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000301                    	.debug
00000301 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000328                    	.debug
00000328 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00000354                    	.debug
00000354 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000395                    	.debug
00000395 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
000003C4                    	.debug
000003C4 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
000003F4                    	.debug
000003F4 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008026                    	.CODE
00000429                    	.debug
00000429 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008026                    	.CODE
00008026                    	.code
00000449                    	.debug
00000449 2E 00 73 00        		.dw '.stabs "delay:F19",36,0,0,',0,0,offset _delay,seg _delay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 65 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00008026                    	.CODE
                            	.public _delay
                            	_delay:	.proc
00000469                    	.debug
00000469 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
0000047C 00 00 00 00        		.dd LM1-_delay
0000047E 0D 00 0A 00        		.dw 0x0d,0x0a
00008026                    	.code
                            	LM1:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
00008026 88 DA              		push bp to [sp]
00008027 43 20              		sp-=3
00008028 08 0B 01 00        		bp=sp+1
                            	
0000802A 0D 03 06 00        		R1=BP+6
00000480                    	.debug
00000480 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
00000493 06 00 00 00        		.dd LM2-_delay
00000495 0D 00 0A 00        		.dw 0x0d,0x0a
0000802C                    	.code
                            	LM2:
                            	LBB2:
00000497                    	.debug
00000497 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
000004AA 06 00 00 00        		.dd LM3-_delay
000004AC 0D 00 0A 00        		.dw 0x0d,0x0a
0000802C                    	.code
                            	LM3:
0000802C 0A 95 C8 00        		R2=200	// QImode move
0000802E C5 D4              		[BP]=R2	// QImode move
                            	L3:
0000802F C5 94              		R2=[BP]	// QImode move
00008030 40 44              		CMP R2,0	// QImode test
00008031 04 4E 01 EE        		NSJNZ L6	//QImode NE
         00 EE      
00008034 0F 9F 62 80        		pc=L4	// Indirect jump
                            	L6:
000004AE                    	.debug
000004AE 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
000004C1 10 00 00 00        		.dd LM4-_delay
000004C3 0D 00 0A 00        		.dw 0x0d,0x0a
00008036                    	.code
                            	LM4:
00008036 05 95              		R2=BP	// QImode move
00008037 0D 07 01 00        		R3=BP+1
00008039 4A 94              		R2=10	// QImode move
0000803A 03 99              		R4=R3	// QImode move
0000803B C4 D4              		[R4]=R2	// QImode move
                            	L7:
0000803C 05 95              		R2=BP	// QImode move
0000803D 0D 07 01 00        		R3=BP+1
0000803F 03 99              		R4=R3	// QImode move
00008040 C4 94              		R2=[R4]	// QImode move
00008041 40 44              		CMP R2,0	// QImode test
00008042 04 4E 01 EE        		NSJNZ L10	//QImode NE
         00 EE      
00008045 0F 9F 5C 80        		pc=L5	// Indirect jump
                            	L10:
000004C5                    	.debug
000004C5 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
000004D8 21 00 00 00        		.dd LM5-_delay
000004DA 0D 00 0A 00        		.dw 0x0d,0x0a
00008047                    	.code
                            	LM5:
00008047 41 94              		R2=1	// QImode move
00008048 1A D5 12 70        		[28690]=R2	// QImode move
000004DC                    	.debug
000004DC 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
000004EF 24 00 00 00        		.dd LM6-_delay
000004F1 0D 00 0A 00        		.dw 0x0d,0x0a
0000804A                    	.code
                            	LM6:
                            	L9:
0000804A 05 95              		R2=BP	// QImode move
0000804B 0D 07 01 00        		R3=BP+1
0000804D 05 99              		R4=BP	// QImode move
0000804E 0D 05 01 00        		R2=BP+1
00008050 05 97              		R3=BP	// QImode move
00008051 0D 07 01 00        		R3=BP+1
00008053 02 D6              		[bp+2]=R3	// QImode move
00008054 02 98              		R4=[bp+2]	// QImode move
00008055 C4 96              		R3=[R4]	// QImode move
00008056 0B 09 FF FF        		R4=R3+(-1)
00008058 02 97              		R3=R2	// QImode move
00008059 C3 D8              		[R3]=R4	// QImode move
0000805A 0F 9F 3C 80        		pc=L7	// Indirect jump
                            	L8:
000004F3                    	.debug
000004F3 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
00000506 36 00 00 00        		.dd LM7-_delay
00000508 0D 00 0A 00        		.dw 0x0d,0x0a
0000805C                    	.code
                            	LM7:
                            	L5:
0000805C C5 94              		R2=[BP]	// QImode move
0000805D 0A 07 FF FF        		R3=R2+(-1)
0000805F C5 D6              		[BP]=R3	// QImode move
00008060 0F 9F 2F 80        		pc=L3	// Indirect jump
                            	L4:
0000050A                    	.debug
0000050A 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
0000051D 3C 00 00 00        		.dd LM8-_delay
0000051F 0D 00 0A 00        		.dw 0x0d,0x0a
00008062                    	.code
                            	LM8:
                            	LBE2:
00000521                    	.debug
00000521 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
00000534 3C 00 00 00        		.dd LM9-_delay
00000536 0D 00 0A 00        		.dw 0x0d,0x0a
00008062                    	.code
                            	LM9:
                            	L2:
                            	
00008062 43 00              		sp+=3
00008063 88 98              		pop bp from [sp]
00008064 90 9A              		retf
                            		.endp	// end of delay
                            	
00000538                    	.debug
00000538 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000054A 06 00 00 00        		.dd LBB2-_delay
0000054C 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
0000054E                    	.debug
0000054E 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00008065                    	.CODE
00000566                    	.debug
00000566 2E 00 73 00        		.dw '.stabs "j:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6A 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
00008065                    	.CODE
0000057E                    	.debug
0000057E 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000590 3C 00 00 00        		.dd LBE2-_delay
00000592 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
00000594                    	.debug
00000594 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000059D 3F 00 00 00        		.dd LME1-_delay
0000059F 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
                            	LME1:
00008065                    	.code
000005A1                    	.debug
000005A1 2E 00 73 00        		.dw '.stabs "initport:F19",36,0,0,',0,0,offset _initport,seg _initport,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         69 00 74 00
         70 00 6F 00
         72 00 74 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 3F 00
         00 00 0D 00
         0A 00      
00008065                    	.CODE
                            	.public _initport
                            	_initport:	.proc
000005C4                    	.debug
000005C4 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
000005D7 00 00 00 00        		.dd LM10-_initport
000005D9 0D 00 0A 00        		.dw 0x0d,0x0a
00008065                    	.code
                            	LM10:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
00008065 88 DA              		push bp to [sp]
00008066 08 0B 01 00        		bp=sp+1
                            	
00008068 0D 03 03 00        		R1=BP+3
000005DB                    	.debug
000005DB 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
000005EE 05 00 00 00        		.dd LM11-_initport
000005F0 0D 00 0A 00        		.dw 0x0d,0x0a
0000806A                    	.code
                            	LM11:
0000806A 12 95 02 70        		R2=[28674]	// QImode move
0000806C 0A A7 F0 FF        		R3=R2|(-16)
0000806E 1B D7 02 70        		[28674]=R3	// QImode move
000005F2                    	.debug
000005F2 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
00000605 0B 00 00 00        		.dd LM12-_initport
00000607 0D 00 0A 00        		.dw 0x0d,0x0a
00008070                    	.code
                            	LM12:
00008070 12 95 03 70        		R2=[28675]	// QImode move
00008072 0A A7 F0 FF        		R3=R2|(-16)
00008074 1B D7 03 70        		[28675]=R3	// QImode move
00000609                    	.debug
00000609 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
0000061C 11 00 00 00        		.dd LM13-_initport
0000061E 0D 00 0A 00        		.dw 0x0d,0x0a
00008076                    	.code
                            	LM13:
00008076 12 95 00 70        		R2=[28672]	// QImode move
00008078 0A B7 0F 00        		R3=R2&15
0000807A 1B D7 00 70        		[28672]=R3	// QImode move
00000620                    	.debug
00000620 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
00000633 17 00 00 00        		.dd LM14-_initport
00000635 0D 00 0A 00        		.dw 0x0d,0x0a
0000807C                    	.code
                            	LM14:
00000637                    	.debug
00000637 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
0000064A 17 00 00 00        		.dd LM15-_initport
0000064C 0D 00 0A 00        		.dw 0x0d,0x0a
0000807C                    	.code
                            	LM15:
                            	L13:
                            	
0000807C 88 98              		pop bp from [sp]
0000807D 90 9A              		retf
                            		.endp	// end of initport
                            	
0000064E                    	.debug
0000064E 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000657 19 00 00 00        		.dd LME2-_initport
00000659 0D 00 0A 00        		.dw 0x0d,0x0a
0000807E                    	.code
                            	LME2:
0000807E                    	.code
0000065B                    	.debug
0000065B 2E 00 73 00        		.dw '.stabs "init1602:F19",36,0,0,',0,0,offset _init1602,seg _init1602,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         69 00 74 00
         31 00 36 00
         30 00 32 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 58 00
         00 00 0D 00
         0A 00      
0000807E                    	.CODE
                            	.public _init1602
                            	_init1602:	.proc
0000067E                    	.debug
0000067E 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
00000691 00 00 00 00        		.dd LM16-_init1602
00000693 0D 00 0A 00        		.dw 0x0d,0x0a
0000807E                    	.code
                            	LM16:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000807E 88 DA              		push bp to [sp]
0000807F 41 20              		sp-=1
00008080 08 0B 01 00        		bp=sp+1
                            	
00008082 0D 03 04 00        		R1=BP+4
00008084 C5 D2              		[BP]=R1	// QImode move
00000695                    	.debug
00000695 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
000006A8 07 00 00 00        		.dd LM17-_init1602
000006AA 0D 00 0A 00        		.dw 0x0d,0x0a
00008085                    	.code
                            	LM17:
00008085 11 93 00 70        		R1=[28672]	// QImode move
00008087 09 B5 FF 00        		R2=R1&255
00008089 1A D5 00 70        		[28672]=R2	// QImode move
000006AC                    	.debug
000006AC 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
000006BF 0D 00 00 00        		.dd LM18-_init1602
000006C1 0D 00 0A 00        		.dw 0x0d,0x0a
0000808B                    	.code
                            	LM18:
0000808B 40 92              		R1=0	// QImode move
0000808C C8 D2              		[SP--]=R1	// QImode move
0000808D 78 92              		R1=56	// QImode move
0000808E C8 D2              		[SP--]=R1	// QImode move
0000808F 40 F0 EC 80        		call _writecommand	// call without return value
00008091 42 00              		SP = SP + 2	//SP
000006C3                    	.debug
000006C3 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
000006D6 14 00 00 00        		.dd LM19-_init1602
000006D8 0D 00 0A 00        		.dw 0x0d,0x0a
00008092                    	.code
                            	LM19:
00008092 40 F0 26 80        		call _delay	// call without return value
000006DA                    	.debug
000006DA 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
000006ED 16 00 00 00        		.dd LM20-_init1602
000006EF 0D 00 0A 00        		.dw 0x0d,0x0a
00008094                    	.code
                            	LM20:
00008094 40 92              		R1=0	// QImode move
00008095 C8 D2              		[SP--]=R1	// QImode move
00008096 78 92              		R1=56	// QImode move
00008097 C8 D2              		[SP--]=R1	// QImode move
00008098 40 F0 EC 80        		call _writecommand	// call without return value
0000809A 42 00              		SP = SP + 2	//SP
000006F1                    	.debug
000006F1 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
00000704 1D 00 00 00        		.dd LM21-_init1602
00000706 0D 00 0A 00        		.dw 0x0d,0x0a
0000809B                    	.code
                            	LM21:
0000809B 40 F0 26 80        		call _delay	// call without return value
00000708                    	.debug
00000708 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
0000071B 1F 00 00 00        		.dd LM22-_init1602
0000071D 0D 00 0A 00        		.dw 0x0d,0x0a
0000809D                    	.code
                            	LM22:
0000809D 40 92              		R1=0	// QImode move
0000809E C8 D2              		[SP--]=R1	// QImode move
0000809F 78 92              		R1=56	// QImode move
000080A0 C8 D2              		[SP--]=R1	// QImode move
000080A1 40 F0 EC 80        		call _writecommand	// call without return value
000080A3 42 00              		SP = SP + 2	//SP
0000071F                    	.debug
0000071F 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
00000732 26 00 00 00        		.dd LM23-_init1602
00000734 0D 00 0A 00        		.dw 0x0d,0x0a
000080A4                    	.code
                            	LM23:
000080A4 40 F0 26 80        		call _delay	// call without return value
00000736                    	.debug
00000736 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
00000749 28 00 00 00        		.dd LM24-_init1602
0000074B 0D 00 0A 00        		.dw 0x0d,0x0a
000080A6                    	.code
                            	LM24:
000080A6 41 92              		R1=1	// QImode move
000080A7 C8 D2              		[SP--]=R1	// QImode move
000080A8 78 92              		R1=56	// QImode move
000080A9 C8 D2              		[SP--]=R1	// QImode move
000080AA 40 F0 EC 80        		call _writecommand	// call without return value
000080AC 42 00              		SP = SP + 2	//SP
0000074D                    	.debug
0000074D 2E 00 73 00        		.dw '.stabn 0x44,0,60,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 30 00
         2C 00 00 00
         00 00      
00000760 2F 00 00 00        		.dd LM25-_init1602
00000762 0D 00 0A 00        		.dw 0x0d,0x0a
000080AD                    	.code
                            	LM25:
000080AD 41 92              		R1=1	// QImode move
000080AE C8 D2              		[SP--]=R1	// QImode move
000080AF 48 92              		R1=8	// QImode move
000080B0 C8 D2              		[SP--]=R1	// QImode move
000080B1 40 F0 EC 80        		call _writecommand	// call without return value
000080B3 42 00              		SP = SP + 2	//SP
00000764                    	.debug
00000764 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
00000777 36 00 00 00        		.dd LM26-_init1602
00000779 0D 00 0A 00        		.dw 0x0d,0x0a
000080B4                    	.code
                            	LM26:
000080B4 41 92              		R1=1	// QImode move
000080B5 C8 D2              		[SP--]=R1	// QImode move
000080B6 41 92              		R1=1	// QImode move
000080B7 C8 D2              		[SP--]=R1	// QImode move
000080B8 40 F0 EC 80        		call _writecommand	// call without return value
000080BA 42 00              		SP = SP + 2	//SP
0000077B                    	.debug
0000077B 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
0000078E 3D 00 00 00        		.dd LM27-_init1602
00000790 0D 00 0A 00        		.dw 0x0d,0x0a
000080BB                    	.code
                            	LM27:
000080BB 41 92              		R1=1	// QImode move
000080BC C8 D2              		[SP--]=R1	// QImode move
000080BD 46 92              		R1=6	// QImode move
000080BE C8 D2              		[SP--]=R1	// QImode move
000080BF 40 F0 EC 80        		call _writecommand	// call without return value
000080C1 42 00              		SP = SP + 2	//SP
00000792                    	.debug
00000792 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
000007A5 44 00 00 00        		.dd LM28-_init1602
000007A7 0D 00 0A 00        		.dw 0x0d,0x0a
000080C2                    	.code
                            	LM28:
000080C2 41 92              		R1=1	// QImode move
000080C3 C8 D2              		[SP--]=R1	// QImode move
000080C4 4C 92              		R1=12	// QImode move
000080C5 C8 D2              		[SP--]=R1	// QImode move
000080C6 40 F0 EC 80        		call _writecommand	// call without return value
000080C8 42 00              		SP = SP + 2	//SP
000007A9                    	.debug
000007A9 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
000007BC 4B 00 00 00        		.dd LM29-_init1602
000007BE 0D 00 0A 00        		.dw 0x0d,0x0a
000080C9                    	.code
                            	LM29:
000007C0                    	.debug
000007C0 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
000007D3 4B 00 00 00        		.dd LM30-_init1602
000007D5 0D 00 0A 00        		.dw 0x0d,0x0a
000080C9                    	.code
                            	LM30:
                            	L14:
                            	
000080C9 41 00              		sp+=1
000080CA 88 98              		pop bp from [sp]
000080CB 90 9A              		retf
                            		.endp	// end of init1602
                            	
000007D7                    	.debug
000007D7 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000007E0 4E 00 00 00        		.dd LME3-_init1602
000007E2 0D 00 0A 00        		.dw 0x0d,0x0a
000080CC                    	.code
                            	LME3:
000080CC                    	.code
000007E4                    	.debug
000007E4 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         A6 00 00 00
         0D 00 0A 00
000080CC                    	.CODE
                            	.public _main
                            	_main:	.proc
00000802                    	.debug
00000802 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
00000815 00 00 00 00        		.dd LM31-_main
00000817 0D 00 0A 00        		.dw 0x0d,0x0a
000080CC                    	.code
                            	LM31:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000080CC 88 DA              		push bp to [sp]
000080CD 41 20              		sp-=1
000080CE 08 0B 01 00        		bp=sp+1
                            	
000080D0 0D 03 04 00        		R1=BP+4
000080D2 C5 D2              		[BP]=R1	// QImode move
00000819                    	.debug
00000819 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
0000082C 07 00 00 00        		.dd LM32-_main
0000082E 0D 00 0A 00        		.dw 0x0d,0x0a
000080D3                    	.code
                            	LM32:
000080D3 40 F0 65 80        		call _initport	// call without return value
00000830                    	.debug
00000830 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00000843 09 00 00 00        		.dd LM33-_main
00000845 0D 00 0A 00        		.dw 0x0d,0x0a
000080D5                    	.code
                            	LM33:
000080D5 40 F0 7E 80        		call _init1602	// call without return value
00000847                    	.debug
00000847 2E 00 73 00        		.dw '.stabn 0x44,0,73,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 33 00
         2C 00 00 00
         00 00      
0000085A 0B 00 00 00        		.dd LM34-_main
0000085C 0D 00 0A 00        		.dw 0x0d,0x0a
000080D7                    	.code
                            	LM34:
                            	L16:
000080D7 0F 9F DB 80        		pc=L18	// Indirect jump
000080D9 0F 9F E9 80        		pc=L17	// Indirect jump
                            	L18:
0000085E                    	.debug
0000085E 2E 00 73 00        		.dw '.stabn 0x44,0,75,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 35 00
         2C 00 00 00
         00 00      
00000871 0F 00 00 00        		.dd LM35-_main
00000873 0D 00 0A 00        		.dw 0x0d,0x0a
000080DB                    	.code
                            	LM35:
000080DB 70 92              		R1=48	// QImode move
000080DC C8 D2              		[SP--]=R1	// QImode move
000080DD 41 92              		R1=1	// QImode move
000080DE C8 D2              		[SP--]=R1	// QImode move
000080DF 41 92              		R1=1	// QImode move
000080E0 C8 D2              		[SP--]=R1	// QImode move
000080E1 40 F0 FD 81        		call _displaychar	// call without return value
000080E3 43 00              		SP = SP + 3	//SP
00000875                    	.debug
00000875 2E 00 73 00        		.dw '.stabn 0x44,0,76,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 36 00
         2C 00 00 00
         00 00      
00000888 18 00 00 00        		.dd LM36-_main
0000088A 0D 00 0A 00        		.dw 0x0d,0x0a
000080E4                    	.code
                            	LM36:
000080E4 41 92              		R1=1	// QImode move
000080E5 19 D3 12 70        		[28690]=R1	// QImode move
0000088C                    	.debug
0000088C 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
0000089F 1B 00 00 00        		.dd LM37-_main
000008A1 0D 00 0A 00        		.dw 0x0d,0x0a
000080E7                    	.code
                            	LM37:
000080E7 0F 9F D7 80        		pc=L16	// Indirect jump
                            	L17:
000008A3                    	.debug
000008A3 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
000008B6 1D 00 00 00        		.dd LM38-_main
000008B8 0D 00 0A 00        		.dw 0x0d,0x0a
000080E9                    	.code
                            	LM38:
000008BA                    	.debug
000008BA 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
000008CD 1D 00 00 00        		.dd LM39-_main
000008CF 0D 00 0A 00        		.dw 0x0d,0x0a
000080E9                    	.code
                            	LM39:
                            	L15:
                            	
000080E9 41 00              		sp+=1
000080EA 88 98              		pop bp from [sp]
000080EB 90 9A              		retf
                            		.endp	// end of main
                            	
000008D1                    	.debug
000008D1 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000008DA 20 00 00 00        		.dd LME4-_main
000008DC 0D 00 0A 00        		.dw 0x0d,0x0a
000080EC                    	.code
                            	LME4:
000080EC                    	.code
000008DE                    	.debug
000008DE 2E 00 73 00        		.dw '.stabs "writecommand:F19",36,0,0,',0,0,offset _writecommand,seg _writecommand,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 63 00
         6F 00 6D 00
         6D 00 61 00
         6E 00 64 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 C6 00
         00 00 0D 00
         0A 00      
000080EC                    	.CODE
                            	.public _writecommand
                            	_writecommand:	.proc
00000905                    	.debug
00000905 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00000918 00 00 00 00        		.dd LM40-_writecommand
0000091A 0D 00 0A 00        		.dw 0x0d,0x0a
000080EC                    	.code
                            	LM40:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000080EC 88 DA              		push bp to [sp]
000080ED 41 20              		sp-=1
000080EE 08 0B 01 00        		bp=sp+1
                            	
000080F0 0D 03 04 00        		R1=BP+4
000080F2 C5 D2              		[BP]=R1	// QImode move
0000091C                    	.debug
0000091C 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
0000092F 07 00 00 00        		.dd LM41-_writecommand
00000931 0D 00 0A 00        		.dw 0x0d,0x0a
000080F3                    	.code
                            	LM41:
000080F3 C5 92              		R1=[BP]	// QImode move
000080F4 C5 96              		R3=[BP]	// QImode move
000080F5 0B 05 01 00        		R2=R3+1
000080F7 02 97              		R3=R2	// QImode move
000080F8 C3 92              		R1=[R3]	// QImode move
000080F9 40 42              		CMP R1,0	// QImode test
000080FA 04 5E 01 EE        		NSJZ L20	//QImode EQ
         00 EE      
00000933                    	.debug
00000933 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
00000946 11 00 00 00        		.dd LM42-_writecommand
00000948 0D 00 0A 00        		.dw 0x0d,0x0a
000080FD                    	.code
                            	LM42:
000080FD 40 F0 84 81        		call _waitbusy	// call with return value
                            	L20:
0000094A                    	.debug
0000094A 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
0000095D 13 00 00 00        		.dd LM43-_writecommand
0000095F 0D 00 0A 00        		.dw 0x0d,0x0a
000080FF                    	.code
                            	LM43:
000080FF 11 93 00 70        		R1=[28672]	// QImode move
00008101 09 B5 7F FF        		R2=R1&(-129)
00008103 1A D5 00 70        		[28672]=R2	// QImode move
00000961                    	.debug
00000961 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
00000974 19 00 00 00        		.dd LM44-_writecommand
00000976 0D 00 0A 00        		.dw 0x0d,0x0a
00008105                    	.code
                            	LM44:
00008105 11 93 00 70        		R1=[28672]	// QImode move
00008107 09 B5 BF FF        		R2=R1&(-65)
00008109 1A D5 00 70        		[28672]=R2	// QImode move
00000978                    	.debug
00000978 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
0000098B 1F 00 00 00        		.dd LM45-_writecommand
0000098D 0D 00 0A 00        		.dw 0x0d,0x0a
0000810B                    	.code
                            	LM45:
0000810B 11 93 00 70        		R1=[28672]	// QImode move
0000810D 09 B5 0F 00        		R2=R1&15
0000810F 1A D5 00 70        		[28672]=R2	// QImode move
0000098F                    	.debug
0000098F 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
000009A2 25 00 00 00        		.dd LM46-_writecommand
000009A4 0D 00 0A 00        		.dw 0x0d,0x0a
00008111                    	.code
                            	LM46:
00008111 C5 92              		R1=[BP]	// QImode move
00008112 C1 94              		R2=[R1]	// QImode move
00008113 5A 93              		R1=R2 lsl 4
00008114 59 93              		R1=R1 lsl 4
00008115 12 95 00 70        		R2=[28672]	// QImode move
00008117 02 97              		R3=R2	// QImode move
00008118 01 A7              		R3|=R1
00008119 03 93              		R1=R3	// QImode move
0000811A 19 D3 00 70        		[28672]=R1	// QImode move
000009A6                    	.debug
000009A6 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
000009B9 30 00 00 00        		.dd LM47-_writecommand
000009BB 0D 00 0A 00        		.dw 0x0d,0x0a
0000811C                    	.code
                            	LM47:
0000811C 11 93 00 70        		R1=[28672]	// QImode move
0000811E 09 B5 DF FF        		R2=R1&(-33)
00008120 1A D5 00 70        		[28672]=R2	// QImode move
00008122 11 93 00 70        		R1=[28672]	// QImode move
00008124 09 B5 DF FF        		R2=R1&(-33)
00008126 1A D5 00 70        		[28672]=R2	// QImode move
00008128 11 93 00 70        		R1=[28672]	// QImode move
0000812A 09 B5 DF FF        		R2=R1&(-33)
0000812C 1A D5 00 70        		[28672]=R2	// QImode move
0000812E 11 93 00 70        		R1=[28672]	// QImode move
00008130 09 B5 DF FF        		R2=R1&(-33)
00008132 1A D5 00 70        		[28672]=R2	// QImode move
00008134 11 93 00 70        		R1=[28672]	// QImode move
00008136 09 A5 20 00        		R2=R1|32
00008138 1A D5 00 70        		[28672]=R2	// QImode move
000009BD                    	.debug
000009BD 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
000009D0 4E 00 00 00        		.dd LM48-_writecommand
000009D2 0D 00 0A 00        		.dw 0x0d,0x0a
0000813A                    	.code
                            	LM48:
000009D4                    	.debug
000009D4 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
000009E7 4E 00 00 00        		.dd LM49-_writecommand
000009E9 0D 00 0A 00        		.dw 0x0d,0x0a
0000813A                    	.code
                            	LM49:
                            	L19:
                            	
0000813A 41 00              		sp+=1
0000813B 88 98              		pop bp from [sp]
0000813C 90 9A              		retf
                            		.endp	// end of writecommand
                            	
000009EB                    	.debug
000009EB 2E 00 73 00        		.dw '.stabs "data:p2",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         74 00 61 00
         3A 00 70 00
         32 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000813D                    	.CODE
00000A07                    	.debug
00000A07 2E 00 73 00        		.dw '.stabs "busy:p2",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         62 00 75 00
         73 00 79 00
         3A 00 70 00
         32 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000813D                    	.CODE
00000A23                    	.debug
00000A23 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000A2C 51 00 00 00        		.dd LME5-_writecommand
00000A2E 0D 00 0A 00        		.dw 0x0d,0x0a
0000813D                    	.code
                            	LME5:
0000813D                    	.code
00000A30                    	.debug
00000A30 2E 00 73 00        		.dw '.stabs "writedata:F19",36,0,0,',0,0,offset _writedata,seg _writedata,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 72 00
         69 00 74 00
         65 00 64 00
         61 00 74 00
         61 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         17 01 00 00
         0D 00 0A 00
0000813D                    	.CODE
                            	.public _writedata
                            	_writedata:	.proc
00000A54                    	.debug
00000A54 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000A67 00 00 00 00        		.dd LM50-_writedata
00000A69 0D 00 0A 00        		.dw 0x0d,0x0a
0000813D                    	.code
                            	LM50:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000813D 88 DA              		push bp to [sp]
0000813E 41 20              		sp-=1
0000813F 08 0B 01 00        		bp=sp+1
                            	
00008141 0D 03 04 00        		R1=BP+4
00008143 C5 D2              		[BP]=R1	// QImode move
00000A6B                    	.debug
00000A6B 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
00000A7E 07 00 00 00        		.dd LM51-_writedata
00000A80 0D 00 0A 00        		.dw 0x0d,0x0a
00008144                    	.code
                            	LM51:
00008144 40 F0 84 81        		call _waitbusy	// call with return value
00000A82                    	.debug
00000A82 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000A95 09 00 00 00        		.dd LM52-_writedata
00000A97 0D 00 0A 00        		.dw 0x0d,0x0a
00008146                    	.code
                            	LM52:
00008146 11 93 00 70        		R1=[28672]	// QImode move
00008148 09 B5 0F 00        		R2=R1&15
0000814A 1A D5 00 70        		[28672]=R2	// QImode move
00000A99                    	.debug
00000A99 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
00000AAC 0F 00 00 00        		.dd LM53-_writedata
00000AAE 0D 00 0A 00        		.dw 0x0d,0x0a
0000814C                    	.code
                            	LM53:
0000814C C5 96              		R3=[BP]	// QImode move
0000814D C3 94              		R2=[R3]	// QImode move
0000814E 5A 93              		R1=R2 lsl 4
0000814F 59 93              		R1=R1 lsl 4
00008150 12 95 00 70        		R2=[28672]	// QImode move
00008152 02 97              		R3=R2	// QImode move
00008153 01 A7              		R3|=R1
00008154 03 93              		R1=R3	// QImode move
00008155 19 D3 00 70        		[28672]=R1	// QImode move
00000AB0                    	.debug
00000AB0 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000AC3 1A 00 00 00        		.dd LM54-_writedata
00000AC5 0D 00 0A 00        		.dw 0x0d,0x0a
00008157                    	.code
                            	LM54:
00008157 11 93 00 70        		R1=[28672]	// QImode move
00008159 09 B5 BF FF        		R2=R1&(-65)
0000815B 1A D5 00 70        		[28672]=R2	// QImode move
00000AC7                    	.debug
00000AC7 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000ADA 20 00 00 00        		.dd LM55-_writedata
00000ADC 0D 00 0A 00        		.dw 0x0d,0x0a
0000815D                    	.code
                            	LM55:
0000815D 11 93 00 70        		R1=[28672]	// QImode move
0000815F 09 B5 7F FF        		R2=R1&(-129)
00008161 1A D5 00 70        		[28672]=R2	// QImode move
00000ADE                    	.debug
00000ADE 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
00000AF1 26 00 00 00        		.dd LM56-_writedata
00000AF3 0D 00 0A 00        		.dw 0x0d,0x0a
00008163                    	.code
                            	LM56:
00008163 11 93 00 70        		R1=[28672]	// QImode move
00008165 09 B5 DF FF        		R2=R1&(-33)
00008167 1A D5 00 70        		[28672]=R2	// QImode move
00008169 11 93 00 70        		R1=[28672]	// QImode move
0000816B 09 B5 DF FF        		R2=R1&(-33)
0000816D 1A D5 00 70        		[28672]=R2	// QImode move
0000816F 11 93 00 70        		R1=[28672]	// QImode move
00008171 09 B5 DF FF        		R2=R1&(-33)
00008173 1A D5 00 70        		[28672]=R2	// QImode move
00008175 11 93 00 70        		R1=[28672]	// QImode move
00008177 09 B5 DF FF        		R2=R1&(-33)
00008179 1A D5 00 70        		[28672]=R2	// QImode move
0000817B 11 93 00 70        		R1=[28672]	// QImode move
0000817D 09 A5 20 00        		R2=R1|32
0000817F 1A D5 00 70        		[28672]=R2	// QImode move
00000AF5                    	.debug
00000AF5 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
00000B08 44 00 00 00        		.dd LM57-_writedata
00000B0A 0D 00 0A 00        		.dw 0x0d,0x0a
00008181                    	.code
                            	LM57:
00000B0C                    	.debug
00000B0C 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
00000B1F 44 00 00 00        		.dd LM58-_writedata
00000B21 0D 00 0A 00        		.dw 0x0d,0x0a
00008181                    	.code
                            	LM58:
                            	L22:
                            	
00008181 41 00              		sp+=1
00008182 88 98              		pop bp from [sp]
00008183 90 9A              		retf
                            		.endp	// end of writedata
                            	
00000B23                    	.debug
00000B23 2E 00 73 00        		.dw '.stabs "data:p2",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         74 00 61 00
         3A 00 70 00
         32 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
00008184                    	.CODE
00000B3F                    	.debug
00000B3F 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000B48 47 00 00 00        		.dd LME6-_writedata
00000B4A 0D 00 0A 00        		.dw 0x0d,0x0a
00008184                    	.code
                            	LME6:
00008184                    	.code
00000B4C                    	.debug
00000B4C 2E 00 73 00        		.dw '.stabs "waitbusy:F2",36,0,0,',0,0,offset _waitbusy,seg _waitbusy,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 61 00
         69 00 74 00
         62 00 75 00
         73 00 79 00
         3A 00 46 00
         32 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         5E 01 00 00
         0D 00 0A 00
00008184                    	.CODE
                            	.public _waitbusy
                            	_waitbusy:	.proc
00000B6E                    	.debug
00000B6E 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
00000B82 00 00 00 00        		.dd LM59-_waitbusy
00000B84 0D 00 0A 00        		.dw 0x0d,0x0a
00008184                    	.code
                            	LM59:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
00008184 88 DA              		push bp to [sp]
00008185 08 0B 01 00        		bp=sp+1
                            	
00008187 0D 05 03 00        		R2=BP+3
00000B86                    	.debug
00000B86 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
00000B9A 05 00 00 00        		.dd LM60-_waitbusy
00000B9C 0D 00 0A 00        		.dw 0x0d,0x0a
00008189                    	.code
                            	LM60:
00008189 11 93 00 70        		R1=[28672]	// QImode move
0000818B 09 A7 00 FF        		R3=R1|(-256)
0000818D 1B D7 00 70        		[28672]=R3	// QImode move
00000B9E                    	.debug
00000B9E 2E 00 73 00        		.dw '.stabn 0x44,0,103,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         33 00 2C 00
         00 00 00 00
00000BB2 0B 00 00 00        		.dd LM61-_waitbusy
00000BB4 0D 00 0A 00        		.dw 0x0d,0x0a
0000818F                    	.code
                            	LM61:
0000818F 11 93 00 70        		R1=[28672]	// QImode move
00008191 09 B7 7F FF        		R3=R1&(-129)
00008193 1B D7 00 70        		[28672]=R3	// QImode move
00000BB6                    	.debug
00000BB6 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000BCA 11 00 00 00        		.dd LM62-_waitbusy
00000BCC 0D 00 0A 00        		.dw 0x0d,0x0a
00008195                    	.code
                            	LM62:
00008195 11 93 00 70        		R1=[28672]	// QImode move
00008197 09 A7 40 00        		R3=R1|64
00008199 1B D7 00 70        		[28672]=R3	// QImode move
00000BCE                    	.debug
00000BCE 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00000BE2 17 00 00 00        		.dd LM63-_waitbusy
00000BE4 0D 00 0A 00        		.dw 0x0d,0x0a
0000819B                    	.code
                            	LM63:
0000819B 11 93 00 70        		R1=[28672]	// QImode move
0000819D 09 B7 DF FF        		R3=R1&(-33)
0000819F 1B D7 00 70        		[28672]=R3	// QImode move
000081A1 11 93 00 70        		R1=[28672]	// QImode move
000081A3 09 B7 DF FF        		R3=R1&(-33)
000081A5 1B D7 00 70        		[28672]=R3	// QImode move
000081A7 11 93 00 70        		R1=[28672]	// QImode move
000081A9 09 B7 DF FF        		R3=R1&(-33)
000081AB 1B D7 00 70        		[28672]=R3	// QImode move
000081AD 11 93 00 70        		R1=[28672]	// QImode move
000081AF 09 B7 DF FF        		R3=R1&(-33)
000081B1 1B D7 00 70        		[28672]=R3	// QImode move
000081B3 11 93 00 70        		R1=[28672]	// QImode move
000081B5 09 A7 20 00        		R3=R1|32
000081B7 1B D7 00 70        		[28672]=R3	// QImode move
00000BE6                    	.debug
00000BE6 2E 00 73 00        		.dw '.stabn 0x44,0,108,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         38 00 2C 00
         00 00 00 00
00000BFA 35 00 00 00        		.dd LM64-_waitbusy
00000BFC 0D 00 0A 00        		.dw 0x0d,0x0a
000081B9                    	.code
                            	LM64:
000081B9 41 92              		R1=1	// QImode move
000081BA 19 D3 12 70        		[28690]=R1	// QImode move
00000BFE                    	.debug
00000BFE 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000C12 38 00 00 00        		.dd LM65-_waitbusy
00000C14 0D 00 0A 00        		.dw 0x0d,0x0a
000081BC                    	.code
                            	LM65:
000081BC 11 93 00 70        		R1=[28672]	// QImode move
000081BE 79 97              		R3=R1 lsr 4
000081BF 7B 97              		R3=R3 lsr 4
000081C0 03 93              		R1=R3	// QImode move
000081C1 0F 9F C3 81        		pc=L23	// Indirect jump
00000C16                    	.debug
00000C16 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
00000C2A 3F 00 00 00        		.dd LM66-_waitbusy
00000C2C 0D 00 0A 00        		.dw 0x0d,0x0a
000081C3                    	.code
                            	LM66:
00000C2E                    	.debug
00000C2E 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
00000C42 3F 00 00 00        		.dd LM67-_waitbusy
00000C44 0D 00 0A 00        		.dw 0x0d,0x0a
000081C3                    	.code
                            	LM67:
                            	L23:
                            	
000081C3 88 98              		pop bp from [sp]
000081C4 90 9A              		retf
                            		.endp	// end of waitbusy
                            	
00000C46                    	.debug
00000C46 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000C4F 41 00 00 00        		.dd LME7-_waitbusy
00000C51 0D 00 0A 00        		.dw 0x0d,0x0a
000081C5                    	.code
                            	LME7:
000081C5                    	.code
00000C53                    	.debug
00000C53 2E 00 73 00        		.dw '.stabs "readdata:F2",36,0,0,',0,0,offset _readdata,seg _readdata,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         61 00 64 00
         64 00 61 00
         74 00 61 00
         3A 00 46 00
         32 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         9F 01 00 00
         0D 00 0A 00
000081C5                    	.CODE
                            	.public _readdata
                            	_readdata:	.proc
00000C75                    	.debug
00000C75 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
00000C89 00 00 00 00        		.dd LM68-_readdata
00000C8B 0D 00 0A 00        		.dw 0x0d,0x0a
000081C5                    	.code
                            	LM68:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
000081C5 88 DA              		push bp to [sp]
000081C6 08 0B 01 00        		bp=sp+1
                            	
000081C8 0D 05 03 00        		R2=BP+3
00000C8D                    	.debug
00000C8D 2E 00 73 00        		.dw '.stabn 0x44,0,114,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         34 00 2C 00
         00 00 00 00
00000CA1 05 00 00 00        		.dd LM69-_readdata
00000CA3 0D 00 0A 00        		.dw 0x0d,0x0a
000081CA                    	.code
                            	LM69:
000081CA 11 93 00 70        		R1=[28672]	// QImode move
000081CC 09 A7 40 00        		R3=R1|64
000081CE 1B D7 00 70        		[28672]=R3	// QImode move
00000CA5                    	.debug
00000CA5 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
00000CB9 0B 00 00 00        		.dd LM70-_readdata
00000CBB 0D 00 0A 00        		.dw 0x0d,0x0a
000081D0                    	.code
                            	LM70:
000081D0 11 93 00 70        		R1=[28672]	// QImode move
000081D2 09 A7 80 00        		R3=R1|128
000081D4 1B D7 00 70        		[28672]=R3	// QImode move
00000CBD                    	.debug
00000CBD 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
00000CD1 11 00 00 00        		.dd LM71-_readdata
00000CD3 0D 00 0A 00        		.dw 0x0d,0x0a
000081D6                    	.code
                            	LM71:
000081D6 11 93 00 70        		R1=[28672]	// QImode move
000081D8 09 B7 DF FF        		R3=R1&(-33)
000081DA 1B D7 00 70        		[28672]=R3	// QImode move
000081DC 11 93 00 70        		R1=[28672]	// QImode move
000081DE 09 B7 DF FF        		R3=R1&(-33)
000081E0 1B D7 00 70        		[28672]=R3	// QImode move
000081E2 11 93 00 70        		R1=[28672]	// QImode move
000081E4 09 B7 DF FF        		R3=R1&(-33)
000081E6 1B D7 00 70        		[28672]=R3	// QImode move
000081E8 11 93 00 70        		R1=[28672]	// QImode move
000081EA 09 B7 DF FF        		R3=R1&(-33)
000081EC 1B D7 00 70        		[28672]=R3	// QImode move
000081EE 11 93 00 70        		R1=[28672]	// QImode move
000081F0 09 A7 20 00        		R3=R1|32
000081F2 1B D7 00 70        		[28672]=R3	// QImode move
00000CD5                    	.debug
00000CD5 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
00000CE9 2F 00 00 00        		.dd LM72-_readdata
00000CEB 0D 00 0A 00        		.dw 0x0d,0x0a
000081F4                    	.code
                            	LM72:
000081F4 11 93 00 70        		R1=[28672]	// QImode move
000081F6 79 97              		R3=R1 lsr 4
000081F7 7B 97              		R3=R3 lsr 4
000081F8 03 93              		R1=R3	// QImode move
000081F9 0F 9F FB 81        		pc=L24	// Indirect jump
00000CED                    	.debug
00000CED 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000D01 36 00 00 00        		.dd LM73-_readdata
00000D03 0D 00 0A 00        		.dw 0x0d,0x0a
000081FB                    	.code
                            	LM73:
00000D05                    	.debug
00000D05 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00000D19 36 00 00 00        		.dd LM74-_readdata
00000D1B 0D 00 0A 00        		.dw 0x0d,0x0a
000081FB                    	.code
                            	LM74:
                            	L24:
                            	
000081FB 88 98              		pop bp from [sp]
000081FC 90 9A              		retf
                            		.endp	// end of readdata
                            	
00000D1D                    	.debug
00000D1D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000D26 38 00 00 00        		.dd LME8-_readdata
00000D28 0D 00 0A 00        		.dw 0x0d,0x0a
000081FD                    	.code
                            	LME8:
000081FD                    	.code
00000D2A                    	.debug
00000D2A 2E 00 73 00        		.dw '.stabs "displaychar:F19",36,0,0,',0,0,offset _displaychar,seg _displaychar,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 69 00
         73 00 70 00
         6C 00 61 00
         79 00 63 00
         68 00 61 00
         72 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         D7 01 00 00
         0D 00 0A 00
000081FD                    	.CODE
                            	.public _displaychar
                            	_displaychar:	.proc
00000D50                    	.debug
00000D50 2E 00 73 00        		.dw '.stabn 0x44,0,120,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         30 00 2C 00
         00 00 00 00
00000D64 00 00 00 00        		.dd LM75-_displaychar
00000D66 0D 00 0A 00        		.dw 0x0d,0x0a
000081FD                    	.code
                            	LM75:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000081FD 88 DA              		push bp to [sp]
000081FE 41 20              		sp-=1
000081FF 08 0B 01 00        		bp=sp+1
                            	
00008201 0D 03 04 00        		R1=BP+4
00008203 C5 D2              		[BP]=R1	// QImode move
00000D68                    	.debug
00000D68 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
00000D7C 07 00 00 00        		.dd LM76-_displaychar
00000D7E 0D 00 0A 00        		.dw 0x0d,0x0a
00008204                    	.code
                            	LM76:
00008204 C5 94              		R2=[BP]	// QImode move
00008205 C5 94              		R2=[BP]	// QImode move
00008206 0A 03 01 00        		R1=R2+1
00008208 C5 94              		R2=[BP]	// QImode move
00008209 C5 98              		R4=[BP]	// QImode move
0000820A 0C 07 01 00        		R3=R4+1
0000820C 03 95              		R2=R3	// QImode move
0000820D C2 94              		R2=[R2]	// QImode move
0000820E 0A B9 01 00        		R4=R2&1
00008210 01 95              		R2=R1	// QImode move
00008211 C2 D8              		[R2]=R4	// QImode move
00000D80                    	.debug
00000D80 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000D94 15 00 00 00        		.dd LM77-_displaychar
00000D96 0D 00 0A 00        		.dw 0x0d,0x0a
00008212                    	.code
                            	LM77:
00008212 C5 96              		R3=[BP]	// QImode move
00008213 C3 98              		R4=[R3]	// QImode move
00008214 4F B8              		R4=R4&15
00008215 C3 D8              		[R3]=R4	// QImode move
00000D98                    	.debug
00000D98 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
00000DAC 19 00 00 00        		.dd LM78-_displaychar
00000DAE 0D 00 0A 00        		.dw 0x0d,0x0a
00008216                    	.code
                            	LM78:
00008216 C5 92              		R1=[BP]	// QImode move
00008217 C5 92              		R1=[BP]	// QImode move
00008218 09 05 01 00        		R2=R1+1
0000821A 02 97              		R3=R2	// QImode move
0000821B C3 92              		R1=[R3]	// QImode move
0000821C 40 42              		CMP R1,0	// QImode test
0000821D 07 5E 01 EE        		NSJZ L26	//QImode EQ
         00 EE      
00000DB0                    	.debug
00000DB0 2E 00 73 00        		.dw '.stabn 0x44,0,125,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         35 00 2C 00
         00 00 00 00
00000DC4 23 00 00 00        		.dd LM79-_displaychar
00000DC6 0D 00 0A 00        		.dw 0x0d,0x0a
00008220                    	.code
                            	LM79:
00008220 C5 98              		R4=[BP]	// QImode move
00008221 C4 92              		R1=[R4]	// QImode move
00008222 09 A3 40 00        		R1=R1|64
00008224 C4 D2              		[R4]=R1	// QImode move
                            	L26:
00000DC8                    	.debug
00000DC8 2E 00 73 00        		.dw '.stabn 0x44,0,127,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         37 00 2C 00
         00 00 00 00
00000DDC 28 00 00 00        		.dd LM80-_displaychar
00000DDE 0D 00 0A 00        		.dw 0x0d,0x0a
00008225                    	.code
                            	LM80:
00008225 C5 94              		R2=[BP]	// QImode move
00008226 C2 96              		R3=[R2]	// QImode move
00008227 0B A7 80 00        		R3=R3|128
00008229 C2 D6              		[R2]=R3	// QImode move
00000DE0                    	.debug
00000DE0 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
00000DF4 2D 00 00 00        		.dd LM81-_displaychar
00000DF6 0D 00 0A 00        		.dw 0x0d,0x0a
0000822A                    	.code
                            	LM81:
0000822A 40 92              		R1=0	// QImode move
0000822B C8 D2              		[SP--]=R1	// QImode move
0000822C C5 98              		R4=[BP]	// QImode move
0000822D C4 92              		R1=[R4]	// QImode move
0000822E C8 D2              		[SP--]=R1	// QImode move
0000822F 40 F0 EC 80        		call _writecommand	// call without return value
00008231 42 00              		SP = SP + 2	//SP
00000DF8                    	.debug
00000DF8 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
00000E0C 35 00 00 00        		.dd LM82-_displaychar
00000E0E 0D 00 0A 00        		.dw 0x0d,0x0a
00008232                    	.code
                            	LM82:
00008232 C5 92              		R1=[BP]	// QImode move
00008233 C5 92              		R1=[BP]	// QImode move
00008234 09 05 02 00        		R2=R1+2
00008236 02 97              		R3=R2	// QImode move
00008237 C3 92              		R1=[R3]	// QImode move
00008238 C8 D2              		[SP--]=R1	// QImode move
00008239 40 F0 3D 81        		call _writedata	// call without return value
0000823B 41 00              		SP = SP + 1	//SP
00000E10                    	.debug
00000E10 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
00000E24 3F 00 00 00        		.dd LM83-_displaychar
00000E26 0D 00 0A 00        		.dw 0x0d,0x0a
0000823C                    	.code
                            	LM83:
00000E28                    	.debug
00000E28 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
00000E3C 3F 00 00 00        		.dd LM84-_displaychar
00000E3E 0D 00 0A 00        		.dw 0x0d,0x0a
0000823C                    	.code
                            	LM84:
                            	L25:
                            	
0000823C 41 00              		sp+=1
0000823D 88 98              		pop bp from [sp]
0000823E 90 9A              		retf
                            		.endp	// end of displaychar
                            	
00000E40                    	.debug
00000E40 2E 00 73 00        		.dw '.stabs "x:p2",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 3A 00
         70 00 32 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
0000823F                    	.CODE
00000E59                    	.debug
00000E59 2E 00 73 00        		.dw '.stabs "y:p2",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         79 00 3A 00
         70 00 32 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         35 00 0D 00
         0A 00      
0000823F                    	.CODE
00000E72                    	.debug
00000E72 2E 00 73 00        		.dw '.stabs "data:p2",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 61 00
         74 00 61 00
         3A 00 70 00
         32 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 36 00
         0D 00 0A 00
0000823F                    	.CODE
00000E8E                    	.debug
00000E8E 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000E97 42 00 00 00        		.dd LME9-_displaychar
00000E99 0D 00 0A 00        		.dw 0x0d,0x0a
0000823F                    	.code
                            	LME9:
                            		.end
0 error(s), 0 warning(s).

