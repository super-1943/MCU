Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\PROGRA~1\Sunplus\cc1.exe C:\DOCUME~1\GAODEB~1\LOCALS~1\Temp\ccKudaaa.i -fkeep-inline-functions -quiet -dumpbase mian.c -mglobal-var-iram -gstabs -Wall -o .\Debug/mian.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "F:/gao/dingshiqi/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 67 00
         61 00 6F 00
         2F 00 64 00
         69 00 6E 00
         67 00 73 00
         68 00 69 00
         71 00 69 00
         2F 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
000080E6                    	.code
0000002A                    	.debug
0000002A 2E 00 73 00        		.dw '.stabs "F:/gao/dingshiqi/mian.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 67 00
         61 00 6F 00
         2F 00 64 00
         69 00 6E 00
         67 00 73 00
         68 00 69 00
         71 00 69 00
         2F 00 6D 00
         69 00 61 00
         6E 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
000080E6                    	.code
000080E6                    	.code
                            	Ltext0:
0000005A                    	.debug
0000005A 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
00000086                    	.debug
00000086 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
000000AC                    	.debug
000000AC 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000080E6                    	.CODE
000000E7                    	.debug
000000E7 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
00000117                    	.debug
00000117 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
00000151                    	.debug
00000151 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
00000191                    	.debug
00000191 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000080E6                    	.CODE
000001D0                    	.debug
000001D0 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
00000202                    	.debug
00000202 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
00000238                    	.debug
00000238 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
0000026E                    	.debug
0000026E 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000080E6                    	.CODE
000002A1                    	.debug
000002A1 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
000002C7                    	.debug
000002C7 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000080E6                    	.CODE
000002EE                    	.debug
000002EE 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
0000031A                    	.debug
0000031A 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000080E6                    	.CODE
0000035B                    	.debug
0000035B 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000080E6                    	.CODE
0000038A                    	.debug
0000038A 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
000003BA                    	.debug
000003BA 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
000080E6                    	.CODE
000003EF                    	.debug
000003EF 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000080E6                    	.CODE
000080E6                    	.code
0000040F                    	.debug
0000040F 2E 00 73 00        		.dw '.stabs "sendword:F19",36,0,0,',0,0,offset _sendword,seg _sendword,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 65 00
         6E 00 64 00
         77 00 6F 00
         72 00 64 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
000080E6                    	.CODE
                            	.public _sendword
                            	_sendword:	.proc
00000432                    	.debug
00000432 2E 00 73 00        		.dw '.stabs "F:/gao/dingshiqi/my7219.h",0x84,0,0,',0,0,offset Ltext1, seg Ltext1,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 67 00
         61 00 6F 00
         2F 00 64 00
         69 00 6E 00
         67 00 73 00
         68 00 69 00
         71 00 69 00
         2F 00 6D 00
         79 00 37 00
         32 00 31 00
         39 00 2E 00
         68 00 22 00
         2C 00 30 00
         78 00 38 00
         34 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
000080E6                    	.code
000080E6                    	.code
                            	Ltext1:
00000464                    	.debug
00000464 2E 00 73 00        		.dw '.stabn 0x44,0,36,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 36 00
         2C 00 00 00
         00 00      
00000477 00 00 00 00        		.dd LM1-_sendword
00000479 0D 00 0A 00        		.dw 0x0d,0x0a
000080E6                    	.code
                            	LM1:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
000080E6 88 DA              		push bp to [sp]
000080E7 42 20              		sp-=2
000080E8 08 0B 01 00        		bp=sp+1
                            	
000080EA 0D 03 05 00        		R1=BP+5
0000047B                    	.debug
0000047B 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
0000048E 06 00 00 00        		.dd LM2-_sendword
00000490 0D 00 0A 00        		.dw 0x0d,0x0a
000080EC                    	.code
                            	LM2:
                            	LBB2:
00000492                    	.debug
00000492 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
000004A5 06 00 00 00        		.dd LM3-_sendword
000004A7 0D 00 0A 00        		.dw 0x0d,0x0a
000080EC                    	.code
                            	LM3:
000080EC 12 95 05 70        		R2=[28677]	// QImode move
000080EE 0A B7 FF DF        		R3=R2&(-8193)
000080F0 1B D7 05 70        		[28677]=R3	// QImode move
000004A9                    	.debug
000004A9 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
000004BC 0C 00 00 00        		.dd LM4-_sendword
000004BE 0D 00 0A 00        		.dw 0x0d,0x0a
000080F2                    	.code
                            	LM4:
000080F2 40 94              		R2=0	// QImode move
000080F3 C5 D4              		[BP]=R2	// QImode move
                            	L3:
000080F4 C5 94              		R2=[BP]	// QImode move
000080F5 4F 44              		CMP R2,15	// QImode compare
000080F6 04 AE 01 EE        		NSJNG L6	//QImode LE
         00 EE      
000080F9 0F 9F 41 81        		pc=L4	// Indirect jump
                            	L6:
000004C0                    	.debug
000004C0 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
000004D3 15 00 00 00        		.dd LM5-_sendword
000004D5 0D 00 0A 00        		.dw 0x0d,0x0a
000080FB                    	.code
                            	LM5:
000080FB 41 94              		R2=1	// QImode move
000080FC 1A D5 12 70        		[28690]=R2	// QImode move
000004D7                    	.debug
000004D7 2E 00 73 00        		.dw '.stabn 0x44,0,42,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 32 00
         2C 00 00 00
         00 00      
000004EA 18 00 00 00        		.dd LM6-_sendword
000004EC 0D 00 0A 00        		.dw 0x0d,0x0a
000080FE                    	.code
                            	LM6:
000080FE 05 95              		R2=BP	// QImode move
000080FF 0D 07 01 00        		R3=BP+1
00008101 01 95              		R2=R1	// QImode move
00008102 C2 94              		R2=[R2]	// QImode move
00008103 0A B9 00 80        		R4=R2&(-32768)
00008105 03 95              		R2=R3	// QImode move
00008106 C2 D8              		[R2]=R4	// QImode move
000004EE                    	.debug
000004EE 2E 00 73 00        		.dw '.stabn 0x44,0,43,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 33 00
         2C 00 00 00
         00 00      
00000501 21 00 00 00        		.dd LM7-_sendword
00000503 0D 00 0A 00        		.dw 0x0d,0x0a
00008107                    	.code
                            	LM7:
00008107 01 97              		R3=R1	// QImode move
00008108 C3 94              		R2=[R3]	// QImode move
00008109 42 97              		R3=R2 lsl 1
0000810A 01 99              		R4=R1	// QImode move
0000810B C4 D6              		[R4]=R3	// QImode move
00000505                    	.debug
00000505 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
00000518 26 00 00 00        		.dd LM8-_sendword
0000051A 0D 00 0A 00        		.dw 0x0d,0x0a
0000810C                    	.code
                            	LM8:
0000810C 05 95              		R2=BP	// QImode move
0000810D 0D 07 01 00        		R3=BP+1
0000810F 03 99              		R4=R3	// QImode move
00008110 C4 94              		R2=[R4]	// QImode move
00008111 40 44              		CMP R2,0	// QImode test
00008112 16 5E 01 EE        		NSJZ L7	//QImode EQ
         00 EE      
0000051C                    	.debug
0000051C 2E 00 73 00        		.dw '.stabn 0x44,0,46,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 36 00
         2C 00 00 00
         00 00      
0000052F 2F 00 00 00        		.dd LM9-_sendword
00000531 0D 00 0A 00        		.dw 0x0d,0x0a
00008115                    	.code
                            	LM9:
00008115 12 95 05 70        		R2=[28677]	// QImode move
00008117 0A A7 00 40        		R3=R2|16384
00008119 1B D7 05 70        		[28677]=R3	// QImode move
00000533                    	.debug
00000533 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
00000546 35 00 00 00        		.dd LM10-_sendword
00000548 0D 00 0A 00        		.dw 0x0d,0x0a
0000811B                    	.code
                            	LM10:
0000811B 12 95 05 70        		R2=[28677]	// QImode move
0000811D 0A B7 FF 7F        		R3=R2&32767
0000811F 1B D7 05 70        		[28677]=R3	// QImode move
0000054A                    	.debug
0000054A 2E 00 73 00        		.dw '.stabn 0x44,0,48,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 38 00
         2C 00 00 00
         00 00      
0000055D 3B 00 00 00        		.dd LM11-_sendword
0000055F 0D 00 0A 00        		.dw 0x0d,0x0a
00008121                    	.code
                            	LM11:
00008121 12 95 05 70        		R2=[28677]	// QImode move
00008123 0A A7 00 80        		R3=R2|(-32768)
00008125 1B D7 05 70        		[28677]=R3	// QImode move
00000561                    	.debug
00000561 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
00000574 41 00 00 00        		.dd LM12-_sendword
00000576 0D 00 0A 00        		.dw 0x0d,0x0a
00008127                    	.code
                            	LM12:
00008127 0F 9F 3B 81        		pc=L5	// Indirect jump
                            	L7:
00000578                    	.debug
00000578 2E 00 73 00        		.dw '.stabn 0x44,0,52,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 32 00
         2C 00 00 00
         00 00      
0000058B 43 00 00 00        		.dd LM13-_sendword
0000058D 0D 00 0A 00        		.dw 0x0d,0x0a
00008129                    	.code
                            	LM13:
00008129 12 95 05 70        		R2=[28677]	// QImode move
0000812B 0A B7 FF BF        		R3=R2&(-16385)
0000812D 1B D7 05 70        		[28677]=R3	// QImode move
0000058F                    	.debug
0000058F 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
000005A2 49 00 00 00        		.dd LM14-_sendword
000005A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000812F                    	.code
                            	LM14:
0000812F 12 95 05 70        		R2=[28677]	// QImode move
00008131 0A B7 FF 7F        		R3=R2&32767
00008133 1B D7 05 70        		[28677]=R3	// QImode move
000005A6                    	.debug
000005A6 2E 00 73 00        		.dw '.stabn 0x44,0,54,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 34 00
         2C 00 00 00
         00 00      
000005B9 4F 00 00 00        		.dd LM15-_sendword
000005BB 0D 00 0A 00        		.dw 0x0d,0x0a
00008135                    	.code
                            	LM15:
00008135 12 95 05 70        		R2=[28677]	// QImode move
00008137 0A A7 00 80        		R3=R2|(-32768)
00008139 1B D7 05 70        		[28677]=R3	// QImode move
                            	L8:
000005BD                    	.debug
000005BD 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
000005D0 55 00 00 00        		.dd LM16-_sendword
000005D2 0D 00 0A 00        		.dw 0x0d,0x0a
0000813B                    	.code
                            	LM16:
                            	L5:
0000813B C5 94              		R2=[BP]	// QImode move
0000813C 0A 07 01 00        		R3=R2+1
0000813E C5 D6              		[BP]=R3	// QImode move
0000813F 0F 9F F4 80        		pc=L3	// Indirect jump
                            	L4:
000005D4                    	.debug
000005D4 2E 00 73 00        		.dw '.stabn 0x44,0,57,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 37 00
         2C 00 00 00
         00 00      
000005E7 5B 00 00 00        		.dd LM17-_sendword
000005E9 0D 00 0A 00        		.dw 0x0d,0x0a
00008141                    	.code
                            	LM17:
00008141 12 95 05 70        		R2=[28677]	// QImode move
00008143 0A A7 00 20        		R3=R2|8192
00008145 1B D7 05 70        		[28677]=R3	// QImode move
000005EB                    	.debug
000005EB 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
000005FE 61 00 00 00        		.dd LM18-_sendword
00000600 0D 00 0A 00        		.dw 0x0d,0x0a
00008147                    	.code
                            	LM18:
00008147 41 94              		R2=1	// QImode move
00008148 1A D5 12 70        		[28690]=R2	// QImode move
00000602                    	.debug
00000602 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
00000615 64 00 00 00        		.dd LM19-_sendword
00000617 0D 00 0A 00        		.dw 0x0d,0x0a
0000814A                    	.code
                            	LM19:
                            	LBE2:
00000619                    	.debug
00000619 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
0000062C 64 00 00 00        		.dd LM20-_sendword
0000062E 0D 00 0A 00        		.dw 0x0d,0x0a
0000814A                    	.code
                            	LM20:
                            	L2:
                            	
0000814A 42 00              		sp+=2
0000814B 88 98              		pop bp from [sp]
0000814C 90 9A              		retf
                            		.endp	// end of sendword
                            	
00000630                    	.debug
00000630 2E 00 73 00        		.dw '.stabs "word:p4",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         77 00 6F 00
         72 00 64 00
         3A 00 70 00
         34 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000814D                    	.CODE
0000064C                    	.debug
0000064C 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000065E 06 00 00 00        		.dd LBB2-_sendword
00000660 0D 00 0A 00        		.dw 0x0d,0x0a
0000814D                    	.code
00000662                    	.debug
00000662 2E 00 73 00        		.dw '.stabs "i:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000814D                    	.CODE
0000067A                    	.debug
0000067A 2E 00 73 00        		.dw '.stabs "temp:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 65 00
         6D 00 70 00
         3A 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         31 00 0D 00
         0A 00      
0000814D                    	.CODE
00000695                    	.debug
00000695 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000006A7 64 00 00 00        		.dd LBE2-_sendword
000006A9 0D 00 0A 00        		.dw 0x0d,0x0a
0000814D                    	.code
000006AB                    	.debug
000006AB 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000006B4 67 00 00 00        		.dd LME1-_sendword
000006B6 0D 00 0A 00        		.dw 0x0d,0x0a
0000814D                    	.code
                            	LME1:
0000814D                    	.code
000006B8                    	.debug
000006B8 2E 00 73 00        		.dw '.stabs "init7219:F19",36,0,0,',0,0,offset _init7219,seg _init7219,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         69 00 74 00
         37 00 32 00
         31 00 39 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 67 00
         00 00 0D 00
         0A 00      
0000814D                    	.CODE
                            	.public _init7219
                            	_init7219:	.proc
000006DB                    	.debug
000006DB 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
000006EE 00 00 00 00        		.dd LM21-_init7219
000006F0 0D 00 0A 00        		.dw 0x0d,0x0a
0000814D                    	.code
                            	LM21:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000814D 88 DA              		push bp to [sp]
0000814E 41 20              		sp-=1
0000814F 08 0B 01 00        		bp=sp+1
                            	
00008151 0D 03 04 00        		R1=BP+4
00008153 C5 D2              		[BP]=R1	// QImode move
000006F2                    	.debug
000006F2 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
00000705 07 00 00 00        		.dd LM22-_init7219
00000707 0D 00 0A 00        		.dw 0x0d,0x0a
00008154                    	.code
                            	LM22:
00008154 11 93 07 70        		R1=[28679]	// QImode move
00008156 09 A5 00 F0        		R2=R1|(-4096)
00008158 1A D5 07 70        		[28679]=R2	// QImode move
00000709                    	.debug
00000709 2E 00 73 00        		.dw '.stabn 0x44,0,63,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 33 00
         2C 00 00 00
         00 00      
0000071C 0D 00 00 00        		.dd LM23-_init7219
0000071E 0D 00 0A 00        		.dw 0x0d,0x0a
0000815A                    	.code
                            	LM23:
0000815A 11 93 08 70        		R1=[28680]	// QImode move
0000815C 09 A5 00 F0        		R2=R1|(-4096)
0000815E 1A D5 08 70        		[28680]=R2	// QImode move
00000720                    	.debug
00000720 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
00000733 13 00 00 00        		.dd LM24-_init7219
00000735 0D 00 0A 00        		.dw 0x0d,0x0a
00008160                    	.code
                            	LM24:
00008160 11 93 05 70        		R1=[28677]	// QImode move
00008162 09 B5 FF 0F        		R2=R1&4095
00008164 1A D5 05 70        		[28677]=R2	// QImode move
00000737                    	.debug
00000737 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
0000074A 19 00 00 00        		.dd LM25-_init7219
0000074C 0D 00 0A 00        		.dw 0x0d,0x0a
00008166                    	.code
                            	LM25:
00008166 09 93 07 0B        		R1=2823	// QImode move
00008168 C8 D2              		[SP--]=R1	// QImode move
00008169 40 F0 E6 80        		call _sendword	// call without return value
0000816B 41 00              		SP = SP + 1	//SP
0000074E                    	.debug
0000074E 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
00000761 1F 00 00 00        		.dd LM26-_init7219
00000763 0D 00 0A 00        		.dw 0x0d,0x0a
0000816C                    	.code
                            	LM26:
0000816C 09 93 FF 09        		R1=2559	// QImode move
0000816E C8 D2              		[SP--]=R1	// QImode move
0000816F 40 F0 E6 80        		call _sendword	// call without return value
00008171 41 00              		SP = SP + 1	//SP
00000765                    	.debug
00000765 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
00000778 25 00 00 00        		.dd LM27-_init7219
0000077A 0D 00 0A 00        		.dw 0x0d,0x0a
00008172                    	.code
                            	LM27:
00008172 09 93 0A 0A        		R1=2570	// QImode move
00008174 C8 D2              		[SP--]=R1	// QImode move
00008175 40 F0 E6 80        		call _sendword	// call without return value
00008177 41 00              		SP = SP + 1	//SP
0000077C                    	.debug
0000077C 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
0000078F 2B 00 00 00        		.dd LM28-_init7219
00000791 0D 00 0A 00        		.dw 0x0d,0x0a
00008178                    	.code
                            	LM28:
00008178 09 93 01 0C        		R1=3073	// QImode move
0000817A C8 D2              		[SP--]=R1	// QImode move
0000817B 40 F0 E6 80        		call _sendword	// call without return value
0000817D 41 00              		SP = SP + 1	//SP
00000793                    	.debug
00000793 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
000007A6 31 00 00 00        		.dd LM29-_init7219
000007A8 0D 00 0A 00        		.dw 0x0d,0x0a
0000817E                    	.code
                            	LM29:
0000817E 09 93 01 0F        		R1=3841	// QImode move
00008180 C8 D2              		[SP--]=R1	// QImode move
00008181 40 F0 E6 80        		call _sendword	// call without return value
00008183 41 00              		SP = SP + 1	//SP
000007AA                    	.debug
000007AA 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
000007BD 37 00 00 00        		.dd LM30-_init7219
000007BF 0D 00 0A 00        		.dw 0x0d,0x0a
00008184                    	.code
                            	LM30:
00008184 09 93 00 0F        		R1=3840	// QImode move
00008186 C8 D2              		[SP--]=R1	// QImode move
00008187 40 F0 E6 80        		call _sendword	// call without return value
00008189 41 00              		SP = SP + 1	//SP
000007C1                    	.debug
000007C1 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
000007D4 3D 00 00 00        		.dd LM31-_init7219
000007D6 0D 00 0A 00        		.dw 0x0d,0x0a
0000818A                    	.code
                            	LM31:
000007D8                    	.debug
000007D8 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
000007EB 3D 00 00 00        		.dd LM32-_init7219
000007ED 0D 00 0A 00        		.dw 0x0d,0x0a
0000818A                    	.code
                            	LM32:
                            	L11:
                            	
0000818A 41 00              		sp+=1
0000818B 88 98              		pop bp from [sp]
0000818C 90 9A              		retf
                            		.endp	// end of init7219
                            	
000007EF                    	.debug
000007EF 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000007F8 40 00 00 00        		.dd LME2-_init7219
000007FA 0D 00 0A 00        		.dw 0x0d,0x0a
0000818D                    	.code
                            	LME2:
0000818D                    	.code
000007FC                    	.debug
000007FC 2E 00 73 00        		.dw '.stabs "show:F19",36,0,0,',0,0,offset _show,seg _show,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 77 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 A7 00
         00 00 0D 00
         0A 00      
0000818D                    	.CODE
                            	.public _show
                            	_show:	.proc
0000081B                    	.debug
0000081B 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
0000082E 00 00 00 00        		.dd LM33-_show
00000830 0D 00 0A 00        		.dw 0x0d,0x0a
0000818D                    	.code
                            	LM33:
                            		// total=14, vars=14
                            		// frame_pointer_needed: 1
0000818D 88 DA              		push bp to [sp]
0000818E 4E 20              		sp-=14
0000818F 08 0B 01 00        		bp=sp+1
                            	
00008191 0D 03 11 00        		R1=BP+17
00008193 08 D2              		[bp+8]=R1	// QImode move
00000832                    	.debug
00000832 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
00000845 07 00 00 00        		.dd LM34-_show
00000847 0D 00 0A 00        		.dw 0x0d,0x0a
00008194                    	.code
                            	LM34:
                            	LBB3:
00000849                    	.debug
00000849 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
0000085C 07 00 00 00        		.dd LM35-_show
0000085E 0D 00 0A 00        		.dw 0x0d,0x0a
00008194                    	.code
                            	LM35:
00008194 11 93 07 70        		R1=[28679]	// QImode move
00008196 09 A5 00 F0        		R2=R1|(-4096)
00008198 1A D5 07 70        		[28679]=R2	// QImode move
00000860                    	.debug
00000860 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
00000873 0D 00 00 00        		.dd LM36-_show
00000875 0D 00 0A 00        		.dw 0x0d,0x0a
0000819A                    	.code
                            	LM36:
0000819A 11 93 08 70        		R1=[28680]	// QImode move
0000819C 09 A5 00 F0        		R2=R1|(-4096)
0000819E 1A D5 08 70        		[28680]=R2	// QImode move
00000877                    	.debug
00000877 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
0000088A 13 00 00 00        		.dd LM37-_show
0000088C 0D 00 0A 00        		.dw 0x0d,0x0a
000081A0                    	.code
                            	LM37:
000081A0 11 93 05 70        		R1=[28677]	// QImode move
000081A2 09 B5 FF 0F        		R2=R1&4095
000081A4 1A D5 05 70        		[28677]=R2	// QImode move
0000088E                    	.debug
0000088E 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
000008A1 19 00 00 00        		.dd LM38-_show
000008A3 0D 00 0A 00        		.dw 0x0d,0x0a
000081A6                    	.code
                            	LM38:
000081A6 09 93 07 0B        		R1=2823	// QImode move
000081A8 C8 D2              		[SP--]=R1	// QImode move
000081A9 40 F0 E6 80        		call _sendword	// call without return value
000081AB 41 00              		SP = SP + 1	//SP
000008A5                    	.debug
000008A5 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
000008B8 1F 00 00 00        		.dd LM39-_show
000008BA 0D 00 0A 00        		.dw 0x0d,0x0a
000081AC                    	.code
                            	LM39:
000081AC 09 93 FF 09        		R1=2559	// QImode move
000081AE C8 D2              		[SP--]=R1	// QImode move
000081AF 40 F0 E6 80        		call _sendword	// call without return value
000081B1 41 00              		SP = SP + 1	//SP
000008BC                    	.debug
000008BC 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
000008CF 25 00 00 00        		.dd LM40-_show
000008D1 0D 00 0A 00        		.dw 0x0d,0x0a
000081B2                    	.code
                            	LM40:
000081B2 09 93 0A 0A        		R1=2570	// QImode move
000081B4 C8 D2              		[SP--]=R1	// QImode move
000081B5 40 F0 E6 80        		call _sendword	// call without return value
000081B7 41 00              		SP = SP + 1	//SP
000008D3                    	.debug
000008D3 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
000008E6 2B 00 00 00        		.dd LM41-_show
000008E8 0D 00 0A 00        		.dw 0x0d,0x0a
000081B8                    	.code
                            	LM41:
000081B8 09 93 01 0C        		R1=3073	// QImode move
000081BA C8 D2              		[SP--]=R1	// QImode move
000081BB 40 F0 E6 80        		call _sendword	// call without return value
000081BD 41 00              		SP = SP + 1	//SP
000008EA                    	.debug
000008EA 2E 00 73 00        		.dw '.stabn 0x44,0,91,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 31 00
         2C 00 00 00
         00 00      
000008FD 31 00 00 00        		.dd LM42-_show
000008FF 0D 00 0A 00        		.dw 0x0d,0x0a
000081BE                    	.code
                            	LM42:
000081BE 08 94              		R2=[bp+8]	// QImode move
000081BF C2 92              		R1=[R2]	// QImode move
000081C0 C5 D2              		[BP]=R1	// QImode move
00000901                    	.debug
00000901 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000914 34 00 00 00        		.dd LM43-_show
00000916 0D 00 0A 00        		.dw 0x0d,0x0a
000081C1                    	.code
                            	LM43:
000081C1 05 93              		R1=BP	// QImode move
000081C2 0D 07 02 00        		R3=BP+2
000081C4 09 D6              		[bp+9]=R3	// QImode move
000081C5 08 92              		R1=[bp+8]	// QImode move
000081C6 08 98              		R4=[bp+8]	// QImode move
000081C7 0C 05 01 00        		R2=R4+1
000081C9 02 97              		R3=R2	// QImode move
000081CA C3 92              		R1=[R3]	// QImode move
000081CB 0A 95 10 27        		R2=10000	// QImode move
000081CD C8 D4              		[SP--]=R2	// QImode move
000081CE C8 D2              		[SP--]=R1	// QImode move
000081CF 40 F0 D6 84        		call __divi1	// call with return value
000081D1 42 00              		SP = SP + 2	//SP
000081D2 09 98              		R4=[bp+9]	// QImode move
000081D3 C4 D2              		[R4]=R1	// QImode move
00000918                    	.debug
00000918 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
0000092B 47 00 00 00        		.dd LM44-_show
0000092D 0D 00 0A 00        		.dw 0x0d,0x0a
000081D4                    	.code
                            	LM44:
000081D4 05 93              		R1=BP	// QImode move
000081D5 0D 03 03 00        		R1=BP+3
000081D7 0A D2              		[bp+10]=R1	// QImode move
000081D8 08 92              		R1=[bp+8]	// QImode move
000081D9 08 96              		R3=[bp+8]	// QImode move
000081DA 0B 05 01 00        		R2=R3+1
000081DC 02 99              		R4=R2	// QImode move
000081DD C4 92              		R1=[R4]	// QImode move
000081DE 0A 95 10 27        		R2=10000	// QImode move
000081E0 C8 D4              		[SP--]=R2	// QImode move
000081E1 C8 D2              		[SP--]=R1	// QImode move
000081E2 40 F0 07 85        		call __modi1	// call with return value
000081E4 42 00              		SP = SP + 2	//SP
000081E5 0A 95 E8 03        		R2=1000	// QImode move
000081E7 C8 D4              		[SP--]=R2	// QImode move
000081E8 C8 D2              		[SP--]=R1	// QImode move
000081E9 40 F0 D6 84        		call __divi1	// call with return value
000081EB 42 00              		SP = SP + 2	//SP
000081EC 0A 94              		R2=[bp+10]	// QImode move
000081ED C2 D2              		[R2]=R1	// QImode move
0000092F                    	.debug
0000092F 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000942 61 00 00 00        		.dd LM45-_show
00000944 0D 00 0A 00        		.dw 0x0d,0x0a
000081EE                    	.code
                            	LM45:
000081EE 05 95              		R2=BP	// QImode move
000081EF 0D 03 03 00        		R1=BP+3
000081F1 05 95              		R2=BP	// QImode move
000081F2 0D 07 03 00        		R3=BP+3
000081F4 03 99              		R4=R3	// QImode move
000081F5 C4 98              		R4=[R4]	// QImode move
000081F6 0C A5 80 00        		R2=R4|128
000081F8 01 99              		R4=R1	// QImode move
000081F9 C4 D4              		[R4]=R2	// QImode move
00000946                    	.debug
00000946 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
00000959 6D 00 00 00        		.dd LM46-_show
0000095B 0D 00 0A 00        		.dw 0x0d,0x0a
000081FA                    	.code
                            	LM46:
000081FA 05 93              		R1=BP	// QImode move
000081FB 0D 03 04 00        		R1=BP+4
000081FD 0B D2              		[bp+11]=R1	// QImode move
000081FE 08 92              		R1=[bp+8]	// QImode move
000081FF 08 96              		R3=[bp+8]	// QImode move
00008200 0B 05 01 00        		R2=R3+1
00008202 02 99              		R4=R2	// QImode move
00008203 C4 92              		R1=[R4]	// QImode move
00008204 0A 95 64 00        		R2=100	// QImode move
00008206 C8 D4              		[SP--]=R2	// QImode move
00008207 C8 D2              		[SP--]=R1	// QImode move
00008208 40 F0 D6 84        		call __divi1	// call with return value
0000820A 42 00              		SP = SP + 2	//SP
0000820B 4A 94              		R2=10	// QImode move
0000820C C8 D4              		[SP--]=R2	// QImode move
0000820D C8 D2              		[SP--]=R1	// QImode move
0000820E 40 F0 07 85        		call __modi1	// call with return value
00008210 42 00              		SP = SP + 2	//SP
00008211 0B 94              		R2=[bp+11]	// QImode move
00008212 C2 D2              		[R2]=R1	// QImode move
0000095D                    	.debug
0000095D 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000970 86 00 00 00        		.dd LM47-_show
00000972 0D 00 0A 00        		.dw 0x0d,0x0a
00008213                    	.code
                            	LM47:
00008213 05 93              		R1=BP	// QImode move
00008214 0D 07 06 00        		R3=BP+6
00008216 0C D6              		[bp+12]=R3	// QImode move
00008217 08 92              		R1=[bp+8]	// QImode move
00008218 08 98              		R4=[bp+8]	// QImode move
00008219 0C 05 02 00        		R2=R4+2
0000821B 02 97              		R3=R2	// QImode move
0000821C C3 92              		R1=[R3]	// QImode move
0000821D 4A 94              		R2=10	// QImode move
0000821E C8 D4              		[SP--]=R2	// QImode move
0000821F C8 D2              		[SP--]=R1	// QImode move
00008220 40 F0 D6 84        		call __divi1	// call with return value
00008222 42 00              		SP = SP + 2	//SP
00008223 09 A5 80 00        		R2=R1|128
00008225 0C 98              		R4=[bp+12]	// QImode move
00008226 C4 D4              		[R4]=R2	// QImode move
00000974                    	.debug
00000974 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
00000987 9A 00 00 00        		.dd LM48-_show
00000989 0D 00 0A 00        		.dw 0x0d,0x0a
00008227                    	.code
                            	LM48:
00008227 05 93              		R1=BP	// QImode move
00008228 0D 07 07 00        		R3=BP+7
0000822A 0D D6              		[bp+13]=R3	// QImode move
0000822B 08 92              		R1=[bp+8]	// QImode move
0000822C 08 98              		R4=[bp+8]	// QImode move
0000822D 0C 05 02 00        		R2=R4+2
0000822F 02 97              		R3=R2	// QImode move
00008230 C3 92              		R1=[R3]	// QImode move
00008231 4A 94              		R2=10	// QImode move
00008232 C8 D4              		[SP--]=R2	// QImode move
00008233 C8 D2              		[SP--]=R1	// QImode move
00008234 40 F0 07 85        		call __modi1	// call with return value
00008236 42 00              		SP = SP + 2	//SP
00008237 0D 98              		R4=[bp+13]	// QImode move
00008238 C4 D2              		[R4]=R1	// QImode move
0000098B                    	.debug
0000098B 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
0000099E AC 00 00 00        		.dd LM49-_show
000009A0 0D 00 0A 00        		.dw 0x0d,0x0a
00008239                    	.code
                            	LM49:
00008239 41 92              		R1=1	// QImode move
0000823A 19 D3 12 70        		[28690]=R1	// QImode move
000009A2                    	.debug
000009A2 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
000009B5 AF 00 00 00        		.dd LM50-_show
000009B7 0D 00 0A 00        		.dw 0x0d,0x0a
0000823C                    	.code
                            	LM50:
0000823C C5 94              		R2=[BP]	// QImode move
0000823D 0A A3 00 08        		R1=R2|2048
0000823F C8 D2              		[SP--]=R1	// QImode move
00008240 40 F0 E6 80        		call _sendword	// call without return value
00008242 41 00              		SP = SP + 1	//SP
000009B9                    	.debug
000009B9 2E 00 73 00        		.dw '.stabn 0x44,0,100,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         30 00 2C 00
         00 00 00 00
000009CD B6 00 00 00        		.dd LM51-_show
000009CF 0D 00 0A 00        		.dw 0x0d,0x0a
00008243                    	.code
                            	LM51:
00008243 09 93 0F 07        		R1=1807	// QImode move
00008245 C8 D2              		[SP--]=R1	// QImode move
00008246 40 F0 E6 80        		call _sendword	// call without return value
00008248 41 00              		SP = SP + 1	//SP
000009D1                    	.debug
000009D1 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
000009E5 BC 00 00 00        		.dd LM52-_show
000009E7 0D 00 0A 00        		.dw 0x0d,0x0a
00008249                    	.code
                            	LM52:
00008249 05 93              		R1=BP	// QImode move
0000824A 0D 05 02 00        		R2=BP+2
0000824C 02 97              		R3=R2	// QImode move
0000824D C3 96              		R3=[R3]	// QImode move
0000824E 0B A3 00 06        		R1=R3|1536
00008250 C8 D2              		[SP--]=R1	// QImode move
00008251 40 F0 E6 80        		call _sendword	// call without return value
00008253 41 00              		SP = SP + 1	//SP
000009E9                    	.debug
000009E9 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
000009FD C7 00 00 00        		.dd LM53-_show
000009FF 0D 00 0A 00        		.dw 0x0d,0x0a
00008254                    	.code
                            	LM53:
00008254 05 93              		R1=BP	// QImode move
00008255 0D 05 03 00        		R2=BP+3
00008257 02 99              		R4=R2	// QImode move
00008258 C4 98              		R4=[R4]	// QImode move
00008259 0C A3 00 05        		R1=R4|1280
0000825B C8 D2              		[SP--]=R1	// QImode move
0000825C 40 F0 E6 80        		call _sendword	// call without return value
0000825E 41 00              		SP = SP + 1	//SP
00000A01                    	.debug
00000A01 2E 00 73 00        		.dw '.stabn 0x44,0,103,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         33 00 2C 00
         00 00 00 00
00000A15 D2 00 00 00        		.dd LM54-_show
00000A17 0D 00 0A 00        		.dw 0x0d,0x0a
0000825F                    	.code
                            	LM54:
0000825F 05 93              		R1=BP	// QImode move
00008260 0D 05 04 00        		R2=BP+4
00008262 02 97              		R3=R2	// QImode move
00008263 C3 96              		R3=[R3]	// QImode move
00008264 0B A3 00 04        		R1=R3|1024
00008266 C8 D2              		[SP--]=R1	// QImode move
00008267 40 F0 E6 80        		call _sendword	// call without return value
00008269 41 00              		SP = SP + 1	//SP
00000A19                    	.debug
00000A19 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000A2D DD 00 00 00        		.dd LM55-_show
00000A2F 0D 00 0A 00        		.dw 0x0d,0x0a
0000826A                    	.code
                            	LM55:
0000826A 09 93 0F 03        		R1=783	// QImode move
0000826C C8 D2              		[SP--]=R1	// QImode move
0000826D 40 F0 E6 80        		call _sendword	// call without return value
0000826F 41 00              		SP = SP + 1	//SP
00000A31                    	.debug
00000A31 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00000A45 E3 00 00 00        		.dd LM56-_show
00000A47 0D 00 0A 00        		.dw 0x0d,0x0a
00008270                    	.code
                            	LM56:
00008270 05 93              		R1=BP	// QImode move
00008271 0D 05 06 00        		R2=BP+6
00008273 02 99              		R4=R2	// QImode move
00008274 C4 98              		R4=[R4]	// QImode move
00008275 0C A3 00 02        		R1=R4|512
00008277 C8 D2              		[SP--]=R1	// QImode move
00008278 40 F0 E6 80        		call _sendword	// call without return value
0000827A 41 00              		SP = SP + 1	//SP
00000A49                    	.debug
00000A49 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000A5D EE 00 00 00        		.dd LM57-_show
00000A5F 0D 00 0A 00        		.dw 0x0d,0x0a
0000827B                    	.code
                            	LM57:
0000827B 05 93              		R1=BP	// QImode move
0000827C 0D 05 07 00        		R2=BP+7
0000827E 02 97              		R3=R2	// QImode move
0000827F C3 96              		R3=[R3]	// QImode move
00008280 0B A3 00 01        		R1=R3|256
00008282 C8 D2              		[SP--]=R1	// QImode move
00008283 40 F0 E6 80        		call _sendword	// call without return value
00008285 41 00              		SP = SP + 1	//SP
00000A61                    	.debug
00000A61 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000A75 F9 00 00 00        		.dd LM58-_show
00000A77 0D 00 0A 00        		.dw 0x0d,0x0a
00008286                    	.code
                            	LM58:
                            	LBE3:
00000A79                    	.debug
00000A79 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000A8D F9 00 00 00        		.dd LM59-_show
00000A8F 0D 00 0A 00        		.dw 0x0d,0x0a
00008286                    	.code
                            	LM59:
                            	L12:
                            	
00008286 4E 00              		sp+=14
00008287 88 98              		pop bp from [sp]
00008288 90 9A              		retf
                            		.endp	// end of show
                            	
00000A91                    	.debug
00000A91 2E 00 73 00        		.dw '.stabs "mode:p1",160,0,0,17',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 6F 00
         64 00 65 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         37 00 0D 00
         0A 00      
00008289                    	.CODE
00000AAE                    	.debug
00000AAE 2E 00 73 00        		.dw '.stabs "freq:p1",160,0,0,18',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 72 00
         65 00 71 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         38 00 0D 00
         0A 00      
00008289                    	.CODE
00000ACB                    	.debug
00000ACB 2E 00 73 00        		.dw '.stabs "mvol:p1",160,0,0,19',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 76 00
         6F 00 6C 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         39 00 0D 00
         0A 00      
00008289                    	.CODE
00000AE8                    	.debug
00000AE8 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000AFA 07 00 00 00        		.dd LBB3-_show
00000AFC 0D 00 0A 00        		.dw 0x0d,0x0a
00008289                    	.code
00000AFE                    	.debug
00000AFE 2E 00 73 00        		.dw '.stabs "tmp:20=ar1;0;7;1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 6D 00
         70 00 3A 00
         32 00 30 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 37 00
         3B 00 31 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00008289                    	.CODE
00000B23                    	.debug
00000B23 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000B35 F9 00 00 00        		.dd LBE3-_show
00000B37 0D 00 0A 00        		.dw 0x0d,0x0a
00008289                    	.code
00000B39                    	.debug
00000B39 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000B42 FC 00 00 00        		.dd LME3-_show
00000B44 0D 00 0A 00        		.dw 0x0d,0x0a
00008289                    	.code
                            	LME3:
                            	.public _buffer
00000001                    	.iram
                            	_buffer:
00000001 01 00              		.dw 1
00000002 E8 03              		.dw 1000
00000003 32 00              		.dw 50
00000004 01 00              		.dw 1
00000005 00 00              		.dw 0
00000006 00 00              		.dw 0
00000007 00 00 00 00        		.dw 2 dup(0)
00000B46                    	.debug
00000B46 2E 00 73 00        		.dw '.stabs "buffer:G21=ar1;0;7;4",32,0,0,',0,0,offset _buffer,seg _buffer,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         62 00 75 00
         66 00 66 00
         65 00 72 00
         3A 00 47 00
         32 00 31 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 37 00
         3B 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008289                    	.CODE
                            	.public _ZX
00000009                    	.iram
                            	_ZX:
00000009 00 02              		.dw 512
0000000A 10 02              		.dw 528
0000000B 20 02              		.dw 544
0000000C 30 02              		.dw 560
0000000D 40 02              		.dw 576
0000000E 50 02              		.dw 592
0000000F 5F 02              		.dw 607
00000010 6F 02              		.dw 623
00000011 7F 02              		.dw 639
00000012 8E 02              		.dw 654
00000013 9E 02              		.dw 670
00000014 AD 02              		.dw 685
00000015 BC 02              		.dw 700
00000016 CB 02              		.dw 715
00000017 D9 02              		.dw 729
00000018 E8 02              		.dw 744
00000019 F6 02              		.dw 758
0000001A 04 03              		.dw 772
0000001B 12 03              		.dw 786
0000001C 1F 03              		.dw 799
0000001D 2C 03              		.dw 812
0000001E 39 03              		.dw 825
0000001F 46 03              		.dw 838
00000020 52 03              		.dw 850
00000021 5E 03              		.dw 862
00000022 69 03              		.dw 873
00000023 75 03              		.dw 885
00000024 7F 03              		.dw 895
00000025 8A 03              		.dw 906
00000026 94 03              		.dw 916
00000027 9E 03              		.dw 926
00000028 A7 03              		.dw 935
00000029 B0 03              		.dw 944
0000002A B8 03              		.dw 952
0000002B C0 03              		.dw 960
0000002C C8 03              		.dw 968
0000002D CF 03              		.dw 975
0000002E D5 03              		.dw 981
0000002F DB 03              		.dw 987
00000030 E1 03              		.dw 993
00000031 E6 03              		.dw 998
00000032 EB 03              		.dw 1003
00000033 EF 03              		.dw 1007
00000034 F3 03              		.dw 1011
00000035 F6 03              		.dw 1014
00000036 F9 03              		.dw 1017
00000037 FB 03              		.dw 1019
00000038 FD 03              		.dw 1021
00000039 FE 03              		.dw 1022
0000003A FF 03              		.dw 1023
0000003B FF 03              		.dw 1023
0000003C FF 03              		.dw 1023
0000003D FF 03              		.dw 1023
0000003E FD 03              		.dw 1021
0000003F FC 03              		.dw 1020
00000040 F9 03              		.dw 1017
00000041 F7 03              		.dw 1015
00000042 F3 03              		.dw 1011
00000043 F0 03              		.dw 1008
00000044 EB 03              		.dw 1003
00000045 E7 03              		.dw 999
00000046 E1 03              		.dw 993
00000047 DC 03              		.dw 988
00000048 D6 03              		.dw 982
00000049 CF 03              		.dw 975
0000004A C8 03              		.dw 968
0000004B C0 03              		.dw 960
0000004C B8 03              		.dw 952
0000004D B0 03              		.dw 944
0000004E A7 03              		.dw 935
0000004F 9E 03              		.dw 926
00000050 94 03              		.dw 916
00000051 8A 03              		.dw 906
00000052 80 03              		.dw 896
00000053 75 03              		.dw 885
00000054 6A 03              		.dw 874
00000055 5E 03              		.dw 862
00000056 53 03              		.dw 851
00000057 46 03              		.dw 838
00000058 3A 03              		.dw 826
00000059 2D 03              		.dw 813
0000005A 20 03              		.dw 800
0000005B 12 03              		.dw 786
0000005C 05 03              		.dw 773
0000005D F7 02              		.dw 759
0000005E E9 02              		.dw 745
0000005F DA 02              		.dw 730
00000060 CB 02              		.dw 715
00000061 BD 02              		.dw 701
00000062 AE 02              		.dw 686
00000063 9E 02              		.dw 670
00000064 8F 02              		.dw 655
00000065 80 02              		.dw 640
00000066 70 02              		.dw 624
00000067 60 02              		.dw 608
00000068 50 02              		.dw 592
00000069 40 02              		.dw 576
0000006A 30 02              		.dw 560
0000006B 20 02              		.dw 544
0000006C 10 02              		.dw 528
0000006D 00 02              		.dw 512
0000006E F0 01              		.dw 496
0000006F E0 01              		.dw 480
00000070 D0 01              		.dw 464
00000071 C0 01              		.dw 448
00000072 B0 01              		.dw 432
00000073 A0 01              		.dw 416
00000074 91 01              		.dw 401
00000075 81 01              		.dw 385
00000076 72 01              		.dw 370
00000077 62 01              		.dw 354
00000078 53 01              		.dw 339
00000079 44 01              		.dw 324
0000007A 35 01              		.dw 309
0000007B 26 01              		.dw 294
0000007C 18 01              		.dw 280
0000007D 0A 01              		.dw 266
0000007E FC 00              		.dw 252
0000007F EE 00              		.dw 238
00000080 E1 00              		.dw 225
00000081 D3 00              		.dw 211
00000082 C6 00              		.dw 198
00000083 BA 00              		.dw 186
00000084 AE 00              		.dw 174
00000085 A2 00              		.dw 162
00000086 96 00              		.dw 150
00000087 8B 00              		.dw 139
00000088 80 00              		.dw 128
00000089 76 00              		.dw 118
0000008A 6C 00              		.dw 108
0000008B 62 00              		.dw 98
0000008C 59 00              		.dw 89
0000008D 50 00              		.dw 80
0000008E 47 00              		.dw 71
0000008F 3F 00              		.dw 63
00000090 38 00              		.dw 56
00000091 31 00              		.dw 49
00000092 2A 00              		.dw 42
00000093 24 00              		.dw 36
00000094 1E 00              		.dw 30
00000095 19 00              		.dw 25
00000096 14 00              		.dw 20
00000097 10 00              		.dw 16
00000098 0C 00              		.dw 12
00000099 09 00              		.dw 9
0000009A 06 00              		.dw 6
0000009B 04 00              		.dw 4
0000009C 02 00              		.dw 2
0000009D 01 00              		.dw 1
0000009E 00 00              		.dw 0
0000009F 00 00              		.dw 0
000000A0 00 00              		.dw 0
000000A1 00 00              		.dw 0
000000A2 02 00              		.dw 2
000000A3 03 00              		.dw 3
000000A4 06 00              		.dw 6
000000A5 08 00              		.dw 8
000000A6 0C 00              		.dw 12
000000A7 0F 00              		.dw 15
000000A8 13 00              		.dw 19
000000A9 18 00              		.dw 24
000000AA 1D 00              		.dw 29
000000AB 23 00              		.dw 35
000000AC 29 00              		.dw 41
000000AD 30 00              		.dw 48
000000AE 37 00              		.dw 55
000000AF 3E 00              		.dw 62
000000B0 46 00              		.dw 70
000000B1 4E 00              		.dw 78
000000B2 57 00              		.dw 87
000000B3 60 00              		.dw 96
000000B4 6A 00              		.dw 106
000000B5 74 00              		.dw 116
000000B6 7F 00              		.dw 127
000000B7 89 00              		.dw 137
000000B8 94 00              		.dw 148
000000B9 A0 00              		.dw 160
000000BA AC 00              		.dw 172
000000BB B8 00              		.dw 184
000000BC C5 00              		.dw 197
000000BD D1 00              		.dw 209
000000BE DE 00              		.dw 222
000000BF EC 00              		.dw 236
000000C0 FA 00              		.dw 250
000000C1 08 01              		.dw 264
000000C2 16 01              		.dw 278
000000C3 24 01              		.dw 292
000000C4 33 01              		.dw 307
000000C5 42 01              		.dw 322
000000C6 51 01              		.dw 337
000000C7 60 01              		.dw 352
000000C8 6F 01              		.dw 367
000000C9 7F 01              		.dw 383
000000CA 8E 01              		.dw 398
000000CB 9E 01              		.dw 414
000000CC AE 01              		.dw 430
000000CD BE 01              		.dw 446
000000CE CE 01              		.dw 462
000000CF DE 01              		.dw 478
000000D0 EE 01              		.dw 494
00000B71                    	.debug
00000B71 2E 00 73 00        		.dw '.stabs "ZX:G22=ar1;0;199;4",32,0,0,',0,0,offset _ZX,seg _ZX,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         5A 00 58 00
         3A 00 47 00
         32 00 32 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 31 00
         39 00 39 00
         3B 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 08 00
         00 00 0D 00
         0A 00      
00008289                    	.CODE
                            	.public _SJ
000000D1                    	.iram
                            	_SJ:
000000D1 00 00              		.dw 0
000000D2 0A 00              		.dw 10
000000D3 14 00              		.dw 20
000000D4 1E 00              		.dw 30
000000D5 28 00              		.dw 40
000000D6 32 00              		.dw 50
000000D7 3C 00              		.dw 60
000000D8 46 00              		.dw 70
000000D9 50 00              		.dw 80
000000DA 5A 00              		.dw 90
000000DB 64 00              		.dw 100
000000DC 6E 00              		.dw 110
000000DD 78 00              		.dw 120
000000DE 82 00              		.dw 130
000000DF 8C 00              		.dw 140
000000E0 96 00              		.dw 150
000000E1 A0 00              		.dw 160
000000E2 AA 00              		.dw 170
000000E3 B4 00              		.dw 180
000000E4 BE 00              		.dw 190
000000E5 C8 00              		.dw 200
000000E6 D2 00              		.dw 210
000000E7 DC 00              		.dw 220
000000E8 E6 00              		.dw 230
000000E9 F0 00              		.dw 240
000000EA FA 00              		.dw 250
000000EB 04 01              		.dw 260
000000EC 0E 01              		.dw 270
000000ED 18 01              		.dw 280
000000EE 22 01              		.dw 290
000000EF 2C 01              		.dw 300
000000F0 36 01              		.dw 310
000000F1 40 01              		.dw 320
000000F2 4A 01              		.dw 330
000000F3 54 01              		.dw 340
000000F4 5E 01              		.dw 350
000000F5 68 01              		.dw 360
000000F6 72 01              		.dw 370
000000F7 7C 01              		.dw 380
000000F8 86 01              		.dw 390
000000F9 90 01              		.dw 400
000000FA 9A 01              		.dw 410
000000FB A4 01              		.dw 420
000000FC AE 01              		.dw 430
000000FD B8 01              		.dw 440
000000FE C2 01              		.dw 450
000000FF CC 01              		.dw 460
00000100 D6 01              		.dw 470
00000101 E0 01              		.dw 480
00000102 EA 01              		.dw 490
00000103 F4 01              		.dw 500
00000104 FE 01              		.dw 510
00000105 08 02              		.dw 520
00000106 12 02              		.dw 530
00000107 1C 02              		.dw 540
00000108 26 02              		.dw 550
00000109 30 02              		.dw 560
0000010A 3A 02              		.dw 570
0000010B 44 02              		.dw 580
0000010C 4E 02              		.dw 590
0000010D 58 02              		.dw 600
0000010E 62 02              		.dw 610
0000010F 6C 02              		.dw 620
00000110 76 02              		.dw 630
00000111 80 02              		.dw 640
00000112 8A 02              		.dw 650
00000113 94 02              		.dw 660
00000114 9E 02              		.dw 670
00000115 A8 02              		.dw 680
00000116 B2 02              		.dw 690
00000117 BC 02              		.dw 700
00000118 C6 02              		.dw 710
00000119 D0 02              		.dw 720
0000011A DA 02              		.dw 730
0000011B E4 02              		.dw 740
0000011C EE 02              		.dw 750
0000011D F8 02              		.dw 760
0000011E 02 03              		.dw 770
0000011F 0C 03              		.dw 780
00000120 16 03              		.dw 790
00000121 20 03              		.dw 800
00000122 2A 03              		.dw 810
00000123 34 03              		.dw 820
00000124 3E 03              		.dw 830
00000125 48 03              		.dw 840
00000126 52 03              		.dw 850
00000127 5C 03              		.dw 860
00000128 66 03              		.dw 870
00000129 70 03              		.dw 880
0000012A 7A 03              		.dw 890
0000012B 84 03              		.dw 900
0000012C 8E 03              		.dw 910
0000012D 98 03              		.dw 920
0000012E A2 03              		.dw 930
0000012F AC 03              		.dw 940
00000130 B6 03              		.dw 950
00000131 C0 03              		.dw 960
00000132 CA 03              		.dw 970
00000133 D4 03              		.dw 980
00000134 DE 03              		.dw 990
00000135 E8 03              		.dw 1000
00000136 E8 03              		.dw 1000
00000137 DE 03              		.dw 990
00000138 D4 03              		.dw 980
00000139 CA 03              		.dw 970
0000013A C0 03              		.dw 960
0000013B B6 03              		.dw 950
0000013C AC 03              		.dw 940
0000013D A2 03              		.dw 930
0000013E 98 03              		.dw 920
0000013F 8E 03              		.dw 910
00000140 84 03              		.dw 900
00000141 7A 03              		.dw 890
00000142 70 03              		.dw 880
00000143 66 03              		.dw 870
00000144 5C 03              		.dw 860
00000145 52 03              		.dw 850
00000146 48 03              		.dw 840
00000147 3E 03              		.dw 830
00000148 34 03              		.dw 820
00000149 2A 03              		.dw 810
0000014A 20 03              		.dw 800
0000014B 16 03              		.dw 790
0000014C 0C 03              		.dw 780
0000014D 02 03              		.dw 770
0000014E F8 02              		.dw 760
0000014F EE 02              		.dw 750
00000150 E4 02              		.dw 740
00000151 DA 02              		.dw 730
00000152 D0 02              		.dw 720
00000153 C6 02              		.dw 710
00000154 BC 02              		.dw 700
00000155 B2 02              		.dw 690
00000156 A8 02              		.dw 680
00000157 9E 02              		.dw 670
00000158 94 02              		.dw 660
00000159 8A 02              		.dw 650
0000015A 80 02              		.dw 640
0000015B 76 02              		.dw 630
0000015C 6C 02              		.dw 620
0000015D 62 02              		.dw 610
0000015E 58 02              		.dw 600
0000015F 4E 02              		.dw 590
00000160 44 02              		.dw 580
00000161 3A 02              		.dw 570
00000162 30 02              		.dw 560
00000163 26 02              		.dw 550
00000164 1C 02              		.dw 540
00000165 12 02              		.dw 530
00000166 08 02              		.dw 520
00000167 FE 01              		.dw 510
00000168 F4 01              		.dw 500
00000169 EA 01              		.dw 490
0000016A E0 01              		.dw 480
0000016B D6 01              		.dw 470
0000016C CC 01              		.dw 460
0000016D C2 01              		.dw 450
0000016E B8 01              		.dw 440
0000016F AE 01              		.dw 430
00000170 A4 01              		.dw 420
00000171 9A 01              		.dw 410
00000172 90 01              		.dw 400
00000173 86 01              		.dw 390
00000174 7C 01              		.dw 380
00000175 72 01              		.dw 370
00000176 68 01              		.dw 360
00000177 5E 01              		.dw 350
00000178 54 01              		.dw 340
00000179 4A 01              		.dw 330
0000017A 40 01              		.dw 320
0000017B 36 01              		.dw 310
0000017C 2C 01              		.dw 300
0000017D 22 01              		.dw 290
0000017E 18 01              		.dw 280
0000017F 0E 01              		.dw 270
00000180 04 01              		.dw 260
00000181 FA 00              		.dw 250
00000182 F0 00              		.dw 240
00000183 E6 00              		.dw 230
00000184 DC 00              		.dw 220
00000185 D2 00              		.dw 210
00000186 C8 00              		.dw 200
00000187 BE 00              		.dw 190
00000188 B4 00              		.dw 180
00000189 AA 00              		.dw 170
0000018A A0 00              		.dw 160
0000018B 96 00              		.dw 150
0000018C 8C 00              		.dw 140
0000018D 82 00              		.dw 130
0000018E 78 00              		.dw 120
0000018F 6E 00              		.dw 110
00000190 64 00              		.dw 100
00000191 5A 00              		.dw 90
00000192 50 00              		.dw 80
00000193 46 00              		.dw 70
00000194 3C 00              		.dw 60
00000195 32 00              		.dw 50
00000196 28 00              		.dw 40
00000197 1E 00              		.dw 30
00000198 14 00              		.dw 20
00000199 0A 00              		.dw 10
0000019A 00 00              		.dw 0
00000B9A                    	.debug
00000B9A 2E 00 73 00        		.dw '.stabs "SJ:G23=ar1;0;201;4",32,0,0,',0,0,offset _SJ,seg _SJ,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 4A 00
         3A 00 47 00
         32 00 33 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 32 00
         30 00 31 00
         3B 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 D0 00
         00 00 0D 00
         0A 00      
00008289                    	.CODE
                            	.public _JX
0000019B                    	.iram
                            	_JX:
0000019B E8 03              		.dw 1000
0000019C E8 03              		.dw 1000
0000019D E8 03              		.dw 1000
0000019E E8 03              		.dw 1000
0000019F E8 03              		.dw 1000
000001A0 E8 03              		.dw 1000
000001A1 E8 03              		.dw 1000
000001A2 E8 03              		.dw 1000
000001A3 E8 03              		.dw 1000
000001A4 E8 03              		.dw 1000
000001A5 E8 03              		.dw 1000
000001A6 E8 03              		.dw 1000
000001A7 E8 03              		.dw 1000
000001A8 E8 03              		.dw 1000
000001A9 E8 03              		.dw 1000
000001AA E8 03              		.dw 1000
000001AB E8 03              		.dw 1000
000001AC E8 03              		.dw 1000
000001AD E8 03              		.dw 1000
000001AE E8 03              		.dw 1000
000001AF E8 03              		.dw 1000
000001B0 E8 03              		.dw 1000
000001B1 E8 03              		.dw 1000
000001B2 E8 03              		.dw 1000
000001B3 E8 03              		.dw 1000
000001B4 E8 03              		.dw 1000
000001B5 E8 03              		.dw 1000
000001B6 E8 03              		.dw 1000
000001B7 E8 03              		.dw 1000
000001B8 E8 03              		.dw 1000
000001B9 E8 03              		.dw 1000
000001BA E8 03              		.dw 1000
000001BB E8 03              		.dw 1000
000001BC E8 03              		.dw 1000
000001BD E8 03              		.dw 1000
000001BE E8 03              		.dw 1000
000001BF E8 03              		.dw 1000
000001C0 E8 03              		.dw 1000
000001C1 E8 03              		.dw 1000
000001C2 E8 03              		.dw 1000
000001C3 E8 03              		.dw 1000
000001C4 E8 03              		.dw 1000
000001C5 E8 03              		.dw 1000
000001C6 E8 03              		.dw 1000
000001C7 E8 03              		.dw 1000
000001C8 E8 03              		.dw 1000
000001C9 E8 03              		.dw 1000
000001CA E8 03              		.dw 1000
000001CB E8 03              		.dw 1000
000001CC E8 03              		.dw 1000
000001CD E8 03              		.dw 1000
000001CE E8 03              		.dw 1000
000001CF E8 03              		.dw 1000
000001D0 E8 03              		.dw 1000
000001D1 E8 03              		.dw 1000
000001D2 E8 03              		.dw 1000
000001D3 E8 03              		.dw 1000
000001D4 E8 03              		.dw 1000
000001D5 E8 03              		.dw 1000
000001D6 E8 03              		.dw 1000
000001D7 E8 03              		.dw 1000
000001D8 E8 03              		.dw 1000
000001D9 E8 03              		.dw 1000
000001DA E8 03              		.dw 1000
000001DB E8 03              		.dw 1000
000001DC E8 03              		.dw 1000
000001DD E8 03              		.dw 1000
000001DE E8 03              		.dw 1000
000001DF E8 03              		.dw 1000
000001E0 E8 03              		.dw 1000
000001E1 E8 03              		.dw 1000
000001E2 E8 03              		.dw 1000
000001E3 E8 03              		.dw 1000
000001E4 E8 03              		.dw 1000
000001E5 E8 03              		.dw 1000
000001E6 E8 03              		.dw 1000
000001E7 E8 03              		.dw 1000
000001E8 E8 03              		.dw 1000
000001E9 E8 03              		.dw 1000
000001EA E8 03              		.dw 1000
000001EB E8 03              		.dw 1000
000001EC E8 03              		.dw 1000
000001ED E8 03              		.dw 1000
000001EE E8 03              		.dw 1000
000001EF E8 03              		.dw 1000
000001F0 E8 03              		.dw 1000
000001F1 E8 03              		.dw 1000
000001F2 E8 03              		.dw 1000
000001F3 E8 03              		.dw 1000
000001F4 E8 03              		.dw 1000
000001F5 E8 03              		.dw 1000
000001F6 E8 03              		.dw 1000
000001F7 E8 03              		.dw 1000
000001F8 E8 03              		.dw 1000
000001F9 E8 03              		.dw 1000
000001FA E8 03              		.dw 1000
000001FB E8 03              		.dw 1000
000001FC E8 03              		.dw 1000
000001FD E8 03              		.dw 1000
000001FE E8 03              		.dw 1000
000001FF 00 00              		.dw 0
00000200 00 00              		.dw 0
00000201 00 00              		.dw 0
00000202 00 00              		.dw 0
00000203 00 00              		.dw 0
00000204 00 00              		.dw 0
00000205 00 00              		.dw 0
00000206 00 00              		.dw 0
00000207 00 00              		.dw 0
00000208 00 00              		.dw 0
00000209 00 00              		.dw 0
0000020A 00 00              		.dw 0
0000020B 00 00              		.dw 0
0000020C 00 00              		.dw 0
0000020D 00 00              		.dw 0
0000020E 00 00              		.dw 0
0000020F 00 00              		.dw 0
00000210 00 00              		.dw 0
00000211 00 00              		.dw 0
00000212 00 00              		.dw 0
00000213 00 00              		.dw 0
00000214 00 00              		.dw 0
00000215 00 00              		.dw 0
00000216 00 00              		.dw 0
00000217 00 00              		.dw 0
00000218 00 00              		.dw 0
00000219 00 00              		.dw 0
0000021A 00 00              		.dw 0
0000021B 00 00              		.dw 0
0000021C 00 00              		.dw 0
0000021D 00 00              		.dw 0
0000021E 00 00              		.dw 0
0000021F 00 00              		.dw 0
00000220 00 00              		.dw 0
00000221 00 00              		.dw 0
00000222 00 00              		.dw 0
00000223 00 00              		.dw 0
00000224 00 00              		.dw 0
00000225 00 00              		.dw 0
00000226 00 00              		.dw 0
00000227 00 00              		.dw 0
00000228 00 00              		.dw 0
00000229 00 00              		.dw 0
0000022A 00 00              		.dw 0
0000022B 00 00              		.dw 0
0000022C 00 00              		.dw 0
0000022D 00 00              		.dw 0
0000022E 00 00              		.dw 0
0000022F 00 00              		.dw 0
00000230 00 00              		.dw 0
00000231 00 00              		.dw 0
00000232 00 00              		.dw 0
00000233 00 00              		.dw 0
00000234 00 00              		.dw 0
00000235 00 00              		.dw 0
00000236 00 00              		.dw 0
00000237 00 00              		.dw 0
00000238 00 00              		.dw 0
00000239 00 00              		.dw 0
0000023A 00 00              		.dw 0
0000023B 00 00              		.dw 0
0000023C 00 00              		.dw 0
0000023D 00 00              		.dw 0
0000023E 00 00              		.dw 0
0000023F 00 00              		.dw 0
00000240 00 00              		.dw 0
00000241 00 00              		.dw 0
00000242 00 00              		.dw 0
00000243 00 00              		.dw 0
00000244 00 00              		.dw 0
00000245 00 00              		.dw 0
00000246 00 00              		.dw 0
00000247 00 00              		.dw 0
00000248 00 00              		.dw 0
00000249 00 00              		.dw 0
0000024A 00 00              		.dw 0
0000024B 00 00              		.dw 0
0000024C 00 00              		.dw 0
0000024D 00 00              		.dw 0
0000024E 00 00              		.dw 0
0000024F 00 00              		.dw 0
00000250 00 00              		.dw 0
00000251 00 00              		.dw 0
00000252 00 00              		.dw 0
00000253 00 00              		.dw 0
00000254 00 00              		.dw 0
00000255 00 00              		.dw 0
00000256 00 00              		.dw 0
00000257 00 00              		.dw 0
00000258 00 00              		.dw 0
00000259 00 00              		.dw 0
0000025A 00 00              		.dw 0
0000025B 00 00              		.dw 0
0000025C 00 00              		.dw 0
0000025D 00 00              		.dw 0
0000025E 00 00              		.dw 0
0000025F 00 00              		.dw 0
00000260 00 00              		.dw 0
00000261 00 00              		.dw 0
00000262 00 00              		.dw 0
00000BC3                    	.debug
00000BC3 2E 00 73 00        		.dw '.stabs "JX:G24=ar1;0;199;4",32,0,0,',0,0,offset _JX,seg _JX,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4A 00 58 00
         3A 00 47 00
         32 00 34 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 31 00
         39 00 39 00
         3B 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 9A 01
         00 00 0D 00
         0A 00      
00008289                    	.CODE
                            	.public _JU
00000263                    	.iram
                            	_JU:
00000263 E8 03              		.dw 1000
00000264 00 00              		.dw 0
00000BEC                    	.debug
00000BEC 2E 00 73 00        		.dw '.stabs "JU:G25=ar1;0;1;4",32,0,0,',0,0,offset _JU,seg _JU,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4A 00 55 00
         3A 00 47 00
         32 00 35 00
         3D 00 61 00
         72 00 31 00
         3B 00 30 00
         3B 00 31 00
         3B 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 62 02
         00 00 0D 00
         0A 00      
00008289                    	.CODE
00008289                    	.code
00000C13                    	.debug
00000C13 2E 00 73 00        		.dw '.stabs "delay:F19",36,0,0,',0,0,offset _delay,seg _delay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 65 00
         6C 00 61 00
         79 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         A3 01 00 00
         0D 00 0A 00
00008289                    	.CODE
                            	.public _delay
                            	_delay:	.proc
00000C33                    	.debug
00000C33 2E 00 73 00        		.dw '.stabs "F:/gao/dingshiqi/mian.c",0x84,0,0,',0,0,offset Ltext2, seg Ltext2,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 67 00
         61 00 6F 00
         2F 00 64 00
         69 00 6E 00
         67 00 73 00
         68 00 69 00
         71 00 69 00
         2F 00 6D 00
         69 00 61 00
         6E 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 38 00
         34 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         A3 01 00 00
         0D 00 0A 00
00008289                    	.code
00008289                    	.code
                            	Ltext2:
00000C63                    	.debug
00000C63 2E 00 73 00        		.dw '.stabn 0x44,0,28,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 38 00
         2C 00 00 00
         00 00      
00000C76 00 00 00 00        		.dd LM60-_delay
00000C78 0D 00 0A 00        		.dw 0x0d,0x0a
00008289                    	.code
                            	LM60:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008289 88 DA              		push bp to [sp]
0000828A 41 20              		sp-=1
0000828B 08 0B 01 00        		bp=sp+1
                            	
0000828D 0D 03 04 00        		R1=BP+4
00000C7A                    	.debug
00000C7A 2E 00 73 00        		.dw '.stabn 0x44,0,29,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 39 00
         2C 00 00 00
         00 00      
00000C8D 06 00 00 00        		.dd LM61-_delay
00000C8F 0D 00 0A 00        		.dw 0x0d,0x0a
0000828F                    	.code
                            	LM61:
                            	LBB4:
0000828F 0A 95 00 0F        		R2=3840	// QImode move
00008291 C5 D4              		[BP]=R2	// QImode move
00000C91                    	.debug
00000C91 2E 00 73 00        		.dw '.stabn 0x44,0,30,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 30 00
         2C 00 00 00
         00 00      
00000CA4 09 00 00 00        		.dd LM62-_delay
00000CA6 0D 00 0A 00        		.dw 0x0d,0x0a
00008292                    	.code
                            	LM62:
                            	L14:
00008292 C5 96              		R3=[BP]	// QImode move
00008293 0B 05 FF FF        		R2=R3+(-1)
00008295 02 97              		R3=R2	// QImode move
00008296 C5 D6              		[BP]=R3	// QImode move
00008297 0B 47 FF FF        		CMP R3,(-1)	// QImode compare
00008299 04 4E 01 EE        		NSJNZ L16	//QImode NE
         00 EE      
0000829C 0F 9F A3 82        		pc=L15	// Indirect jump
                            	L16:
00000CA8                    	.debug
00000CA8 2E 00 73 00        		.dw '.stabn 0x44,0,31,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 31 00
         2C 00 00 00
         00 00      
00000CBB 15 00 00 00        		.dd LM63-_delay
00000CBD 0D 00 0A 00        		.dw 0x0d,0x0a
0000829E                    	.code
                            	LM63:
0000829E 41 94              		R2=1	// QImode move
0000829F 1A D5 12 70        		[28690]=R2	// QImode move
000082A1 0F 9F 92 82        		pc=L14	// Indirect jump
                            	L15:
00000CBF                    	.debug
00000CBF 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
00000CD2 1A 00 00 00        		.dd LM64-_delay
00000CD4 0D 00 0A 00        		.dw 0x0d,0x0a
000082A3                    	.code
                            	LM64:
                            	LBE4:
00000CD6                    	.debug
00000CD6 2E 00 73 00        		.dw '.stabn 0x44,0,32,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 32 00
         2C 00 00 00
         00 00      
00000CE9 1A 00 00 00        		.dd LM65-_delay
00000CEB 0D 00 0A 00        		.dw 0x0d,0x0a
000082A3                    	.code
                            	LM65:
                            	L13:
                            	
000082A3 41 00              		sp+=1
000082A4 88 98              		pop bp from [sp]
000082A5 90 9A              		retf
                            		.endp	// end of delay
                            	
00000CED                    	.debug
00000CED 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000CFF 06 00 00 00        		.dd LBB4-_delay
00000D01 0D 00 0A 00        		.dw 0x0d,0x0a
000082A6                    	.code
00000D03                    	.debug
00000D03 2E 00 73 00        		.dw '.stabs "x:4",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 3A 00
         34 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000082A6                    	.CODE
00000D1B                    	.debug
00000D1B 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000D2D 1A 00 00 00        		.dd LBE4-_delay
00000D2F 0D 00 0A 00        		.dw 0x0d,0x0a
000082A6                    	.code
00000D31                    	.debug
00000D31 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000D3A 1D 00 00 00        		.dd LME4-_delay
00000D3C 0D 00 0A 00        		.dw 0x0d,0x0a
000082A6                    	.code
                            	LME4:
000082A6                    	.code
00000D3E                    	.debug
00000D3E 2E 00 73 00        		.dw '.stabs "shortdelay:F19",36,0,0,',0,0,offset _shortdelay,seg _shortdelay,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 64 00
         65 00 6C 00
         61 00 79 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 C0 01
         00 00 0D 00
         0A 00      
000082A6                    	.CODE
                            	.public _shortdelay
                            	_shortdelay:	.proc
00000D63                    	.debug
00000D63 2E 00 73 00        		.dw '.stabn 0x44,0,34,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 34 00
         2C 00 00 00
         00 00      
00000D76 00 00 00 00        		.dd LM66-_shortdelay
00000D78 0D 00 0A 00        		.dw 0x0d,0x0a
000082A6                    	.code
                            	LM66:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000082A6 88 DA              		push bp to [sp]
000082A7 41 20              		sp-=1
000082A8 08 0B 01 00        		bp=sp+1
                            	
000082AA 0D 03 04 00        		R1=BP+4
00000D7A                    	.debug
00000D7A 2E 00 73 00        		.dw '.stabn 0x44,0,35,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 35 00
         2C 00 00 00
         00 00      
00000D8D 06 00 00 00        		.dd LM67-_shortdelay
00000D8F 0D 00 0A 00        		.dw 0x0d,0x0a
000082AC                    	.code
                            	LM67:
                            	LBB5:
                            	L19:
000082AC 01 95              		R2=R1	// QImode move
000082AD C2 96              		R3=[R2]	// QImode move
000082AE 0B 05 FF FF        		R2=R3+(-1)
000082B0 02 97              		R3=R2	// QImode move
000082B1 01 95              		R2=R1	// QImode move
000082B2 C2 D6              		[R2]=R3	// QImode move
000082B3 0B 47 FF FF        		CMP R3,(-1)	// QImode compare
000082B5 04 4E 01 EE        		NSJNZ L21	//QImode NE
         00 EE      
000082B8 0F 9F CB 82        		pc=L20	// Indirect jump
                            	L21:
00000D91                    	.debug
00000D91 2E 00 73 00        		.dw '.stabn 0x44,0,37,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 37 00
         2C 00 00 00
         00 00      
00000DA4 14 00 00 00        		.dd LM68-_shortdelay
00000DA6 0D 00 0A 00        		.dw 0x0d,0x0a
000082BA                    	.code
                            	LM68:
                            	LBB6:
00000DA8                    	.debug
00000DA8 2E 00 73 00        		.dw '.stabn 0x44,0,38,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 38 00
         2C 00 00 00
         00 00      
00000DBB 14 00 00 00        		.dd LM69-_shortdelay
00000DBD 0D 00 0A 00        		.dw 0x0d,0x0a
000082BA                    	.code
                            	LM69:
000082BA 54 94              		R2=20	// QImode move
000082BB C5 D4              		[BP]=R2	// QImode move
                            	L22:
000082BC C5 94              		R2=[BP]	// QImode move
000082BD 40 44              		CMP R2,0	// QImode test
000082BE 04 4E 01 EE        		NSJNZ L24	//QImode NE
         00 EE      
000082C1 0F 9F C9 82        		pc=L23	// Indirect jump
                            	L25:
                            	L24:
000082C3 C5 94              		R2=[BP]	// QImode move
000082C4 0A 07 FF FF        		R3=R2+(-1)
000082C6 C5 D6              		[BP]=R3	// QImode move
000082C7 0F 9F BC 82        		pc=L22	// Indirect jump
                            	L23:
00000DBF                    	.debug
00000DBF 2E 00 73 00        		.dw '.stabn 0x44,0,39,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         33 00 39 00
         2C 00 00 00
         00 00      
00000DD2 23 00 00 00        		.dd LM70-_shortdelay
00000DD4 0D 00 0A 00        		.dw 0x0d,0x0a
000082C9                    	.code
                            	LM70:
                            	LBE6:
000082C9 0F 9F AC 82        		pc=L19	// Indirect jump
                            	L20:
00000DD6                    	.debug
00000DD6 2E 00 73 00        		.dw '.stabn 0x44,0,40,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 30 00
         2C 00 00 00
         00 00      
00000DE9 25 00 00 00        		.dd LM71-_shortdelay
00000DEB 0D 00 0A 00        		.dw 0x0d,0x0a
000082CB                    	.code
                            	LM71:
000082CB 41 94              		R2=1	// QImode move
000082CC 1A D5 12 70        		[28690]=R2	// QImode move
00000DED                    	.debug
00000DED 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
00000E00 28 00 00 00        		.dd LM72-_shortdelay
00000E02 0D 00 0A 00        		.dw 0x0d,0x0a
000082CE                    	.code
                            	LM72:
                            	LBE5:
00000E04                    	.debug
00000E04 2E 00 73 00        		.dw '.stabn 0x44,0,41,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 31 00
         2C 00 00 00
         00 00      
00000E17 28 00 00 00        		.dd LM73-_shortdelay
00000E19 0D 00 0A 00        		.dw 0x0d,0x0a
000082CE                    	.code
                            	LM73:
                            	L18:
                            	
000082CE 41 00              		sp+=1
000082CF 88 98              		pop bp from [sp]
000082D0 90 9A              		retf
                            		.endp	// end of shortdelay
                            	
00000E1B                    	.debug
00000E1B 2E 00 73 00        		.dw '.stabs "x:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         78 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         34 00 0D 00
         0A 00      
000082D1                    	.CODE
00000E34                    	.debug
00000E34 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E46 06 00 00 00        		.dd LBB5-_shortdelay
00000E48 0D 00 0A 00        		.dw 0x0d,0x0a
000082D1                    	.code
00000E4A                    	.debug
00000E4A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E5C 14 00 00 00        		.dd LBB6-_shortdelay
00000E5E 0D 00 0A 00        		.dw 0x0d,0x0a
000082D1                    	.code
00000E60                    	.debug
00000E60 2E 00 73 00        		.dw '.stabs "i:2",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 3A 00
         32 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000082D1                    	.CODE
00000E78                    	.debug
00000E78 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E8A 23 00 00 00        		.dd LBE6-_shortdelay
00000E8C 0D 00 0A 00        		.dw 0x0d,0x0a
000082D1                    	.code
00000E8E                    	.debug
00000E8E 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000EA0 28 00 00 00        		.dd LBE5-_shortdelay
00000EA2 0D 00 0A 00        		.dw 0x0d,0x0a
000082D1                    	.code
00000EA4                    	.debug
00000EA4 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000EAD 2B 00 00 00        		.dd LME5-_shortdelay
00000EAF 0D 00 0A 00        		.dw 0x0d,0x0a
000082D1                    	.code
                            	LME5:
                            	// ISR ATTRIBUTE FUNCTION, LOCATE in .text SECTION
00008009                    	.text
00000EB1                    	.debug
00000EB1 2E 00 73 00        		.dw '.stabs "IRQ1:F19",36,0,0,',0,0,offset _IRQ1,seg _IRQ1,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         49 00 52 00
         51 00 31 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 00 00
         00 00 0D 00
         0A 00      
00008009                    	.TEXT
                            	.public _IRQ1
                            	_IRQ1:	.proc
00000ED0                    	.debug
00000ED0 2E 00 73 00        		.dw '.stabn 0x44,0,44,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 34 00
         2C 00 00 00
         00 00      
00000EE3 00 00 00 00        		.dd LM74-_IRQ1
00000EE5 0D 00 0A 00        		.dw 0x0d,0x0a
00008009                    	.text
                            	LM74:
                            		// ISR ATTRIBUTE FUNCTION, PUSH r1,bp
00008009 A8 DA              		push r1,bp to [sp]
                            	
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000800A 41 20              		sp-=1
0000800B 08 0B 01 00        		bp=sp+1
                            	
0000800D 0D 03 04 00        		R1=BP+4
0000800F C5 D2              		[BP]=R1	// QImode move
00000EE7                    	.debug
00000EE7 2E 00 73 00        		.dw '.stabn 0x44,0,45,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 35 00
         2C 00 00 00
         00 00      
00000EFA 07 00 00 00        		.dd LM75-_IRQ1
00000EFC 0D 00 0A 00        		.dw 0x0d,0x0a
00008010                    	.text
                            	LM75:
00008010 11 93 07 00        		R1=[_buffer+6]	// QImode move
00008012 41 94              		R2=1	// QImode move
00008013 19 05 07 00        		[_buffer+6]=R1+R2  //addqi3_Qrr
00000EFE                    	.debug
00000EFE 2E 00 73 00        		.dw '.stabn 0x44,0,47,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 37 00
         2C 00 00 00
         00 00      
00000F11 0C 00 00 00        		.dd LM76-_IRQ1
00000F13 0D 00 0A 00        		.dw 0x0d,0x0a
00008015                    	.text
                            	LM76:
00008015 11 93 07 00        		R1=[_buffer+6]	// QImode move
00008017 09 43 C8 00        		CMP R1,200	// QImode compare
00008019 05 4E 01 EE        		NSJNZ L29	//QImode NE
         00 EE      
00000F15                    	.debug
00000F15 2E 00 73 00        		.dw '.stabn 0x44,0,49,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         34 00 39 00
         2C 00 00 00
         00 00      
00000F28 13 00 00 00        		.dd LM77-_IRQ1
00000F2A 0D 00 0A 00        		.dw 0x0d,0x0a
0000801C                    	.text
                            	LM77:
0000801C 40 92              		R1=0	// QImode move
0000801D 19 D3 07 00        		[_buffer+6]=R1	// QImode move
                            	L29:
00000F2C                    	.debug
00000F2C 2E 00 73 00        		.dw '.stabn 0x44,0,51,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 31 00
         2C 00 00 00
         00 00      
00000F3F 16 00 00 00        		.dd LM78-_IRQ1
00000F41 0D 00 0A 00        		.dw 0x0d,0x0a
0000801F                    	.text
                            	LM78:
0000801F 12 95 01 00        		R2=[_buffer]	// QImode move
00008021 02 93              		R1=R2	// QImode move
00008022 46 42              		CMP R1,6	// QImode compare
00008023 02 8E 0F 9F        		NSJA L38	//QImode GTU
         C0 80      
00008026 0A 95 2C 80        		R2=L39	// QImode move
00008028 02 03              		R1 = R1 + R2	//addqi3
00008029 01 95              		R2=R1	// QImode move
0000802A C2 92              		R1=[R2]	// QImode move
0000802B 01 9F              		pc=R1	// tablejump
0000802C                    	.text
                            	L39:
0000802C 36 80              		.dw L31
0000802D 44 80              		.dw L32
0000802E 52 80              		.dw L33
0000802F 60 80              		.dw L34
00008030 75 80              		.dw L35
00008031 8A 80              		.dw L36
00008032 9F 80              		.dw L37
                            	// ISR ATTRIBUTE FUNCTION, LOCATE in .text SECTION
00008033                    	.text
00000F43                    	.debug
00000F43 2E 00 73 00        		.dw '.stabn 0x44,0,53,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 33 00
         2C 00 00 00
         00 00      
00000F56 2A 00 00 00        		.dd LM79-_IRQ1
00000F58 0D 00 0A 00        		.dw 0x0d,0x0a
00008033                    	.text
                            	LM79:
00008033 41 92              		R1=1	// QImode move
00008034 19 D3 12 70        		[28690]=R1	// QImode move
                            	L31:
00000F5A                    	.debug
00000F5A 2E 00 73 00        		.dw '.stabn 0x44,0,55,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 35 00
         2C 00 00 00
         00 00      
00000F6D 2D 00 00 00        		.dd LM80-_IRQ1
00000F6F 0D 00 0A 00        		.dw 0x0d,0x0a
00008036                    	.text
                            	LM80:
00008036 09 93 9B 01        		R1=_JX	// QImode move
00008038 12 95 07 00        		R2=[_buffer+6]	// QImode move
0000803A 02 03              		R1 = R1 + R2	//addqi3
0000803B 01 97              		R3=R1	// QImode move
0000803C C3 94              		R2=[R3]	// QImode move
0000803D 11 93 03 00        		R1=[_buffer+2]	// QImode move
0000803F 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
00008040 1B D7 05 00        		[_buffer+4]=R3	// QImode move
00000F71                    	.debug
00000F71 2E 00 73 00        		.dw '.stabn 0x44,0,56,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 36 00
         2C 00 00 00
         00 00      
00000F84 39 00 00 00        		.dd LM81-_IRQ1
00000F86 0D 00 0A 00        		.dw 0x0d,0x0a
00008042                    	.text
                            	LM81:
00008042 0F 9F C2 80        		pc=L30	// Indirect jump
                            	L32:
00000F88                    	.debug
00000F88 2E 00 73 00        		.dw '.stabn 0x44,0,58,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 38 00
         2C 00 00 00
         00 00      
00000F9B 3B 00 00 00        		.dd LM82-_IRQ1
00000F9D 0D 00 0A 00        		.dw 0x0d,0x0a
00008044                    	.text
                            	LM82:
00008044 09 93 D1 00        		R1=_SJ	// QImode move
00008046 12 95 07 00        		R2=[_buffer+6]	// QImode move
00008048 02 03              		R1 = R1 + R2	//addqi3
00008049 01 97              		R3=R1	// QImode move
0000804A C3 94              		R2=[R3]	// QImode move
0000804B 11 93 03 00        		R1=[_buffer+2]	// QImode move
0000804D 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
0000804E 1B D7 05 00        		[_buffer+4]=R3	// QImode move
00000F9F                    	.debug
00000F9F 2E 00 73 00        		.dw '.stabn 0x44,0,59,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         35 00 39 00
         2C 00 00 00
         00 00      
00000FB2 47 00 00 00        		.dd LM83-_IRQ1
00000FB4 0D 00 0A 00        		.dw 0x0d,0x0a
00008050                    	.text
                            	LM83:
00008050 0F 9F C2 80        		pc=L30	// Indirect jump
                            	L33:
00000FB6                    	.debug
00000FB6 2E 00 73 00        		.dw '.stabn 0x44,0,61,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 31 00
         2C 00 00 00
         00 00      
00000FC9 49 00 00 00        		.dd LM84-_IRQ1
00000FCB 0D 00 0A 00        		.dw 0x0d,0x0a
00008052                    	.text
                            	LM84:
00008052 09 93 09 00        		R1=_ZX	// QImode move
00008054 12 95 07 00        		R2=[_buffer+6]	// QImode move
00008056 02 03              		R1 = R1 + R2	//addqi3
00008057 01 97              		R3=R1	// QImode move
00008058 C3 94              		R2=[R3]	// QImode move
00008059 11 93 03 00        		R1=[_buffer+2]	// QImode move
0000805B 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
0000805C 1B D7 05 00        		[_buffer+4]=R3	// QImode move
00000FCD                    	.debug
00000FCD 2E 00 73 00        		.dw '.stabn 0x44,0,62,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 32 00
         2C 00 00 00
         00 00      
00000FE0 55 00 00 00        		.dd LM85-_IRQ1
00000FE2 0D 00 0A 00        		.dw 0x0d,0x0a
0000805E                    	.text
                            	LM85:
0000805E 0F 9F C2 80        		pc=L30	// Indirect jump
                            	L34:
00000FE4                    	.debug
00000FE4 2E 00 73 00        		.dw '.stabn 0x44,0,64,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 34 00
         2C 00 00 00
         00 00      
00000FF7 57 00 00 00        		.dd LM86-_IRQ1
00000FF9 0D 00 0A 00        		.dw 0x0d,0x0a
00008060                    	.text
                            	LM86:
00008060 09 93 D1 00        		R1=_SJ	// QImode move
00008062 12 95 07 00        		R2=[_buffer+6]	// QImode move
00008064 02 03              		R1 = R1 + R2	//addqi3
00008065 0A 95 9B 01        		R2=_JX	// QImode move
00008067 13 97 07 00        		R3=[_buffer+6]	// QImode move
00008069 03 05              		R2 = R2 + R3	//addqi3
0000806A 01 99              		R4=R1	// QImode move
0000806B C4 96              		R3=[R4]	// QImode move
0000806C 03 93              		R1=R3	// QImode move
0000806D 02 97              		R3=R2	// QImode move
0000806E C3 02              		R1 = R1 + [R3]	//addqi3
0000806F 61 95              		R2=R1 lsr 1
00008070 11 93 03 00        		R1=[_buffer+2]	// QImode move
00008072 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
00008073 1B D7 05 00        		[_buffer+4]=R3	// QImode move
                            	L35:
00000FFB                    	.debug
00000FFB 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
0000100E 6C 00 00 00        		.dd LM87-_IRQ1
00001010 0D 00 0A 00        		.dw 0x0d,0x0a
00008075                    	.text
                            	LM87:
00008075 09 93 09 00        		R1=_ZX	// QImode move
00008077 12 95 07 00        		R2=[_buffer+6]	// QImode move
00008079 02 03              		R1 = R1 + R2	//addqi3
0000807A 0A 95 9B 01        		R2=_JX	// QImode move
0000807C 13 97 07 00        		R3=[_buffer+6]	// QImode move
0000807E 03 05              		R2 = R2 + R3	//addqi3
0000807F 01 99              		R4=R1	// QImode move
00008080 C4 96              		R3=[R4]	// QImode move
00008081 03 93              		R1=R3	// QImode move
00008082 02 97              		R3=R2	// QImode move
00008083 C3 02              		R1 = R1 + [R3]	//addqi3
00008084 61 95              		R2=R1 lsr 1
00008085 11 93 03 00        		R1=[_buffer+2]	// QImode move
00008087 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
00008088 1B D7 05 00        		[_buffer+4]=R3	// QImode move
                            	L36:
00001012                    	.debug
00001012 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
00001025 81 00 00 00        		.dd LM88-_IRQ1
00001027 0D 00 0A 00        		.dw 0x0d,0x0a
0000808A                    	.text
                            	LM88:
0000808A 09 93 09 00        		R1=_ZX	// QImode move
0000808C 12 95 07 00        		R2=[_buffer+6]	// QImode move
0000808E 02 03              		R1 = R1 + R2	//addqi3
0000808F 0A 95 D1 00        		R2=_SJ	// QImode move
00008091 13 97 07 00        		R3=[_buffer+6]	// QImode move
00008093 03 05              		R2 = R2 + R3	//addqi3
00008094 01 99              		R4=R1	// QImode move
00008095 C4 96              		R3=[R4]	// QImode move
00008096 03 93              		R1=R3	// QImode move
00008097 02 97              		R3=R2	// QImode move
00008098 C3 02              		R1 = R1 + [R3]	//addqi3
00008099 61 95              		R2=R1 lsr 1
0000809A 11 93 03 00        		R1=[_buffer+2]	// QImode move
0000809C 09 F5              		mr=R2*R1	// r3=R2*R1 16bit=16bit*16bit
0000809D 1B D7 05 00        		[_buffer+4]=R3	// QImode move
                            	L37:
00001029                    	.debug
00001029 2E 00 73 00        		.dw '.stabn 0x44,0,70,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 30 00
         2C 00 00 00
         00 00      
0000103C 96 00 00 00        		.dd LM89-_IRQ1
0000103E 0D 00 0A 00        		.dw 0x0d,0x0a
0000809F                    	.text
                            	LM89:
0000809F 09 93 09 00        		R1=_ZX	// QImode move
000080A1 12 95 07 00        		R2=[_buffer+6]	// QImode move
000080A3 02 03              		R1 = R1 + R2	//addqi3
000080A4 0A 95 D1 00        		R2=_SJ	// QImode move
000080A6 13 97 07 00        		R3=[_buffer+6]	// QImode move
000080A8 03 05              		R2 = R2 + R3	//addqi3
000080A9 01 99              		R4=R1	// QImode move
000080AA C4 96              		R3=[R4]	// QImode move
000080AB 03 93              		R1=R3	// QImode move
000080AC 02 97              		R3=R2	// QImode move
000080AD C3 02              		R1 = R1 + [R3]	//addqi3
000080AE 0A 95 9B 01        		R2=_JX	// QImode move
000080B0 13 97 07 00        		R3=[_buffer+6]	// QImode move
000080B2 03 05              		R2 = R2 + R3	//addqi3
000080B3 02 99              		R4=R2	// QImode move
000080B4 C4 02              		R1 = R1 + [R4]	//addqi3
000080B5 43 94              		R2=3	// QImode move
000080B6 C8 D4              		[SP--]=R2	// QImode move
000080B7 C8 D2              		[SP--]=R1	// QImode move
000080B8 40 F0 A2 84        		call __divu1	// call with return value
000080BA 42 00              		SP = SP + 2	//SP
000080BB 12 95 03 00        		R2=[_buffer+2]	// QImode move
000080BD 0A F3              		mr=R1*R2	// r3=R1*R2 16bit=16bit*16bit
000080BE 1B D7 05 00        		[_buffer+4]=R3	// QImode move
                            	L38:
00001040                    	.debug
00001040 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
00001053 B7 00 00 00        		.dd LM90-_IRQ1
00001055 0D 00 0A 00        		.dw 0x0d,0x0a
000080C0                    	.text
                            	LM90:
000080C0 0F 9F C2 80        		pc=L30	// Indirect jump
                            	L30:
00001057                    	.debug
00001057 2E 00 73 00        		.dw '.stabn 0x44,0,78,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 38 00
         2C 00 00 00
         00 00      
0000106A B9 00 00 00        		.dd LM91-_IRQ1
0000106C 0D 00 0A 00        		.dw 0x0d,0x0a
000080C2                    	.text
                            	LM91:
000080C2 09 93 00 10        		R1=4096	// QImode move
000080C4 19 D3 11 70        		[28689]=R1	// QImode move
0000106E                    	.debug
0000106E 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00001081 BD 00 00 00        		.dd LM92-_IRQ1
00001083 0D 00 0A 00        		.dw 0x0d,0x0a
000080C6                    	.text
                            	LM92:
00001085                    	.debug
00001085 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
00001098 BD 00 00 00        		.dd LM93-_IRQ1
0000109A 0D 00 0A 00        		.dw 0x0d,0x0a
000080C6                    	.text
                            	LM93:
                            	L28:
                            	
000080C6 41 00              		sp+=1
                            		// ISR ATTRIBUTE FUNCTION, POP r1,bp
000080C7 A8 90              		pop r1,bp from [sp]
000080C8 98 9A              		reti
                            		.endp	// end of IRQ1
                            	
0000109C                    	.debug
0000109C 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000010A5 C0 00 00 00        		.dd LME6-_IRQ1
000010A7 0D 00 0A 00        		.dw 0x0d,0x0a
000080C9                    	.text
                            	LME6:
000082D1                    	.code
000010A9                    	.debug
000010A9 2E 00 73 00        		.dw '.stabs "KeyScan:F19",36,0,0,',0,0,offset _KeyScan,seg _KeyScan,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 53 00
         63 00 61 00
         6E 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         EB 01 00 00
         0D 00 0A 00
000082D1                    	.CODE
                            	.public _KeyScan
                            	_KeyScan:	.proc
000010CB                    	.debug
000010CB 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
000010DE 00 00 00 00        		.dd LM94-_KeyScan
000010E0 0D 00 0A 00        		.dw 0x0d,0x0a
000082D1                    	.code
                            	LM94:
                            		// total=3, vars=3
                            		// frame_pointer_needed: 1
000082D1 88 DA              		push bp to [sp]
000082D2 43 20              		sp-=3
000082D3 08 0B 01 00        		bp=sp+1
                            	
000082D5 0D 03 06 00        		R1=BP+6
000010E2                    	.debug
000010E2 2E 00 73 00        		.dw '.stabn 0x44,0,84,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 34 00
         2C 00 00 00
         00 00      
000010F5 06 00 00 00        		.dd LM95-_KeyScan
000010F7 0D 00 0A 00        		.dw 0x0d,0x0a
000082D7                    	.code
                            	LM95:
                            	LBB7:
000010F9                    	.debug
000010F9 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
0000110C 06 00 00 00        		.dd LM96-_KeyScan
0000110E 0D 00 0A 00        		.dw 0x0d,0x0a
000082D7                    	.code
                            	LM96:
000082D7 41 94              		R2=1	// QImode move
000082D8 1A D5 12 70        		[28690]=R2	// QImode move
00001110                    	.debug
00001110 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
00001123 09 00 00 00        		.dd LM97-_KeyScan
00001125 0D 00 0A 00        		.dw 0x0d,0x0a
000082DA                    	.code
                            	LM97:
000082DA 12 95 07 70        		R2=[28679]	// QImode move
000082DC 0A B7 00 FF        		R3=R2&(-256)
000082DE 1B D7 07 70        		[28679]=R3	// QImode move
00001127                    	.debug
00001127 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
0000113A 0F 00 00 00        		.dd LM98-_KeyScan
0000113C 0D 00 0A 00        		.dw 0x0d,0x0a
000082E0                    	.code
                            	LM98:
000082E0 12 95 08 70        		R2=[28680]	// QImode move
000082E2 0A B7 00 FF        		R3=R2&(-256)
000082E4 1B D7 08 70        		[28680]=R3	// QImode move
0000113E                    	.debug
0000113E 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
00001151 15 00 00 00        		.dd LM99-_KeyScan
00001153 0D 00 0A 00        		.dw 0x0d,0x0a
000082E6                    	.code
                            	LM99:
000082E6 12 95 00 70        		R2=[28672]	// QImode move
000082E8 0A B7 00 FF        		R3=R2&(-256)
000082EA 1B D7 00 70        		[28672]=R3	// QImode move
00001155                    	.debug
00001155 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
00001168 1B 00 00 00        		.dd LM100-_KeyScan
0000116A 0D 00 0A 00        		.dw 0x0d,0x0a
000082EC                    	.code
                            	LM100:
000082EC 12 95 05 70        		R2=[28677]	// QImode move
000082EE C5 D4              		[BP]=R2	// QImode move
0000116C                    	.debug
0000116C 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
0000117F 1E 00 00 00        		.dd LM101-_KeyScan
00001181 0D 00 0A 00        		.dw 0x0d,0x0a
000082EF                    	.code
                            	LM101:
000082EF 05 97              		R3=BP	// QImode move
000082F0 0D 05 01 00        		R2=BP+1
000082F2 C5 96              		R3=[BP]	// QImode move
000082F3 0B 89 FF FF        		R4=R3^0xffff	// one_cmplqi2
000082F5 02 97              		R3=R2	// QImode move
000082F6 C3 D8              		[R3]=R4	// QImode move
00001183                    	.debug
00001183 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
00001196 26 00 00 00        		.dd LM102-_KeyScan
00001198 0D 00 0A 00        		.dw 0x0d,0x0a
000082F7                    	.code
                            	LM102:
000082F7 05 97              		R3=BP	// QImode move
000082F8 0D 05 01 00        		R2=BP+1
000082FA 05 97              		R3=BP	// QImode move
000082FB 0D 09 01 00        		R4=BP+1
000082FD 02 D8              		[bp+2]=R4	// QImode move
000082FE 02 96              		R3=[bp+2]	// QImode move
000082FF C3 96              		R3=[R3]	// QImode move
00008300 0B B9 FF 00        		R4=R3&255
00008302 02 97              		R3=R2	// QImode move
00008303 C3 D8              		[R3]=R4	// QImode move
0000119A                    	.debug
0000119A 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
000011AD 33 00 00 00        		.dd LM103-_KeyScan
000011AF 0D 00 0A 00        		.dw 0x0d,0x0a
00008304                    	.code
                            	LM103:
00008304 05 95              		R2=BP	// QImode move
00008305 0D 07 01 00        		R3=BP+1
00008307 03 99              		R4=R3	// QImode move
00008308 C4 94              		R2=[R4]	// QImode move
00008309 40 44              		CMP R2,0	// QImode test
0000830A 02 4E 0F 9F        		NSJZ L43	//QImode EQ
         B5 83      
000011B1                    	.debug
000011B1 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
000011C4 3C 00 00 00        		.dd LM104-_KeyScan
000011C6 0D 00 0A 00        		.dw 0x0d,0x0a
0000830D                    	.code
                            	LM104:
0000830D 05 95              		R2=BP	// QImode move
0000830E 0D 07 01 00        		R3=BP+1
00008310 03 99              		R4=R3	// QImode move
00008311 C4 94              		R2=[R4]	// QImode move
00008312 48 44              		CMP R2,8	// QImode compare
00008313 02 4E 0F 9F        		NSJZ L51	//QImode EQ
         79 83      
00008316 48 44              		CMP R2,8	// QImode compare
00008317 16 BE 01 EE        		NSJG L60	//QImode GT
         00 EE      
0000831A 42 44              		CMP R2,2	// QImode compare
0000831B 02 4E 0F 9F        		NSJZ L55	//QImode EQ
         9C 83      
0000831E 42 44              		CMP R2,2	// QImode compare
0000831F 08 BE 01 EE        		NSJG L61	//QImode GT
         00 EE      
00008322 41 44              		CMP R2,1	// QImode compare
00008323 02 4E 0F 9F        		NSJZ L57	//QImode EQ
         AE 83      
00008326 0F 9F B3 83        		pc=L58	// Indirect jump
                            	L61:
00008328 44 44              		CMP R2,4	// QImode compare
00008329 02 4E 0F 9F        		NSJZ L53	//QImode EQ
         8A 83      
0000832C 0F 9F B3 83        		pc=L58	// Indirect jump
                            	L60:
0000832E 60 44              		CMP R2,32	// QImode compare
0000832F 30 5E 01 EE        		NSJZ L48	//QImode EQ
         00 EE      
00008332 60 44              		CMP R2,32	// QImode compare
00008333 08 BE 01 EE        		NSJG L62	//QImode GT
         00 EE      
00008336 50 44              		CMP R2,16	// QImode compare
00008337 39 5E 01 EE        		NSJZ L50	//QImode EQ
         00 EE      
0000833A 0F 9F B3 83        		pc=L58	// Indirect jump
                            	L62:
0000833C 0A 45 40 00        		CMP R2,64	// QImode compare
0000833E 19 5E 01 EE        		NSJZ L47	//QImode EQ
         00 EE      
00008341 0A 45 80 00        		CMP R2,128	// QImode compare
00008343 04 5E 01 EE        		NSJZ L45	//QImode EQ
         00 EE      
00008346 0F 9F B3 83        		pc=L58	// Indirect jump
                            	L45:
000011C8                    	.debug
000011C8 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
000011DB 77 00 00 00        		.dd LM105-_KeyScan
000011DD 0D 00 0A 00        		.dw 0x0d,0x0a
00008348                    	.code
                            	LM105:
00008348 12 95 01 00        		R2=[_buffer]	// QImode move
0000834A 41 96              		R3=1	// QImode move
0000834B 1A 07 01 00        		[_buffer]=R2+R3  //addqi3_Qrr
000011DF                    	.debug
000011DF 2E 00 73 00        		.dw '.stabn 0x44,0,100,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         30 00 2C 00
         00 00 00 00
000011F3 7C 00 00 00        		.dd LM106-_KeyScan
000011F5 0D 00 0A 00        		.dw 0x0d,0x0a
0000834D                    	.code
                            	LM106:
0000834D 12 95 01 00        		R2=[_buffer]	// QImode move
0000834F 47 44              		CMP R2,7	// QImode compare
00008350 05 4E 01 EE        		NSJNZ L46	//QImode NE
         00 EE      
000011F7                    	.debug
000011F7 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
0000120B 82 00 00 00        		.dd LM107-_KeyScan
0000120D 0D 00 0A 00        		.dw 0x0d,0x0a
00008353                    	.code
                            	LM107:
00008353 40 94              		R2=0	// QImode move
00008354 1A D5 01 00        		[_buffer]=R2	// QImode move
                            	L46:
0000120F                    	.debug
0000120F 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
00001223 85 00 00 00        		.dd LM108-_KeyScan
00001225 0D 00 0A 00        		.dw 0x0d,0x0a
00008356                    	.code
                            	LM108:
00008356 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L47:
00001227                    	.debug
00001227 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
0000123B 87 00 00 00        		.dd LM109-_KeyScan
0000123D 0D 00 0A 00        		.dw 0x0d,0x0a
00008358                    	.code
                            	LM109:
00008358 12 95 02 00        		R2=[_buffer+1]	// QImode move
0000835A 0B 97 E8 03        		R3=1000	// QImode move
0000835C 1A 07 02 00        		[_buffer+1]=R2+R3  //addqi3_Qrr
0000123F                    	.debug
0000123F 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
00001253 8D 00 00 00        		.dd LM110-_KeyScan
00001255 0D 00 0A 00        		.dw 0x0d,0x0a
0000835E                    	.code
                            	LM110:
0000835E 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L48:
00001257                    	.debug
00001257 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
0000126B 8F 00 00 00        		.dd LM111-_KeyScan
0000126D 0D 00 0A 00        		.dw 0x0d,0x0a
00008360                    	.code
                            	LM111:
00008360 12 95 02 00        		R2=[_buffer+1]	// QImode move
00008362 0B 67 E8 03        		R3=(-1000)	// QImode move
00008364 1A 07 02 00        		[_buffer+1]=R2+R3  //addqi3_Qrr
0000126F                    	.debug
0000126F 2E 00 73 00        		.dw '.stabn 0x44,0,108,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         38 00 2C 00
         00 00 00 00
00001283 95 00 00 00        		.dd LM112-_KeyScan
00001285 0D 00 0A 00        		.dw 0x0d,0x0a
00008366                    	.code
                            	LM112:
00008366 12 95 02 00        		R2=[_buffer+1]	// QImode move
00008368 40 44              		CMP R2,0	// QImode test
00008369 05 4E 01 EE        		NSJNZ L49	//QImode NE
         00 EE      
00001287                    	.debug
00001287 2E 00 73 00        		.dw '.stabn 0x44,0,109,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         39 00 2C 00
         00 00 00 00
0000129B 9B 00 00 00        		.dd LM113-_KeyScan
0000129D 0D 00 0A 00        		.dw 0x0d,0x0a
0000836C                    	.code
                            	LM113:
0000836C 40 94              		R2=0	// QImode move
0000836D 1A D5 02 00        		[_buffer+1]=R2	// QImode move
                            	L49:
0000129F                    	.debug
0000129F 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
000012B3 9E 00 00 00        		.dd LM114-_KeyScan
000012B5 0D 00 0A 00        		.dw 0x0d,0x0a
0000836F                    	.code
                            	LM114:
0000836F 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L50:
000012B7                    	.debug
000012B7 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
000012CB A0 00 00 00        		.dd LM115-_KeyScan
000012CD 0D 00 0A 00        		.dw 0x0d,0x0a
00008371                    	.code
                            	LM115:
00008371 12 95 02 00        		R2=[_buffer+1]	// QImode move
00008373 0B 97 64 00        		R3=100	// QImode move
00008375 1A 07 02 00        		[_buffer+1]=R2+R3  //addqi3_Qrr
000012CF                    	.debug
000012CF 2E 00 73 00        		.dw '.stabn 0x44,0,113,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         33 00 2C 00
         00 00 00 00
000012E3 A6 00 00 00        		.dd LM116-_KeyScan
000012E5 0D 00 0A 00        		.dw 0x0d,0x0a
00008377                    	.code
                            	LM116:
00008377 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L51:
000012E7                    	.debug
000012E7 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
000012FB A8 00 00 00        		.dd LM117-_KeyScan
000012FD 0D 00 0A 00        		.dw 0x0d,0x0a
00008379                    	.code
                            	LM117:
00008379 12 95 02 00        		R2=[_buffer+1]	// QImode move
0000837B 0B 67 64 00        		R3=(-100)	// QImode move
0000837D 1A 07 02 00        		[_buffer+1]=R2+R3  //addqi3_Qrr
000012FF                    	.debug
000012FF 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
00001313 AE 00 00 00        		.dd LM118-_KeyScan
00001315 0D 00 0A 00        		.dw 0x0d,0x0a
0000837F                    	.code
                            	LM118:
0000837F 12 95 02 00        		R2=[_buffer+1]	// QImode move
00008381 40 44              		CMP R2,0	// QImode test
00008382 05 4E 01 EE        		NSJNZ L52	//QImode NE
         00 EE      
00001317                    	.debug
00001317 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
0000132B B4 00 00 00        		.dd LM119-_KeyScan
0000132D 0D 00 0A 00        		.dw 0x0d,0x0a
00008385                    	.code
                            	LM119:
00008385 40 94              		R2=0	// QImode move
00008386 1A D5 02 00        		[_buffer+1]=R2	// QImode move
                            	L52:
0000132F                    	.debug
0000132F 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
00001343 B7 00 00 00        		.dd LM120-_KeyScan
00001345 0D 00 0A 00        		.dw 0x0d,0x0a
00008388                    	.code
                            	LM120:
00008388 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L53:
00001347                    	.debug
00001347 2E 00 73 00        		.dw '.stabn 0x44,0,120,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         30 00 2C 00
         00 00 00 00
0000135B B9 00 00 00        		.dd LM121-_KeyScan
0000135D 0D 00 0A 00        		.dw 0x0d,0x0a
0000838A                    	.code
                            	LM121:
0000838A 12 95 03 00        		R2=[_buffer+2]	// QImode move
0000838C 72 44              		CMP R2,50	// QImode compare
0000838D 07 4E 01 EE        		NSJNZ L54	//QImode NE
         00 EE      
0000135F                    	.debug
0000135F 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00001373 BF 00 00 00        		.dd LM122-_KeyScan
00001375 0D 00 0A 00        		.dw 0x0d,0x0a
00008390                    	.code
                            	LM122:
00008390 40 94              		R2=0	// QImode move
00008391 1A D5 03 00        		[_buffer+2]=R2	// QImode move
00001377                    	.debug
00001377 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
0000138B C2 00 00 00        		.dd LM123-_KeyScan
0000138D 0D 00 0A 00        		.dw 0x0d,0x0a
00008393                    	.code
                            	LM123:
00008393 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L54:
0000138F                    	.debug
0000138F 2E 00 73 00        		.dw '.stabn 0x44,0,125,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         35 00 2C 00
         00 00 00 00
000013A3 C4 00 00 00        		.dd LM124-_KeyScan
000013A5 0D 00 0A 00        		.dw 0x0d,0x0a
00008395                    	.code
                            	LM124:
00008395 12 95 03 00        		R2=[_buffer+2]	// QImode move
00008397 41 96              		R3=1	// QImode move
00008398 1A 07 03 00        		[_buffer+2]=R2+R3  //addqi3_Qrr
000013A7                    	.debug
000013A7 2E 00 73 00        		.dw '.stabn 0x44,0,126,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         36 00 2C 00
         00 00 00 00
000013BB C9 00 00 00        		.dd LM125-_KeyScan
000013BD 0D 00 0A 00        		.dw 0x0d,0x0a
0000839A                    	.code
                            	LM125:
0000839A 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L55:
000013BF                    	.debug
000013BF 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
000013D3 CB 00 00 00        		.dd LM126-_KeyScan
000013D5 0D 00 0A 00        		.dw 0x0d,0x0a
0000839C                    	.code
                            	LM126:
0000839C 12 95 03 00        		R2=[_buffer+2]	// QImode move
0000839E 40 44              		CMP R2,0	// QImode test
0000839F 07 4E 01 EE        		NSJNZ L56	//QImode NE
         00 EE      
000013D7                    	.debug
000013D7 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
000013EB D1 00 00 00        		.dd LM127-_KeyScan
000013ED 0D 00 0A 00        		.dw 0x0d,0x0a
000083A2                    	.code
                            	LM127:
000083A2 72 94              		R2=50	// QImode move
000083A3 1A D5 03 00        		[_buffer+2]=R2	// QImode move
000013EF                    	.debug
000013EF 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00001403 D4 00 00 00        		.dd LM128-_KeyScan
00001405 0D 00 0A 00        		.dw 0x0d,0x0a
000083A5                    	.code
                            	LM128:
000083A5 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L56:
00001407                    	.debug
00001407 2E 00 73 00        		.dw '.stabn 0x44,0,133,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         33 00 2C 00
         00 00 00 00
0000141B D6 00 00 00        		.dd LM129-_KeyScan
0000141D 0D 00 0A 00        		.dw 0x0d,0x0a
000083A7                    	.code
                            	LM129:
000083A7 12 95 03 00        		R2=[_buffer+2]	// QImode move
000083A9 41 66              		R3=(-1)	// QImode move
000083AA 1A 07 03 00        		[_buffer+2]=R2+R3  //addqi3_Qrr
0000141F                    	.debug
0000141F 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
00001433 DB 00 00 00        		.dd LM130-_KeyScan
00001435 0D 00 0A 00        		.dw 0x0d,0x0a
000083AC                    	.code
                            	LM130:
000083AC 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L57:
00001437                    	.debug
00001437 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
0000144B DD 00 00 00        		.dd LM131-_KeyScan
0000144D 0D 00 0A 00        		.dw 0x0d,0x0a
000083AE                    	.code
                            	LM131:
000083AE 12 95 04 00        		R2=[_buffer+3]	// QImode move
000083B0 41 96              		R3=1	// QImode move
000083B1 1A 07 04 00        		[_buffer+3]=R2+R3  //addqi3_Qrr
                            	L58:
0000144F                    	.debug
0000144F 2E 00 73 00        		.dw '.stabn 0x44,0,138,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         38 00 2C 00
         00 00 00 00
00001463 E2 00 00 00        		.dd LM132-_KeyScan
00001465 0D 00 0A 00        		.dw 0x0d,0x0a
000083B3                    	.code
                            	LM132:
000083B3 0F 9F B5 83        		pc=L43	// Indirect jump
                            	L44:
                            	L43:
00001467                    	.debug
00001467 2E 00 73 00        		.dw '.stabn 0x44,0,142,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         32 00 2C 00
         00 00 00 00
0000147B E4 00 00 00        		.dd LM133-_KeyScan
0000147D 0D 00 0A 00        		.dw 0x0d,0x0a
000083B5                    	.code
                            	LM133:
                            	LBE7:
0000147F                    	.debug
0000147F 2E 00 73 00        		.dw '.stabn 0x44,0,142,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         32 00 2C 00
         00 00 00 00
00001493 E4 00 00 00        		.dd LM134-_KeyScan
00001495 0D 00 0A 00        		.dw 0x0d,0x0a
000083B5                    	.code
                            	LM134:
                            	L42:
                            	
000083B5 43 00              		sp+=3
000083B6 88 98              		pop bp from [sp]
000083B7 90 9A              		retf
                            		.endp	// end of KeyScan
                            	
00001497                    	.debug
00001497 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000014A9 06 00 00 00        		.dd LBB7-_KeyScan
000014AB 0D 00 0A 00        		.dw 0x0d,0x0a
000083B8                    	.code
000014AD                    	.debug
000014AD 2E 00 73 00        		.dw '.stabs "KeyTemp:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 54 00
         65 00 6D 00
         70 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
000083B8                    	.CODE
000014CB                    	.debug
000014CB 2E 00 73 00        		.dw '.stabs "Value:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         56 00 61 00
         6C 00 75 00
         65 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
000083B8                    	.CODE
000014E7                    	.debug
000014E7 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
000014F9 E4 00 00 00        		.dd LBE7-_KeyScan
000014FB 0D 00 0A 00        		.dw 0x0d,0x0a
000083B8                    	.code
000014FD                    	.debug
000014FD 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001506 E7 00 00 00        		.dd LME7-_KeyScan
00001508 0D 00 0A 00        		.dw 0x0d,0x0a
000083B8                    	.code
                            	LME7:
000083B8                    	.code
0000150A                    	.debug
0000150A 2E 00 73 00        		.dw '.stabs "UNDO:F19",36,0,0,',0,0,offset _UNDO,seg _UNDO,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         55 00 4E 00
         44 00 4F 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 D2 02
         00 00 0D 00
         0A 00      
000083B8                    	.CODE
                            	.public _UNDO
                            	_UNDO:	.proc
00001529                    	.debug
00001529 2E 00 73 00        		.dw '.stabn 0x44,0,144,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         34 00 2C 00
         00 00 00 00
0000153D 00 00 00 00        		.dd LM135-_UNDO
0000153F 0D 00 0A 00        		.dw 0x0d,0x0a
000083B8                    	.code
                            	LM135:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
000083B8 88 DA              		push bp to [sp]
000083B9 41 20              		sp-=1
000083BA 08 0B 01 00        		bp=sp+1
                            	
000083BC 0D 03 04 00        		R1=BP+4
000083BE C5 D2              		[BP]=R1	// QImode move
00001541                    	.debug
00001541 2E 00 73 00        		.dw '.stabn 0x44,0,145,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         35 00 2C 00
         00 00 00 00
00001555 07 00 00 00        		.dd LM136-_UNDO
00001557 0D 00 0A 00        		.dw 0x0d,0x0a
000083BF                    	.code
                            	LM136:
000083BF 40 F0 D1 82        		call _KeyScan	// call without return value
00001559                    	.debug
00001559 2E 00 73 00        		.dw '.stabn 0x44,0,146,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         36 00 2C 00
         00 00 00 00
0000156D 09 00 00 00        		.dd LM137-_UNDO
0000156F 0D 00 0A 00        		.dw 0x0d,0x0a
000083C1                    	.code
                            	LM137:
000083C1 40 F0 89 82        		call _delay	// call without return value
00001571                    	.debug
00001571 2E 00 73 00        		.dw '.stabn 0x44,0,147,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         37 00 2C 00
         00 00 00 00
00001585 0B 00 00 00        		.dd LM138-_UNDO
00001587 0D 00 0A 00        		.dw 0x0d,0x0a
000083C3                    	.code
                            	LM138:
000083C3 11 93 03 00        		R1=[_buffer+2]	// QImode move
000083C5 C8 D2              		[SP--]=R1	// QImode move
000083C6 11 93 02 00        		R1=[_buffer+1]	// QImode move
000083C8 C8 D2              		[SP--]=R1	// QImode move
000083C9 11 93 01 00        		R1=[_buffer]	// QImode move
000083CB C8 D2              		[SP--]=R1	// QImode move
000083CC 40 F0 8D 81        		call _show	// call without return value
000083CE 43 00              		SP = SP + 3	//SP
00001589                    	.debug
00001589 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
0000159D 17 00 00 00        		.dd LM139-_UNDO
0000159F 0D 00 0A 00        		.dw 0x0d,0x0a
000083CF                    	.code
                            	LM139:
000083CF 11 93 02 00        		R1=[_buffer+1]	// QImode move
000083D1 09 43 C8 00        		CMP R1,200	// QImode compare
000083D3 22 5E 01 EE        		NSJZ L83	//QImode EQ
         00 EE      
000083D6 09 43 C8 00        		CMP R1,200	// QImode compare
000083D8 09 9E 01 EE        		NSJA L88	//QImode GTU
         00 EE      
000083DB 09 43 64 00        		CMP R1,100	// QImode compare
000083DD 13 5E 01 EE        		NSJZ L82	//QImode EQ
         00 EE      
000083E0 0F 9F 05 84        		pc=L86	// Indirect jump
                            	L88:
000083E2 09 43 2C 01        		CMP R1,300	// QImode compare
000083E4 16 5E 01 EE        		NSJZ L84	//QImode EQ
         00 EE      
000083E7 09 43 F4 01        		CMP R1,500	// QImode compare
000083E9 16 5E 01 EE        		NSJZ L85	//QImode EQ
         00 EE      
000083EC 0F 9F 05 84        		pc=L86	// Indirect jump
000015A1                    	.debug
000015A1 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
000015B5 36 00 00 00        		.dd LM140-_UNDO
000015B7 0D 00 0A 00        		.dw 0x0d,0x0a
000083EE                    	.code
                            	LM140:
000083EE 41 92              		R1=1	// QImode move
000083EF 19 D3 12 70        		[28690]=R1	// QImode move
                            	L82:
000015B9                    	.debug
000015B9 2E 00 73 00        		.dw '.stabn 0x44,0,154,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         34 00 2C 00
         00 00 00 00
000015CD 39 00 00 00        		.dd LM141-_UNDO
000015CF 0D 00 0A 00        		.dw 0x0d,0x0a
000083F1                    	.code
                            	LM141:
000083F1 45 62              		R1=(-5)	// QImode move
000083F2 19 D3 0A 70        		[28682]=R1	// QImode move
000015D1                    	.debug
000015D1 2E 00 73 00        		.dw '.stabn 0x44,0,155,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         35 00 2C 00
         00 00 00 00
000015E5 3C 00 00 00        		.dd LM142-_UNDO
000015E7 0D 00 0A 00        		.dw 0x0d,0x0a
000083F4                    	.code
                            	LM142:
000083F4 0F 9F 0A 84        		pc=L81	// Indirect jump
                            	L83:
000015E9                    	.debug
000015E9 2E 00 73 00        		.dw '.stabn 0x44,0,158,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         38 00 2C 00
         00 00 00 00
000015FD 3E 00 00 00        		.dd LM143-_UNDO
000015FF 0D 00 0A 00        		.dw 0x0d,0x0a
000083F6                    	.code
                            	LM143:
000083F6 44 62              		R1=(-4)	// QImode move
000083F7 19 D3 0A 70        		[28682]=R1	// QImode move
00001601                    	.debug
00001601 2E 00 73 00        		.dw '.stabn 0x44,0,159,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         39 00 2C 00
         00 00 00 00
00001615 41 00 00 00        		.dd LM144-_UNDO
00001617 0D 00 0A 00        		.dw 0x0d,0x0a
000083F9                    	.code
                            	LM144:
000083F9 0F 9F 0A 84        		pc=L81	// Indirect jump
                            	L84:
00001619                    	.debug
00001619 2E 00 73 00        		.dw '.stabn 0x44,0,161,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         31 00 2C 00
         00 00 00 00
0000162D 43 00 00 00        		.dd LM145-_UNDO
0000162F 0D 00 0A 00        		.dw 0x0d,0x0a
000083FB                    	.code
                            	LM145:
000083FB 43 62              		R1=(-3)	// QImode move
000083FC 19 D3 0A 70        		[28682]=R1	// QImode move
00001631                    	.debug
00001631 2E 00 73 00        		.dw '.stabn 0x44,0,162,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         32 00 2C 00
         00 00 00 00
00001645 46 00 00 00        		.dd LM146-_UNDO
00001647 0D 00 0A 00        		.dw 0x0d,0x0a
000083FE                    	.code
                            	LM146:
000083FE 0F 9F 0A 84        		pc=L81	// Indirect jump
                            	L85:
00001649                    	.debug
00001649 2E 00 73 00        		.dw '.stabn 0x44,0,164,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         34 00 2C 00
         00 00 00 00
0000165D 48 00 00 00        		.dd LM147-_UNDO
0000165F 0D 00 0A 00        		.dw 0x0d,0x0a
00008400                    	.code
                            	LM147:
00008400 42 62              		R1=(-2)	// QImode move
00008401 19 D3 0A 70        		[28682]=R1	// QImode move
00001661                    	.debug
00001661 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
00001675 4B 00 00 00        		.dd LM148-_UNDO
00001677 0D 00 0A 00        		.dw 0x0d,0x0a
00008403                    	.code
                            	LM148:
00008403 0F 9F 0A 84        		pc=L81	// Indirect jump
                            	L86:
00001679                    	.debug
00001679 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
0000168D 4D 00 00 00        		.dd LM149-_UNDO
0000168F 0D 00 0A 00        		.dw 0x0d,0x0a
00008405                    	.code
                            	LM149:
00008405 41 62              		R1=(-1)	// QImode move
00008406 19 D3 0A 70        		[28682]=R1	// QImode move
00001691                    	.debug
00001691 2E 00 73 00        		.dw '.stabn 0x44,0,168,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         38 00 2C 00
         00 00 00 00
000016A5 50 00 00 00        		.dd LM150-_UNDO
000016A7 0D 00 0A 00        		.dw 0x0d,0x0a
00008408                    	.code
                            	LM150:
00008408 0F 9F 0A 84        		pc=L81	// Indirect jump
                            	L81:
000016A9                    	.debug
000016A9 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
000016BD 52 00 00 00        		.dd LM151-_UNDO
000016BF 0D 00 0A 00        		.dw 0x0d,0x0a
0000840A                    	.code
                            	LM151:
000016C1                    	.debug
000016C1 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
000016D5 52 00 00 00        		.dd LM152-_UNDO
000016D7 0D 00 0A 00        		.dw 0x0d,0x0a
0000840A                    	.code
                            	LM152:
                            	L80:
                            	
0000840A 41 00              		sp+=1
0000840B 88 98              		pop bp from [sp]
0000840C 90 9A              		retf
                            		.endp	// end of UNDO
                            	
000016D9                    	.debug
000016D9 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000016E2 55 00 00 00        		.dd LME8-_UNDO
000016E4 0D 00 0A 00        		.dw 0x0d,0x0a
0000840D                    	.code
                            	LME8:
0000840D                    	.code
000016E6                    	.debug
000016E6 2E 00 73 00        		.dw '.stabs "Juxing:F19",36,0,0,',0,0,offset _Juxing,seg _Juxing,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4A 00 75 00
         78 00 69 00
         6E 00 67 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 27 03
         00 00 0D 00
         0A 00      
0000840D                    	.CODE
                            	.public _Juxing
                            	_Juxing:	.proc
00001707                    	.debug
00001707 2E 00 73 00        		.dw '.stabn 0x44,0,172,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         32 00 2C 00
         00 00 00 00
0000171B 00 00 00 00        		.dd LM153-_Juxing
0000171D 0D 00 0A 00        		.dw 0x0d,0x0a
0000840D                    	.code
                            	LM153:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
0000840D 88 DA              		push bp to [sp]
0000840E 08 0B 01 00        		bp=sp+1
                            	
00008410 0D 03 03 00        		R1=BP+3
0000171F                    	.debug
0000171F 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
00001733 05 00 00 00        		.dd LM154-_Juxing
00001735 0D 00 0A 00        		.dw 0x0d,0x0a
00008412                    	.code
                            	LM154:
00008412 12 95 06 00        		R2=[_buffer+5]	// QImode move
00008414 41 96              		R3=1	// QImode move
00008415 1A 07 06 00        		[_buffer+5]=R2+R3  //addqi3_Qrr
00001737                    	.debug
00001737 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
0000174B 0A 00 00 00        		.dd LM155-_Juxing
0000174D 0D 00 0A 00        		.dw 0x0d,0x0a
00008417                    	.code
                            	LM155:
                            	// GCC inline ASM start
00008417 41 F1              		INT IRQ
                            	// GCC inline ASM end
0000174F                    	.debug
0000174F 2E 00 73 00        		.dw '.stabn 0x44,0,178,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         38 00 2C 00
         00 00 00 00
00001763 0B 00 00 00        		.dd LM156-_Juxing
00001765 0D 00 0A 00        		.dw 0x0d,0x0a
00008418                    	.code
                            	LM156:
00001767                    	.debug
00001767 2E 00 73 00        		.dw '.stabn 0x44,0,178,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         38 00 2C 00
         00 00 00 00
0000177B 0B 00 00 00        		.dd LM157-_Juxing
0000177D 0D 00 0A 00        		.dw 0x0d,0x0a
00008418                    	.code
                            	LM157:
                            	L94:
                            	
00008418 88 98              		pop bp from [sp]
00008419 90 9A              		retf
                            		.endp	// end of Juxing
                            	
0000177F                    	.debug
0000177F 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001788 0D 00 00 00        		.dd LME9-_Juxing
0000178A 0D 00 0A 00        		.dw 0x0d,0x0a
0000841A                    	.code
                            	LME9:
0000841A                    	.code
0000178C                    	.debug
0000178C 2E 00 73 00        		.dw '.stabs "Sanjiao:F19",36,0,0,',0,0,offset _Sanjiao,seg _Sanjiao,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 61 00
         6E 00 6A 00
         69 00 61 00
         6F 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         34 03 00 00
         0D 00 0A 00
0000841A                    	.CODE
                            	.public _Sanjiao
                            	_Sanjiao:	.proc
000017AE                    	.debug
000017AE 2E 00 73 00        		.dw '.stabn 0x44,0,180,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         30 00 2C 00
         00 00 00 00
000017C2 00 00 00 00        		.dd LM158-_Sanjiao
000017C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000841A                    	.code
                            	LM158:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
0000841A 88 DA              		push bp to [sp]
0000841B 08 0B 01 00        		bp=sp+1
                            	
0000841D 0D 03 03 00        		R1=BP+3
000017C6                    	.debug
000017C6 2E 00 73 00        		.dw '.stabn 0x44,0,181,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         31 00 2C 00
         00 00 00 00
000017DA 05 00 00 00        		.dd LM159-_Sanjiao
000017DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000841F                    	.code
                            	LM159:
0000841F 12 95 06 00        		R2=[_buffer+5]	// QImode move
00008421 41 96              		R3=1	// QImode move
00008422 1A 07 06 00        		[_buffer+5]=R2+R3  //addqi3_Qrr
000017DE                    	.debug
000017DE 2E 00 73 00        		.dw '.stabn 0x44,0,182,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         32 00 2C 00
         00 00 00 00
000017F2 0A 00 00 00        		.dd LM160-_Sanjiao
000017F4 0D 00 0A 00        		.dw 0x0d,0x0a
00008424                    	.code
                            	LM160:
                            	// GCC inline ASM start
00008424 41 F1              		INT IRQ
                            	// GCC inline ASM end
000017F6                    	.debug
000017F6 2E 00 73 00        		.dw '.stabn 0x44,0,184,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         34 00 2C 00
         00 00 00 00
0000180A 0B 00 00 00        		.dd LM161-_Sanjiao
0000180C 0D 00 0A 00        		.dw 0x0d,0x0a
00008425                    	.code
                            	LM161:
0000180E                    	.debug
0000180E 2E 00 73 00        		.dw '.stabn 0x44,0,184,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         34 00 2C 00
         00 00 00 00
00001822 0B 00 00 00        		.dd LM162-_Sanjiao
00001824 0D 00 0A 00        		.dw 0x0d,0x0a
00008425                    	.code
                            	LM162:
                            	L95:
                            	
00008425 88 98              		pop bp from [sp]
00008426 90 9A              		retf
                            		.endp	// end of Sanjiao
                            	
00001826                    	.debug
00001826 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000182F 0D 00 00 00        		.dd LME10-_Sanjiao
00001831 0D 00 0A 00        		.dw 0x0d,0x0a
00008427                    	.code
                            	LME10:
00008427                    	.code
00001833                    	.debug
00001833 2E 00 73 00        		.dw '.stabs "Zhengxian:F19",36,0,0,',0,0,offset _Zhengxian,seg _Zhengxian,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         5A 00 68 00
         65 00 6E 00
         67 00 78 00
         69 00 61 00
         6E 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         41 03 00 00
         0D 00 0A 00
00008427                    	.CODE
                            	.public _Zhengxian
                            	_Zhengxian:	.proc
00001857                    	.debug
00001857 2E 00 73 00        		.dw '.stabn 0x44,0,186,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         36 00 2C 00
         00 00 00 00
0000186B 00 00 00 00        		.dd LM163-_Zhengxian
0000186D 0D 00 0A 00        		.dw 0x0d,0x0a
00008427                    	.code
                            	LM163:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
00008427 88 DA              		push bp to [sp]
00008428 08 0B 01 00        		bp=sp+1
                            	
0000842A 0D 03 03 00        		R1=BP+3
0000186F                    	.debug
0000186F 2E 00 73 00        		.dw '.stabn 0x44,0,186,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         36 00 2C 00
         00 00 00 00
00001883 05 00 00 00        		.dd LM164-_Zhengxian
00001885 0D 00 0A 00        		.dw 0x0d,0x0a
0000842C                    	.code
                            	LM164:
0000842C 12 95 06 00        		R2=[_buffer+5]	// QImode move
0000842E 41 96              		R3=1	// QImode move
0000842F 1A 07 06 00        		[_buffer+5]=R2+R3  //addqi3_Qrr
00001887                    	.debug
00001887 2E 00 73 00        		.dw '.stabn 0x44,0,187,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         37 00 2C 00
         00 00 00 00
0000189B 0A 00 00 00        		.dd LM165-_Zhengxian
0000189D 0D 00 0A 00        		.dw 0x0d,0x0a
00008431                    	.code
                            	LM165:
                            	// GCC inline ASM start
00008431 41 F1              		INT IRQ
                            	// GCC inline ASM end
0000189F                    	.debug
0000189F 2E 00 73 00        		.dw '.stabn 0x44,0,189,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         39 00 2C 00
         00 00 00 00
000018B3 0B 00 00 00        		.dd LM166-_Zhengxian
000018B5 0D 00 0A 00        		.dw 0x0d,0x0a
00008432                    	.code
                            	LM166:
000018B7                    	.debug
000018B7 2E 00 73 00        		.dw '.stabn 0x44,0,189,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         39 00 2C 00
         00 00 00 00
000018CB 0B 00 00 00        		.dd LM167-_Zhengxian
000018CD 0D 00 0A 00        		.dw 0x0d,0x0a
00008432                    	.code
                            	LM167:
                            	L96:
                            	
00008432 88 98              		pop bp from [sp]
00008433 90 9A              		retf
                            		.endp	// end of Zhengxian
                            	
000018CF                    	.debug
000018CF 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
000018D8 0D 00 00 00        		.dd LME11-_Zhengxian
000018DA 0D 00 0A 00        		.dw 0x0d,0x0a
00008434                    	.code
                            	LME11:
00008434                    	.code
000018DC                    	.debug
000018DC 2E 00 73 00        		.dw '.stabs "Tiejia:F19",36,0,0,',0,0,offset _Tiejia,seg _Tiejia,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 69 00
         65 00 6A 00
         69 00 61 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 4E 03
         00 00 0D 00
         0A 00      
00008434                    	.CODE
                            	.public _Tiejia
                            	_Tiejia:	.proc
000018FD                    	.debug
000018FD 2E 00 73 00        		.dw '.stabn 0x44,0,191,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         31 00 2C 00
         00 00 00 00
00001911 00 00 00 00        		.dd LM168-_Tiejia
00001913 0D 00 0A 00        		.dw 0x0d,0x0a
00008434                    	.code
                            	LM168:
                            		// total=0, vars=0
                            		// frame_pointer_needed: 1
00008434 88 DA              		push bp to [sp]
00008435 08 0B 01 00        		bp=sp+1
                            	
00008437 0D 03 03 00        		R1=BP+3
00001915                    	.debug
00001915 2E 00 73 00        		.dw '.stabn 0x44,0,192,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         32 00 2C 00
         00 00 00 00
00001929 05 00 00 00        		.dd LM169-_Tiejia
0000192B 0D 00 0A 00        		.dw 0x0d,0x0a
00008439                    	.code
                            	LM169:
                            	// GCC inline ASM start
00008439 41 F1              		INT IRQ
                            	// GCC inline ASM end
0000192D                    	.debug
0000192D 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
00001941 06 00 00 00        		.dd LM170-_Tiejia
00001943 0D 00 0A 00        		.dw 0x0d,0x0a
0000843A                    	.code
                            	LM170:
00001945                    	.debug
00001945 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
00001959 06 00 00 00        		.dd LM171-_Tiejia
0000195B 0D 00 0A 00        		.dw 0x0d,0x0a
0000843A                    	.code
                            	LM171:
                            	L97:
                            	
0000843A 88 98              		pop bp from [sp]
0000843B 90 9A              		retf
                            		.endp	// end of Tiejia
                            	
0000195D                    	.debug
0000195D 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001966 08 00 00 00        		.dd LME12-_Tiejia
00001968 0D 00 0A 00        		.dw 0x0d,0x0a
0000843C                    	.code
                            	LME12:
0000843C                    	.code
0000196A                    	.debug
0000196A 2E 00 73 00        		.dw '.stabs "Boxing:F19",36,0,0,',0,0,offset _Boxing,seg _Boxing,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         42 00 6F 00
         78 00 69 00
         6E 00 67 00
         3A 00 46 00
         31 00 39 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 56 03
         00 00 0D 00
         0A 00      
0000843C                    	.CODE
                            	.public _Boxing
                            	_Boxing:	.proc
0000198B                    	.debug
0000198B 2E 00 73 00        		.dw '.stabn 0x44,0,209,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         39 00 2C 00
         00 00 00 00
0000199F 00 00 00 00        		.dd LM172-_Boxing
000019A1 0D 00 0A 00        		.dw 0x0d,0x0a
0000843C                    	.code
                            	LM172:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000843C 88 DA              		push bp to [sp]
0000843D 41 20              		sp-=1
0000843E 08 0B 01 00        		bp=sp+1
                            	
00008440 0D 03 04 00        		R1=BP+4
00008442 C5 D2              		[BP]=R1	// QImode move
000019A3                    	.debug
000019A3 2E 00 73 00        		.dw '.stabn 0x44,0,210,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         30 00 2C 00
         00 00 00 00
000019B7 07 00 00 00        		.dd LM173-_Boxing
000019B9 0D 00 0A 00        		.dw 0x0d,0x0a
00008443                    	.code
                            	LM173:
00008443 11 93 01 00        		R1=[_buffer]	// QImode move
00008445 41 42              		CMP R1,1	// QImode compare
00008446 13 5E 01 EE        		NSJZ L101	//QImode EQ
         00 EE      
00008449 41 42              		CMP R1,1	// QImode compare
0000844A 0B 0E 01 EE        		NSJB L100	//QImode LTU
         00 EE      
0000844D 42 42              		CMP R1,2	// QImode compare
0000844E 0F 5E 01 EE        		NSJZ L102	//QImode EQ
         00 EE      
00008451 0F 9F 62 84        		pc=L103	// Indirect jump
000019BB                    	.debug
000019BB 2E 00 73 00        		.dw '.stabn 0x44,0,212,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         32 00 2C 00
         00 00 00 00
000019CF 17 00 00 00        		.dd LM174-_Boxing
000019D1 0D 00 0A 00        		.dw 0x0d,0x0a
00008453                    	.code
                            	LM174:
00008453 41 92              		R1=1	// QImode move
00008454 19 D3 12 70        		[28690]=R1	// QImode move
                            	L100:
000019D3                    	.debug
000019D3 2E 00 73 00        		.dw '.stabn 0x44,0,214,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         34 00 2C 00
         00 00 00 00
000019E7 1A 00 00 00        		.dd LM175-_Boxing
000019E9 0D 00 0A 00        		.dw 0x0d,0x0a
00008456                    	.code
                            	LM175:
00008456 40 F0 0D 84        		call _Juxing	// call without return value
000019EB                    	.debug
000019EB 2E 00 73 00        		.dw '.stabn 0x44,0,215,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         35 00 2C 00
         00 00 00 00
000019FF 1C 00 00 00        		.dd LM176-_Boxing
00001A01 0D 00 0A 00        		.dw 0x0d,0x0a
00008458                    	.code
                            	LM176:
00008458 0F 9F 66 84        		pc=L99	// Indirect jump
                            	L101:
00001A03                    	.debug
00001A03 2E 00 73 00        		.dw '.stabn 0x44,0,217,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         37 00 2C 00
         00 00 00 00
00001A17 1E 00 00 00        		.dd LM177-_Boxing
00001A19 0D 00 0A 00        		.dw 0x0d,0x0a
0000845A                    	.code
                            	LM177:
0000845A 40 F0 1A 84        		call _Sanjiao	// call without return value
00001A1B                    	.debug
00001A1B 2E 00 73 00        		.dw '.stabn 0x44,0,218,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         38 00 2C 00
         00 00 00 00
00001A2F 20 00 00 00        		.dd LM178-_Boxing
00001A31 0D 00 0A 00        		.dw 0x0d,0x0a
0000845C                    	.code
                            	LM178:
0000845C 0F 9F 66 84        		pc=L99	// Indirect jump
                            	L102:
00001A33                    	.debug
00001A33 2E 00 73 00        		.dw '.stabn 0x44,0,220,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         30 00 2C 00
         00 00 00 00
00001A47 22 00 00 00        		.dd LM179-_Boxing
00001A49 0D 00 0A 00        		.dw 0x0d,0x0a
0000845E                    	.code
                            	LM179:
0000845E 40 F0 27 84        		call _Zhengxian	// call without return value
00001A4B                    	.debug
00001A4B 2E 00 73 00        		.dw '.stabn 0x44,0,221,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         31 00 2C 00
         00 00 00 00
00001A5F 24 00 00 00        		.dd LM180-_Boxing
00001A61 0D 00 0A 00        		.dw 0x0d,0x0a
00008460                    	.code
                            	LM180:
00008460 0F 9F 66 84        		pc=L99	// Indirect jump
                            	L103:
00001A63                    	.debug
00001A63 2E 00 73 00        		.dw '.stabn 0x44,0,224,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         34 00 2C 00
         00 00 00 00
00001A77 26 00 00 00        		.dd LM181-_Boxing
00001A79 0D 00 0A 00        		.dw 0x0d,0x0a
00008462                    	.code
                            	LM181:
00008462 40 F0 34 84        		call _Tiejia	// call without return value
00001A7B                    	.debug
00001A7B 2E 00 73 00        		.dw '.stabn 0x44,0,225,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         35 00 2C 00
         00 00 00 00
00001A8F 28 00 00 00        		.dd LM182-_Boxing
00001A91 0D 00 0A 00        		.dw 0x0d,0x0a
00008464                    	.code
                            	LM182:
00008464 0F 9F 66 84        		pc=L99	// Indirect jump
                            	L99:
00001A93                    	.debug
00001A93 2E 00 73 00        		.dw '.stabn 0x44,0,227,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         37 00 2C 00
         00 00 00 00
00001AA7 2A 00 00 00        		.dd LM183-_Boxing
00001AA9 0D 00 0A 00        		.dw 0x0d,0x0a
00008466                    	.code
                            	LM183:
00001AAB                    	.debug
00001AAB 2E 00 73 00        		.dw '.stabn 0x44,0,227,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 32 00
         37 00 2C 00
         00 00 00 00
00001ABF 2A 00 00 00        		.dd LM184-_Boxing
00001AC1 0D 00 0A 00        		.dw 0x0d,0x0a
00008466                    	.code
                            	LM184:
                            	L98:
                            	
00008466 41 00              		sp+=1
00008467 88 98              		pop bp from [sp]
00008468 90 9A              		retf
                            		.endp	// end of Boxing
                            	
00001AC3                    	.debug
00001AC3 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001ACC 2D 00 00 00        		.dd LME13-_Boxing
00001ACE 0D 00 0A 00        		.dw 0x0d,0x0a
00008469                    	.code
                            	LME13:
00008469                    	.code
00001AD0                    	.debug
00001AD0 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         83 03 00 00
         0D 00 0A 00
00008469                    	.CODE
                            	.public _main
                            	_main:	.proc
00001AEE                    	.debug
00001AEE 2E 00 73 00        		.dw '.stabn 0x44,0,230,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         30 00 2C 00
         00 00 00 00
00001B02 00 00 00 00        		.dd LM185-_main
00001B04 0D 00 0A 00        		.dw 0x0d,0x0a
00008469                    	.code
                            	LM185:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00008469 88 DA              		push bp to [sp]
0000846A 41 20              		sp-=1
0000846B 08 0B 01 00        		bp=sp+1
                            	
0000846D 0D 03 04 00        		R1=BP+4
0000846F C5 D2              		[BP]=R1	// QImode move
00001B06                    	.debug
00001B06 2E 00 73 00        		.dw '.stabn 0x44,0,232,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         32 00 2C 00
         00 00 00 00
00001B1A 07 00 00 00        		.dd LM186-_main
00001B1C 0D 00 0A 00        		.dw 0x0d,0x0a
00008470                    	.code
                            	LM186:
                            	// GCC inline ASM start
00008470 40 F1              		INT OFF
                            	// GCC inline ASM end
00001B1E                    	.debug
00001B1E 2E 00 73 00        		.dw '.stabn 0x44,0,235,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         35 00 2C 00
         00 00 00 00
00001B32 08 00 00 00        		.dd LM187-_main
00001B34 0D 00 0A 00        		.dw 0x0d,0x0a
00008471                    	.code
                            	LM187:
00008471 09 93 00 10        		R1=4096	// QImode move
00008473 19 D3 10 70        		[28688]=R1	// QImode move
00001B36                    	.debug
00001B36 2E 00 73 00        		.dw '.stabn 0x44,0,236,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         36 00 2C 00
         00 00 00 00
00001B4A 0C 00 00 00        		.dd LM188-_main
00001B4C 0D 00 0A 00        		.dw 0x0d,0x0a
00008475                    	.code
                            	LM188:
00008475 71 92              		R1=49	// QImode move
00008476 19 D3 0B 70        		[28683]=R1	// QImode move
00001B4E                    	.debug
00001B4E 2E 00 73 00        		.dw '.stabn 0x44,0,238,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         38 00 2C 00
         00 00 00 00
00001B62 0F 00 00 00        		.dd LM189-_main
00001B64 0D 00 0A 00        		.dw 0x0d,0x0a
00008478                    	.code
                            	LM189:
00008478 40 F0 4D 81        		call _init7219	// call without return value
00001B66                    	.debug
00001B66 2E 00 73 00        		.dw '.stabn 0x44,0,239,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 33 00
         39 00 2C 00
         00 00 00 00
00001B7A 11 00 00 00        		.dd LM190-_main
00001B7C 0D 00 0A 00        		.dw 0x0d,0x0a
0000847A                    	.code
                            	LM190:
0000847A 40 92              		R1=0	// QImode move
0000847B 19 D3 2A 70        		[28714]=R1	// QImode move
00001B7E                    	.debug
00001B7E 2E 00 73 00        		.dw '.stabn 0x44,0,241,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         31 00 2C 00
         00 00 00 00
00001B92 14 00 00 00        		.dd LM191-_main
00001B94 0D 00 0A 00        		.dw 0x0d,0x0a
0000847D                    	.code
                            	LM191:
                            	L109:
0000847D 0F 9F 81 84        		pc=L111	// Indirect jump
0000847F 0F 9F 9F 84        		pc=L110	// Indirect jump
                            	L111:
00001B96                    	.debug
00001B96 2E 00 73 00        		.dw '.stabn 0x44,0,244,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         34 00 2C 00
         00 00 00 00
00001BAA 18 00 00 00        		.dd LM192-_main
00001BAC 0D 00 0A 00        		.dw 0x0d,0x0a
00008481                    	.code
                            	LM192:
00008481 11 93 04 00        		R1=[_buffer+3]	// QImode move
00008483 09 B5 01 00        		R2=R1&1
00008485 40 44              		CMP R2,0	// QImode test
00008486 09 5E 01 EE        		NSJZ L112	//QImode EQ
         00 EE      
00001BAE                    	.debug
00001BAE 2E 00 73 00        		.dw '.stabn 0x44,0,246,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         36 00 2C 00
         00 00 00 00
00001BC2 20 00 00 00        		.dd LM193-_main
00001BC4 0D 00 0A 00        		.dw 0x0d,0x0a
00008489                    	.code
                            	LM193:
00008489 46 92              		R1=6	// QImode move
0000848A 19 D3 13 70        		[28691]=R1	// QImode move
00001BC6                    	.debug
00001BC6 2E 00 73 00        		.dw '.stabn 0x44,0,247,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         37 00 2C 00
         00 00 00 00
00001BDA 23 00 00 00        		.dd LM194-_main
00001BDC 0D 00 0A 00        		.dw 0x0d,0x0a
0000848C                    	.code
                            	LM194:
0000848C 40 F0 B8 83        		call _UNDO	// call without return value
00001BDE                    	.debug
00001BDE 2E 00 73 00        		.dw '.stabn 0x44,0,248,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 34 00
         38 00 2C 00
         00 00 00 00
00001BF2 25 00 00 00        		.dd LM195-_main
00001BF4 0D 00 0A 00        		.dw 0x0d,0x0a
0000848E                    	.code
                            	LM195:
0000848E 0F 9F 9A 84        		pc=L113	// Indirect jump
                            	L112:
00001BF6                    	.debug
00001BF6 2E 00 73 00        		.dw '.stabn 0x44,0,251,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         31 00 2C 00
         00 00 00 00
00001C0A 27 00 00 00        		.dd LM196-_main
00001C0C 0D 00 0A 00        		.dw 0x0d,0x0a
00008490                    	.code
                            	LM196:
00008490 09 93 80 00        		R1=128	// QImode move
00008492 19 D3 13 70        		[28691]=R1	// QImode move
00001C0E                    	.debug
00001C0E 2E 00 73 00        		.dw '.stabn 0x44,0,252,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         32 00 2C 00
         00 00 00 00
00001C22 2B 00 00 00        		.dd LM197-_main
00001C24 0D 00 0A 00        		.dw 0x0d,0x0a
00008494                    	.code
                            	LM197:
00008494 40 F0 3C 84        		call _Boxing	// call without return value
00001C26                    	.debug
00001C26 2E 00 73 00        		.dw '.stabn 0x44,0,255,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         35 00 2C 00
         00 00 00 00
00001C3A 2D 00 00 00        		.dd LM198-_main
00001C3C 0D 00 0A 00        		.dw 0x0d,0x0a
00008496                    	.code
                            	LM198:
00008496 11 93 05 00        		R1=[_buffer+4]	// QImode move
00008498 19 D3 17 70        		[28695]=R1	// QImode move
                            	L113:
00001C3E                    	.debug
00001C3E 2E 00 73 00        		.dw '.stabn 0x44,0,258,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 35 00
         38 00 2C 00
         00 00 00 00
00001C52 31 00 00 00        		.dd LM199-_main
00001C54 0D 00 0A 00        		.dw 0x0d,0x0a
0000849A                    	.code
                            	LM199:
0000849A 41 92              		R1=1	// QImode move
0000849B 19 D3 12 70        		[28690]=R1	// QImode move
00001C56                    	.debug
00001C56 2E 00 73 00        		.dw '.stabn 0x44,0,260,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         30 00 2C 00
         00 00 00 00
00001C6A 34 00 00 00        		.dd LM200-_main
00001C6C 0D 00 0A 00        		.dw 0x0d,0x0a
0000849D                    	.code
                            	LM200:
0000849D 0F 9F 7D 84        		pc=L109	// Indirect jump
                            	L110:
00001C6E                    	.debug
00001C6E 2E 00 73 00        		.dw '.stabn 0x44,0,261,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         31 00 2C 00
         00 00 00 00
00001C82 36 00 00 00        		.dd LM201-_main
00001C84 0D 00 0A 00        		.dw 0x0d,0x0a
0000849F                    	.code
                            	LM201:
00001C86                    	.debug
00001C86 2E 00 73 00        		.dw '.stabn 0x44,0,261,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 36 00
         31 00 2C 00
         00 00 00 00
00001C9A 36 00 00 00        		.dd LM202-_main
00001C9C 0D 00 0A 00        		.dw 0x0d,0x0a
0000849F                    	.code
                            	LM202:
                            	L108:
                            	
0000849F 41 00              		sp+=1
000084A0 88 98              		pop bp from [sp]
000084A1 90 9A              		retf
                            		.endp	// end of main
                            	
00001C9E                    	.debug
00001C9E 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00001CA7 39 00 00 00        		.dd LME14-_main
00001CA9 0D 00 0A 00        		.dw 0x0d,0x0a
000084A2                    	.code
                            	LME14:
                            	.external __divu1
                            	.external __modi1
                            	.external __divi1
                            		.end
0 error(s), 0 warning(s).

