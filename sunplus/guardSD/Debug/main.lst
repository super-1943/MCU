Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\PROGRA~1\Sunplus\UNSPID~1.0\cc1.exe C:\DOCUME~1\ZHANGZ~1.YSU\LOCALS~1\Temp\cciWaaaa.i -fkeep-inline-functions -quiet -dumpbase main.c -mglobal-var-iram -gstabs -o .\Debug/main.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "F:/abc/guardSD/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 61 00
         62 00 63 00
         2F 00 67 00
         75 00 61 00
         72 00 64 00
         53 00 44 00
         2F 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000B572                    	.code
00000028                    	.debug
00000028 2E 00 73 00        		.dw '.stabs "F:/abc/guardSD/main.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 61 00
         62 00 63 00
         2F 00 67 00
         75 00 61 00
         72 00 64 00
         53 00 44 00
         2F 00 6D 00
         61 00 69 00
         6E 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000B572                    	.code
0000B572                    	.code
                            	Ltext0:
00000056                    	.debug
00000056 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
00000082                    	.debug
00000082 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
000000A8                    	.debug
000000A8 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B572                    	.CODE
000000E3                    	.debug
000000E3 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
00000113                    	.debug
00000113 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
0000014D                    	.debug
0000014D 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
0000018D                    	.debug
0000018D 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B572                    	.CODE
000001CC                    	.debug
000001CC 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
000001FE                    	.debug
000001FE 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
00000234                    	.debug
00000234 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
0000026A                    	.debug
0000026A 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B572                    	.CODE
0000029D                    	.debug
0000029D 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
000002C3                    	.debug
000002C3 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B572                    	.CODE
000002EA                    	.debug
000002EA 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
00000316                    	.debug
00000316 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B572                    	.CODE
00000357                    	.debug
00000357 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B572                    	.CODE
00000386                    	.debug
00000386 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
000003B6                    	.debug
000003B6 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
0000B572                    	.CODE
000003EB                    	.debug
000003EB 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B572                    	.CODE
                            	.public _gActivated
000004F0                    	.iram
                            	_gActivated:
000004F0 00 00              		.dw 0
0000040B                    	.debug
0000040B 2E 00 73 00        		.dw '.stabs "gActivated:G1",32,0,0,',0,0,offset _gActivated,seg _gActivated,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 41 00
         63 00 74 00
         69 00 76 00
         61 00 74 00
         65 00 64 00
         3A 00 47 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000B572                    	.CODE
                            	.public _gTriggerRespond
000004F1                    	.iram
                            	_gTriggerRespond:
000004F1 08 00              		.dw 8
000004F2 09 00              		.dw 9
000004F3 08 00              		.dw 8
0000042F                    	.debug
0000042F 2E 00 73 00        		.dw '.stabs "gTriggerRespond:G20=ar1;0;2;1",32,0,0,',0,0,offset _gTriggerRespond,seg _gTriggerRespond,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 54 00
         72 00 69 00
         67 00 67 00
         65 00 72 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 3A 00
         47 00 32 00
         30 00 3D 00
         61 00 72 00
         31 00 3B 00
         30 00 3B 00
         32 00 3B 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         01 00 00 00
         0D 00 0A 00
0000B572                    	.CODE
                            	.public _gComm2Respond
000004F4                    	.iram
                            	_gComm2Respond:
000004F4 0B 00              		.dw 11
000004F5 0C 00              		.dw 12
000004F6 0D 00              		.dw 13
00000463                    	.debug
00000463 2E 00 73 00        		.dw '.stabs "gComm2Respond:G21=ar1;0;2;1",32,0,0,',0,0,offset _gComm2Respond,seg _gComm2Respond,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         67 00 43 00
         6F 00 6D 00
         6D 00 32 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 3A 00
         47 00 32 00
         31 00 3D 00
         61 00 72 00
         31 00 3B 00
         30 00 3B 00
         32 00 3B 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         04 00 00 00
         0D 00 0A 00
0000B572                    	.CODE
                            	.public _PlayFlag
000004F7                    	.iram
                            	_PlayFlag:
000004F7 00 00              		.dw 0
00000495                    	.debug
00000495 2E 00 73 00        		.dw '.stabs "PlayFlag:G1",32,0,0,',0,0,offset _PlayFlag,seg _PlayFlag,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         46 00 6C 00
         61 00 67 00
         3A 00 47 00
         31 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         07 00 00 00
         0D 00 0A 00
0000B572                    	.CODE
0000B572                    	.code
000004B7                    	.debug
000004B7 2E 00 73 00        		.dw '.stabs "PlayRespond:F19",36,0,0,',0,0,offset _PlayRespond,seg _PlayRespond,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         50 00 6C 00
         61 00 79 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 3A 00
         46 00 31 00
         39 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
0000B572                    	.CODE
                            	.public _PlayRespond
                            	_PlayRespond:	.proc
000004DD                    	.debug
000004DD 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
000004F0 00 00 00 00        		.dd LM1-_PlayRespond
000004F2 0D 00 0A 00        		.dw 0x0d,0x0a
0000B572                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
0000B572 88 DA              		push bp to [sp]
0000B573 41 20              		sp-=1
0000B574 08 0B 01 00        		bp=sp+1
                            	
0000B576 0D 03 04 00        		R1=BP+4
0000B578 C5 D2              		[BP]=R1	// QImode move
000004F4                    	.debug
000004F4 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
00000507 07 00 00 00        		.dd LM2-_PlayRespond
00000509 0D 00 0A 00        		.dw 0x0d,0x0a
0000B579                    	.code
                            	LM2:
                            	LBB2:
0000B579 40 F0 72 9B        		call _BSR_StopRecognizer	// call without return value
0000050B                    	.debug
0000050B 2E 00 73 00        		.dw '.stabn 0x44,0,88,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 38 00
         2C 00 00 00
         00 00      
0000051E 09 00 00 00        		.dd LM3-_PlayRespond
00000520 0D 00 0A 00        		.dw 0x0d,0x0a
0000B57B                    	.code
                            	LM3:
0000B57B 41 92              		R1=1	// QImode move
0000B57C C8 D2              		[SP--]=R1	// QImode move
0000B57D 40 F0 95 A6        		call _SACM_S480_Initial	// call with return value
0000B57F 41 00              		SP = SP + 1	//SP
00000522                    	.debug
00000522 2E 00 73 00        		.dw '.stabn 0x44,0,89,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 39 00
         2C 00 00 00
         00 00      
00000535 0E 00 00 00        		.dd LM4-_PlayRespond
00000537 0D 00 0A 00        		.dw 0x0d,0x0a
0000B580                    	.code
                            	LM4:
0000B580 43 92              		R1=3	// QImode move
0000B581 C8 D2              		[SP--]=R1	// QImode move
0000B582 43 92              		R1=3	// QImode move
0000B583 C8 D2              		[SP--]=R1	// QImode move
0000B584 C5 94              		R2=[BP]	// QImode move
0000B585 C2 92              		R1=[R2]	// QImode move
0000B586 C8 D2              		[SP--]=R1	// QImode move
0000B587 40 F0 CC A6        		call _SACM_S480_Play	// call with return value
0000B589 43 00              		SP = SP + 3	//SP
00000539                    	.debug
00000539 2E 00 73 00        		.dw '.stabn 0x44,0,90,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 30 00
         2C 00 00 00
         00 00      
0000054C 18 00 00 00        		.dd LM5-_PlayRespond
0000054E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B58A                    	.code
                            	LM5:
                            	L3:
0000B58A 40 F0 AE A7        		call _SACM_S480_Status	// call with return value
0000B58C 09 B5 01 00        		R2=R1&1
0000B58E 40 44              		CMP R2,0	// QImode test
0000B58F 04 4E 01 EE        		NSJNZ L5	//QImode NE
         00 EE      
0000B592 0F 9F 9A B5        		pc=L4	// Indirect jump
                            	L5:
00000550                    	.debug
00000550 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
00000563 22 00 00 00        		.dd LM6-_PlayRespond
00000565 0D 00 0A 00        		.dw 0x0d,0x0a
0000B594                    	.code
                            	LM6:
                            	LBB3:
0000B594 40 F0 05 A8        		call _SACM_S480_ServiceLoop	// call with return value
00000567                    	.debug
00000567 2E 00 73 00        		.dw '.stabn 0x44,0,93,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 33 00
         2C 00 00 00
         00 00      
0000057A 24 00 00 00        		.dd LM7-_PlayRespond
0000057C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B596                    	.code
                            	LM7:
0000B596 40 F0 4F B7        		call _ClearWatchDog	// call without return value
0000057E                    	.debug
0000057E 2E 00 73 00        		.dw '.stabn 0x44,0,94,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 34 00
         2C 00 00 00
         00 00      
00000591 26 00 00 00        		.dd LM8-_PlayRespond
00000593 0D 00 0A 00        		.dw 0x0d,0x0a
0000B598                    	.code
                            	LM8:
                            	LBE3:
0000B598 0F 9F 8A B5        		pc=L3	// Indirect jump
                            	L4:
00000595                    	.debug
00000595 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
000005A8 28 00 00 00        		.dd LM9-_PlayRespond
000005AA 0D 00 0A 00        		.dw 0x0d,0x0a
0000B59A                    	.code
                            	LM9:
0000B59A 40 F0 64 A7        		call _SACM_S480_Stop	// call with return value
000005AC                    	.debug
000005AC 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
000005BF 2A 00 00 00        		.dd LM10-_PlayRespond
000005C1 0D 00 0A 00        		.dw 0x0d,0x0a
0000B59C                    	.code
                            	LM10:
0000B59C 40 92              		R1=0	// QImode move
0000B59D C8 D2              		[SP--]=R1	// QImode move
0000B59E 40 F0 7F 9B        		call _BSR_InitRecognizer	// call with return value
0000B5A0 41 00              		SP = SP + 1	//SP
000005C3                    	.debug
000005C3 2E 00 73 00        		.dw '.stabn 0x44,0,97,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 37 00
         2C 00 00 00
         00 00      
000005D6 2F 00 00 00        		.dd LM11-_PlayRespond
000005D8 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5A1                    	.code
                            	LM11:
0000B5A1 40 F0 40 9B        		call _BSR_EnableCPUIndicator	// call without return value
000005DA                    	.debug
000005DA 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
000005ED 31 00 00 00        		.dd LM12-_PlayRespond
000005EF 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5A3                    	.code
                            	LM12:
                            	LBE2:
000005F1                    	.debug
000005F1 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
00000604 31 00 00 00        		.dd LM13-_PlayRespond
00000606 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5A3                    	.code
                            	LM13:
                            	L2:
                            	
0000B5A3 41 00              		sp+=1
0000B5A4 88 98              		pop bp from [sp]
0000B5A5 90 9A              		retf
                            		.endp	// end of PlayRespond
                            	
00000608                    	.debug
00000608 2E 00 73 00        		.dw '.stabs "Result:p1",160,0,0,4',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 75 00
         6C 00 74 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 34 00
         0D 00 0A 00
0000B5A6                    	.CODE
00000626                    	.debug
00000626 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000638 07 00 00 00        		.dd LBB2-_PlayRespond
0000063A 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5A6                    	.code
0000063C                    	.debug
0000063C 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000064E 22 00 00 00        		.dd LBB3-_PlayRespond
00000650 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5A6                    	.code
00000652                    	.debug
00000652 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000664 26 00 00 00        		.dd LBE3-_PlayRespond
00000666 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5A6                    	.code
00000668                    	.debug
00000668 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000067A 31 00 00 00        		.dd LBE2-_PlayRespond
0000067C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5A6                    	.code
0000067E                    	.debug
0000067E 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000687 34 00 00 00        		.dd LME1-_PlayRespond
00000689 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5A6                    	.code
                            	LME1:
0000B5A6                    	.code
0000068B                    	.debug
0000068B 2E 00 73 00        		.dw '.stabs "TrainWord:F1",36,0,0,',0,0,offset _TrainWord,seg _TrainWord,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         54 00 72 00
         61 00 69 00
         6E 00 57 00
         6F 00 72 00
         64 00 3A 00
         46 00 31 00
         22 00 2C 00
         33 00 36 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 34 00
         00 00 0D 00
         0A 00      
0000B5A6                    	.CODE
                            	.public _TrainWord
                            	_TrainWord:	.proc
000006AE                    	.debug
000006AE 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
000006C2 00 00 00 00        		.dd LM14-_TrainWord
000006C4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5A6                    	.code
                            	LM14:
                            		// total=2, vars=2
                            		// frame_pointer_needed: 1
0000B5A6 88 DA              		push bp to [sp]
0000B5A7 42 20              		sp-=2
0000B5A8 08 0B 01 00        		bp=sp+1
                            	
0000B5AA 0D 03 05 00        		R1=BP+5
0000B5AC 01 D2              		[bp+1]=R1	// QImode move
000006C6                    	.debug
000006C6 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
000006DA 07 00 00 00        		.dd LM15-_TrainWord
000006DC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5AD                    	.code
                            	LM15:
                            	LBB4:
000006DE                    	.debug
000006DE 2E 00 73 00        		.dw '.stabn 0x44,0,103,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         33 00 2C 00
         00 00 00 00
000006F2 07 00 00 00        		.dd LM16-_TrainWord
000006F4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5AD                    	.code
                            	LM16:
0000B5AD 01 92              		R1=[bp+1]	// QImode move
0000B5AE 01 96              		R3=[bp+1]	// QImode move
0000B5AF 0B 05 01 00        		R2=R3+1
0000B5B1 02 97              		R3=R2	// QImode move
0000B5B2 C3 92              		R1=[R3]	// QImode move
0000B5B3 C8 D2              		[SP--]=R1	// QImode move
0000B5B4 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B5B6 41 00              		SP = SP + 1	//SP
000006F6                    	.debug
000006F6 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
0000070A 11 00 00 00        		.dd LM17-_TrainWord
0000070C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5B7                    	.code
                            	LM17:
                            	L8:
0000B5B7 0F 9F BB B5        		pc=L10	// Indirect jump
0000B5B9 0F 9F 0E B6        		pc=L9	// Indirect jump
                            	L10:
0000070E                    	.debug
0000070E 2E 00 73 00        		.dw '.stabn 0x44,0,106,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         36 00 2C 00
         00 00 00 00
00000722 15 00 00 00        		.dd LM18-_TrainWord
00000724 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5BB                    	.code
                            	LM18:
0000B5BB 40 92              		R1=0	// QImode move
0000B5BC C8 D2              		[SP--]=R1	// QImode move
0000B5BD 01 94              		R2=[bp+1]	// QImode move
0000B5BE C2 92              		R1=[R2]	// QImode move
0000B5BF C8 D2              		[SP--]=R1	// QImode move
0000B5C0 40 F0 F1 87        		call _BSR_Train	// call with return value
0000B5C2 42 00              		SP = SP + 2	//SP
0000B5C3 C5 D2              		[BP]=R1	// QImode move
00000726                    	.debug
00000726 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
0000073A 1E 00 00 00        		.dd LM19-_TrainWord
0000073C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5C4                    	.code
                            	LM19:
0000B5C4 C5 92              		R1=[BP]	// QImode move
0000B5C5 40 42              		CMP R1,0	// QImode test
0000B5C6 04 4E 01 EE        		NSJNZ L11	//QImode NE
         00 EE      
0000B5C9 0F 9F 0E B6        		pc=L9	// Indirect jump
                            	L11:
0000073E                    	.debug
0000073E 2E 00 73 00        		.dw '.stabn 0x44,0,108,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         38 00 2C 00
         00 00 00 00
00000752 25 00 00 00        		.dd LM20-_TrainWord
00000754 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5CB                    	.code
                            	LM20:
0000B5CB C5 94              		R2=[BP]	// QImode move
0000B5CC 02 93              		R1=R2	// QImode move
0000B5CD 09 23 FA FF        		R1=R1-(-6)
0000B5CF 45 42              		CMP R1,5	// QImode compare
0000B5D0 3B 9E 01 EE        		NSJA L12	//QImode GTU
         00 EE      
0000B5D3 0A 95 6D A6        		R2=L21	// QImode move
0000B5D5 02 03              		R1 = R1 + R2	//addqi3
0000B5D6 01 97              		R3=R1	// QImode move
0000B5D7 C3 92              		R1=[R3]	// QImode move
0000B5D8 01 9F              		pc=R1	// tablejump
0000A66D                    	.text
                            	L21:
0000A66D 09 B6              		.dw L20
0000A66E F3 B5              		.dw L17
0000A66F F0 B5              		.dw L16
0000A670 E8 B5              		.dw L15
0000A671 E1 B5              		.dw L14
0000A672 D9 B5              		.dw L13
0000B5D9                    	.code
                            	L13:
00000756                    	.debug
00000756 2E 00 73 00        		.dw '.stabn 0x44,0,111,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         31 00 2C 00
         00 00 00 00
0000076A 33 00 00 00        		.dd LM21-_TrainWord
0000076C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5D9                    	.code
                            	LM21:
0000B5D9 44 92              		R1=4	// QImode move
0000B5DA C8 D2              		[SP--]=R1	// QImode move
0000B5DB 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B5DD 41 00              		SP = SP + 1	//SP
0000076E                    	.debug
0000076E 2E 00 73 00        		.dw '.stabn 0x44,0,112,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         32 00 2C 00
         00 00 00 00
00000782 38 00 00 00        		.dd LM22-_TrainWord
00000784 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5DE                    	.code
                            	LM22:
0000B5DE 41 62              		R1=(-1)	// QImode move
0000B5DF 0F 9F 11 B6        		pc=L7	// Indirect jump
                            	L14:
00000786                    	.debug
00000786 2E 00 73 00        		.dw '.stabn 0x44,0,114,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         34 00 2C 00
         00 00 00 00
0000079A 3B 00 00 00        		.dd LM23-_TrainWord
0000079C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5E1                    	.code
                            	LM23:
0000B5E1 43 92              		R1=3	// QImode move
0000B5E2 C8 D2              		[SP--]=R1	// QImode move
0000B5E3 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B5E5 41 00              		SP = SP + 1	//SP
0000079E                    	.debug
0000079E 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
000007B2 40 00 00 00        		.dd LM24-_TrainWord
000007B4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5E6                    	.code
                            	LM24:
0000B5E6 0F 9F 0C B6        		pc=L12	// Indirect jump
                            	L15:
000007B6                    	.debug
000007B6 2E 00 73 00        		.dw '.stabn 0x44,0,117,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         37 00 2C 00
         00 00 00 00
000007CA 42 00 00 00        		.dd LM25-_TrainWord
000007CC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5E8                    	.code
                            	LM25:
0000B5E8 4E 92              		R1=14	// QImode move
0000B5E9 C8 D2              		[SP--]=R1	// QImode move
0000B5EA 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B5EC 41 00              		SP = SP + 1	//SP
000007CE                    	.debug
000007CE 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
000007E2 47 00 00 00        		.dd LM26-_TrainWord
000007E4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5ED                    	.code
                            	LM26:
0000B5ED 41 62              		R1=(-1)	// QImode move
0000B5EE 0F 9F 11 B6        		pc=L7	// Indirect jump
                            	L16:
000007E6                    	.debug
000007E6 2E 00 73 00        		.dw '.stabn 0x44,0,120,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         30 00 2C 00
         00 00 00 00
000007FA 4A 00 00 00        		.dd LM27-_TrainWord
000007FC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5F0                    	.code
                            	LM27:
0000B5F0 41 62              		R1=(-1)	// QImode move
0000B5F1 0F 9F 11 B6        		pc=L7	// Indirect jump
                            	L17:
000007FE                    	.debug
000007FE 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000812 4D 00 00 00        		.dd LM28-_TrainWord
00000814 0D 00 0A 00        		.dw 0x0d,0x0a
0000B5F3                    	.code
                            	LM28:
0000B5F3 01 94              		R2=[bp+1]	// QImode move
0000B5F4 C2 92              		R1=[R2]	// QImode move
0000B5F5 09 43 00 01        		CMP R1,256	// QImode compare
0000B5F7 09 4E 01 EE        		NSJNZ L18	//QImode NE
         00 EE      
0000B5FA 45 92              		R1=5	// QImode move
0000B5FB C8 D2              		[SP--]=R1	// QImode move
0000B5FC 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B5FE 41 00              		SP = SP + 1	//SP
0000B5FF 0F 9F 06 B6        		pc=L19	// Indirect jump
                            	L18:
00000816                    	.debug
00000816 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
0000082A 5B 00 00 00        		.dd LM29-_TrainWord
0000082C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B601                    	.code
                            	LM29:
0000B601 46 92              		R1=6	// QImode move
0000B602 C8 D2              		[SP--]=R1	// QImode move
0000B603 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B605 41 00              		SP = SP + 1	//SP
                            	L19:
0000082E                    	.debug
0000082E 2E 00 73 00        		.dw '.stabn 0x44,0,124,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         34 00 2C 00
         00 00 00 00
00000842 60 00 00 00        		.dd LM30-_TrainWord
00000844 0D 00 0A 00        		.dw 0x0d,0x0a
0000B606                    	.code
                            	LM30:
0000B606 41 62              		R1=(-1)	// QImode move
0000B607 0F 9F 11 B6        		pc=L7	// Indirect jump
                            	L20:
00000846                    	.debug
00000846 2E 00 73 00        		.dw '.stabn 0x44,0,126,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         36 00 2C 00
         00 00 00 00
0000085A 63 00 00 00        		.dd LM31-_TrainWord
0000085C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B609                    	.code
                            	LM31:
0000B609 41 62              		R1=(-1)	// QImode move
0000B60A 0F 9F 11 B6        		pc=L7	// Indirect jump
                            	L22:
                            	L12:
0000085E                    	.debug
0000085E 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
00000872 66 00 00 00        		.dd LM32-_TrainWord
00000874 0D 00 0A 00        		.dw 0x0d,0x0a
0000B60C                    	.code
                            	LM32:
0000B60C 0F 9F B7 B5        		pc=L8	// Indirect jump
                            	L9:
00000876                    	.debug
00000876 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
0000088A 68 00 00 00        		.dd LM33-_TrainWord
0000088C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B60E                    	.code
                            	LM33:
0000B60E 40 92              		R1=0	// QImode move
0000B60F 0F 9F 11 B6        		pc=L7	// Indirect jump
0000088E                    	.debug
0000088E 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
000008A2 6B 00 00 00        		.dd LM34-_TrainWord
000008A4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B611                    	.code
                            	LM34:
                            	LBE4:
000008A6                    	.debug
000008A6 2E 00 73 00        		.dw '.stabn 0x44,0,130,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         30 00 2C 00
         00 00 00 00
000008BA 6B 00 00 00        		.dd LM35-_TrainWord
000008BC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B611                    	.code
                            	LM35:
                            	L7:
                            	
0000B611 42 00              		sp+=2
0000B612 88 98              		pop bp from [sp]
0000B613 90 9A              		retf
                            		.endp	// end of TrainWord
                            	
000008BE                    	.debug
000008BE 2E 00 73 00        		.dw '.stabs "WordID:p1",160,0,0,5',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         57 00 6F 00
         72 00 64 00
         49 00 44 00
         3A 00 70 00
         31 00 22 00
         2C 00 31 00
         36 00 30 00
         2C 00 30 00
         2C 00 30 00
         2C 00 35 00
         0D 00 0A 00
0000B614                    	.CODE
000008DC                    	.debug
000008DC 2E 00 73 00        		.dw '.stabs "RespondID:p1",160,0,0,6',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         73 00 70 00
         6F 00 6E 00
         64 00 49 00
         44 00 3A 00
         70 00 31 00
         22 00 2C 00
         31 00 36 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         36 00 0D 00
         0A 00      
0000B614                    	.CODE
000008FD                    	.debug
000008FD 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000090F 07 00 00 00        		.dd LBB4-_TrainWord
00000911 0D 00 0A 00        		.dw 0x0d,0x0a
0000B614                    	.code
00000913                    	.debug
00000913 2E 00 73 00        		.dw '.stabs "res:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         73 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B614                    	.CODE
0000092D                    	.debug
0000092D 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
0000093F 6B 00 00 00        		.dd LBE4-_TrainWord
00000941 0D 00 0A 00        		.dw 0x0d,0x0a
0000B614                    	.code
00000943                    	.debug
00000943 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
0000094C 6E 00 00 00        		.dd LME2-_TrainWord
0000094E 0D 00 0A 00        		.dw 0x0d,0x0a
0000B614                    	.code
                            	LME2:
0000B614                    	.code
00000950                    	.debug
00000950 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         A2 00 00 00
         0D 00 0A 00
0000B614                    	.CODE
                            	.public _main
                            	_main:	.proc
0000096E                    	.debug
0000096E 2E 00 73 00        		.dw '.stabn 0x44,0,133,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         33 00 2C 00
         00 00 00 00
00000982 00 00 00 00        		.dd LM36-_main
00000984 0D 00 0A 00        		.dw 0x0d,0x0a
0000B614                    	.code
                            	LM36:
                            		// total=4, vars=4
                            		// frame_pointer_needed: 1
0000B614 88 DA              		push bp to [sp]
0000B615 44 20              		sp-=4
0000B616 08 0B 01 00        		bp=sp+1
                            	
0000B618 0D 03 07 00        		R1=BP+7
0000B61A 03 D2              		[bp+3]=R1	// QImode move
00000986                    	.debug
00000986 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
0000099A 07 00 00 00        		.dd LM37-_main
0000099C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B61B                    	.code
                            	LM37:
                            	LBB5:
0000B61B 05 93              		R1=BP	// QImode move
0000B61C 0D 05 01 00        		R2=BP+1
0000B61E 40 92              		R1=0	// QImode move
0000B61F 02 97              		R3=R2	// QImode move
0000B620 C3 D2              		[R3]=R1	// QImode move
0000B621 05 93              		R1=BP	// QImode move
0000B622 0D 05 02 00        		R2=BP+2
0000B624 40 92              		R1=0	// QImode move
0000B625 02 99              		R4=R2	// QImode move
0000B626 C4 D2              		[R4]=R1	// QImode move
0000099E                    	.debug
0000099E 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
000009B2 13 00 00 00        		.dd LM38-_main
000009B4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B627                    	.code
                            	LM38:
0000B627 40 F0 5D B7        		call _InitIO	// call with return value
000009B6                    	.debug
000009B6 2E 00 73 00        		.dw '.stabn 0x44,0,137,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         37 00 2C 00
         00 00 00 00
000009CA 15 00 00 00        		.dd LM39-_main
000009CC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B629                    	.code
                            	LM39:
0000B629 40 92              		R1=0	// QImode move
0000B62A C8 D2              		[SP--]=R1	// QImode move
0000B62B 40 F0 21 86        		call _BSR_DeleteSDGroup	// call with return value
0000B62D 41 00              		SP = SP + 1	//SP
000009CE                    	.debug
000009CE 2E 00 73 00        		.dw '.stabn 0x44,0,141,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         31 00 2C 00
         00 00 00 00
000009E2 1A 00 00 00        		.dd LM40-_main
000009E4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B62E                    	.code
                            	LM40:
                            	L27:
0000B62E 40 92              		R1=0	// QImode move
0000B62F C8 D2              		[SP--]=R1	// QImode move
0000B630 09 93 00 01        		R1=256	// QImode move
0000B632 C8 D2              		[SP--]=R1	// QImode move
0000B633 40 F0 A6 B5        		call _TrainWord	// call with return value
0000B635 42 00              		SP = SP + 2	//SP
0000B636 40 42              		CMP R1,0	// QImode test
0000B637 04 4E 01 EE        		NSJNZ L29	//QImode NE
         00 EE      
0000B63A 0F 9F 3E B6        		pc=L28	// Indirect jump
                            	L29:
0000B63C 0F 9F 2E B6        		pc=L27	// Indirect jump
                            	L28:
000009E6                    	.debug
000009E6 2E 00 73 00        		.dw '.stabn 0x44,0,143,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         33 00 2C 00
         00 00 00 00
000009FA 2A 00 00 00        		.dd LM41-_main
000009FC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B63E                    	.code
                            	LM41:
                            	L30:
0000B63E 41 92              		R1=1	// QImode move
0000B63F C8 D2              		[SP--]=R1	// QImode move
0000B640 09 93 01 01        		R1=257	// QImode move
0000B642 C8 D2              		[SP--]=R1	// QImode move
0000B643 40 F0 A6 B5        		call _TrainWord	// call with return value
0000B645 42 00              		SP = SP + 2	//SP
0000B646 40 42              		CMP R1,0	// QImode test
0000B647 04 4E 01 EE        		NSJNZ L32	//QImode NE
         00 EE      
0000B64A 0F 9F 4E B6        		pc=L31	// Indirect jump
                            	L32:
0000B64C 0F 9F 3E B6        		pc=L30	// Indirect jump
                            	L31:
000009FE                    	.debug
000009FE 2E 00 73 00        		.dw '.stabn 0x44,0,145,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         35 00 2C 00
         00 00 00 00
00000A12 3A 00 00 00        		.dd LM42-_main
00000A14 0D 00 0A 00        		.dw 0x0d,0x0a
0000B64E                    	.code
                            	LM42:
                            	L33:
0000B64E 42 92              		R1=2	// QImode move
0000B64F C8 D2              		[SP--]=R1	// QImode move
0000B650 09 93 02 01        		R1=258	// QImode move
0000B652 C8 D2              		[SP--]=R1	// QImode move
0000B653 40 F0 A6 B5        		call _TrainWord	// call with return value
0000B655 42 00              		SP = SP + 2	//SP
0000B656 40 42              		CMP R1,0	// QImode test
0000B657 04 4E 01 EE        		NSJNZ L35	//QImode NE
         00 EE      
0000B65A 0F 9F 5E B6        		pc=L34	// Indirect jump
                            	L35:
0000B65C 0F 9F 4E B6        		pc=L33	// Indirect jump
                            	L34:
00000A16                    	.debug
00000A16 2E 00 73 00        		.dw '.stabn 0x44,0,147,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         37 00 2C 00
         00 00 00 00
00000A2A 4A 00 00 00        		.dd LM43-_main
00000A2C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B65E                    	.code
                            	LM43:
                            	L36:
0000B65E 4C 92              		R1=12	// QImode move
0000B65F C8 D2              		[SP--]=R1	// QImode move
0000B660 09 93 03 01        		R1=259	// QImode move
0000B662 C8 D2              		[SP--]=R1	// QImode move
0000B663 40 F0 A6 B5        		call _TrainWord	// call with return value
0000B665 42 00              		SP = SP + 2	//SP
0000B666 40 42              		CMP R1,0	// QImode test
0000B667 04 4E 01 EE        		NSJNZ L38	//QImode NE
         00 EE      
0000B66A 0F 9F 6E B6        		pc=L37	// Indirect jump
                            	L38:
0000B66C 0F 9F 5E B6        		pc=L36	// Indirect jump
                            	L37:
00000A2E                    	.debug
00000A2E 2E 00 73 00        		.dw '.stabn 0x44,0,149,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         39 00 2C 00
         00 00 00 00
00000A42 5A 00 00 00        		.dd LM44-_main
00000A44 0D 00 0A 00        		.dw 0x0d,0x0a
0000B66E                    	.code
                            	LM44:
                            	L39:
0000B66E 4D 92              		R1=13	// QImode move
0000B66F C8 D2              		[SP--]=R1	// QImode move
0000B670 09 93 04 01        		R1=260	// QImode move
0000B672 C8 D2              		[SP--]=R1	// QImode move
0000B673 40 F0 A6 B5        		call _TrainWord	// call with return value
0000B675 42 00              		SP = SP + 2	//SP
0000B676 40 42              		CMP R1,0	// QImode test
0000B677 04 4E 01 EE        		NSJNZ L41	//QImode NE
         00 EE      
0000B67A 0F 9F 7E B6        		pc=L40	// Indirect jump
                            	L41:
0000B67C 0F 9F 6E B6        		pc=L39	// Indirect jump
                            	L40:
00000A46                    	.debug
00000A46 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
00000A5A 6A 00 00 00        		.dd LM45-_main
00000A5C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B67E                    	.code
                            	LM45:
0000B67E 40 92              		R1=0	// QImode move
0000B67F C8 D2              		[SP--]=R1	// QImode move
0000B680 40 F0 7F 9B        		call _BSR_InitRecognizer	// call with return value
0000B682 41 00              		SP = SP + 1	//SP
00000A5E                    	.debug
00000A5E 2E 00 73 00        		.dw '.stabn 0x44,0,153,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         33 00 2C 00
         00 00 00 00
00000A72 6F 00 00 00        		.dd LM46-_main
00000A74 0D 00 0A 00        		.dw 0x0d,0x0a
0000B683                    	.code
                            	LM46:
0000B683 40 F0 40 9B        		call _BSR_EnableCPUIndicator	// call without return value
00000A76                    	.debug
00000A76 2E 00 73 00        		.dw '.stabn 0x44,0,154,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         34 00 2C 00
         00 00 00 00
00000A8A 71 00 00 00        		.dd LM47-_main
00000A8C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B685                    	.code
                            	LM47:
0000B685 47 92              		R1=7	// QImode move
0000B686 C8 D2              		[SP--]=R1	// QImode move
0000B687 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B689 41 00              		SP = SP + 1	//SP
00000A8E                    	.debug
00000A8E 2E 00 73 00        		.dw '.stabn 0x44,0,156,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         36 00 2C 00
         00 00 00 00
00000AA2 76 00 00 00        		.dd LM48-_main
00000AA4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B68A                    	.code
                            	LM48:
                            	L42:
0000B68A 0F 9F 8E B6        		pc=L44	// Indirect jump
0000B68C 0F 9F 4C B7        		pc=L43	// Indirect jump
                            	L44:
00000AA6                    	.debug
00000AA6 2E 00 73 00        		.dw '.stabn 0x44,0,158,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         38 00 2C 00
         00 00 00 00
00000ABA 7A 00 00 00        		.dd LM49-_main
00000ABC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B68E                    	.code
                            	LM49:
0000B68E 05 93              		R1=BP	// QImode move
0000B68F 0D 05 02 00        		R2=BP+2
0000B691 05 97              		R3=BP	// QImode move
0000B692 0D 03 02 00        		R1=BP+2
0000B694 05 95              		R2=BP	// QImode move
0000B695 0D 07 02 00        		R3=BP+2
0000B697 03 99              		R4=R3	// QImode move
0000B698 C4 94              		R2=[R4]	// QImode move
0000B699 0A 07 01 00        		R3=R2+1
0000B69B 01 95              		R2=R1	// QImode move
0000B69C C2 D6              		[R2]=R3	// QImode move
00000ABE                    	.debug
00000ABE 2E 00 73 00        		.dw '.stabn 0x44,0,159,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         39 00 2C 00
         00 00 00 00
00000AD2 89 00 00 00        		.dd LM50-_main
00000AD4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B69D                    	.code
                            	LM50:
0000B69D 05 93              		R1=BP	// QImode move
0000B69E 0D 05 02 00        		R2=BP+2
0000B6A0 02 97              		R3=R2	// QImode move
0000B6A1 C3 92              		R1=[R3]	// QImode move
0000B6A2 42 42              		CMP R1,2	// QImode compare
0000B6A3 08 AE 01 EE        		NSJNG L45	//QImode LE
         00 EE      
0000B6A6 05 93              		R1=BP	// QImode move
0000B6A7 0D 05 02 00        		R2=BP+2
0000B6A9 40 92              		R1=0	// QImode move
0000B6AA 02 99              		R4=R2	// QImode move
0000B6AB C4 D2              		[R4]=R1	// QImode move
                            	L45:
00000AD6                    	.debug
00000AD6 2E 00 73 00        		.dw '.stabn 0x44,0,160,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         30 00 2C 00
         00 00 00 00
00000AEA 98 00 00 00        		.dd LM51-_main
00000AEC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6AC                    	.code
                            	LM51:
0000B6AC 40 F0 AC 9B        		call _BSR_GetResult	// call with return value
0000B6AE C5 D2              		[BP]=R1	// QImode move
00000AEE                    	.debug
00000AEE 2E 00 73 00        		.dw '.stabn 0x44,0,162,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         32 00 2C 00
         00 00 00 00
00000B02 9B 00 00 00        		.dd LM52-_main
00000B04 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6AF                    	.code
                            	LM52:
0000B6AF C5 92              		R1=[BP]	// QImode move
0000B6B0 40 42              		CMP R1,0	// QImode test
0000B6B1 02 BE 0F 9F        		NSJNG L46	//QImode LE
         21 B7      
00000B06                    	.debug
00000B06 2E 00 73 00        		.dw '.stabn 0x44,0,164,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         34 00 2C 00
         00 00 00 00
00000B1A A0 00 00 00        		.dd LM53-_main
00000B1C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6B4                    	.code
                            	LM53:
0000B6B4 11 93 F0 04        		R1=[_gActivated]	// QImode move
0000B6B6 40 42              		CMP R1,0	// QImode test
0000B6B7 02 4E 0F 9F        		NSJZ L47	//QImode EQ
         02 B7      
00000B1E                    	.debug
00000B1E 2E 00 73 00        		.dw '.stabn 0x44,0,166,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         36 00 2C 00
         00 00 00 00
00000B32 A6 00 00 00        		.dd LM54-_main
00000B34 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6BA                    	.code
                            	LM54:
0000B6BA 05 93              		R1=BP	// QImode move
0000B6BB 0D 05 01 00        		R2=BP+1
0000B6BD 40 92              		R1=0	// QImode move
0000B6BE 02 97              		R3=R2	// QImode move
0000B6BF C3 D2              		[R3]=R1	// QImode move
00000B36                    	.debug
00000B36 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
00000B4A AC 00 00 00        		.dd LM55-_main
00000B4C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6C0                    	.code
                            	LM55:
0000B6C0 C5 94              		R2=[BP]	// QImode move
0000B6C1 02 93              		R1=R2	// QImode move
0000B6C2 09 23 00 01        		R1=R1-256
0000B6C4 44 42              		CMP R1,4	// QImode compare
0000B6C5 3A 9E 01 EE        		NSJA L48	//QImode GTU
         00 EE      
0000B6C8 0A 95 73 A6        		R2=L54	// QImode move
0000B6CA 02 03              		R1 = R1 + R2	//addqi3
0000B6CB 01 99              		R4=R1	// QImode move
0000B6CC C4 92              		R1=[R4]	// QImode move
0000B6CD 01 9F              		pc=R1	// tablejump
0000A673                    	.text
                            	L54:
0000A673 CE B6              		.dw L49
0000A674 DE B6              		.dw L50
0000A675 EB B6              		.dw L51
0000A676 F2 B6              		.dw L52
0000A677 F9 B6              		.dw L53
0000B6CE                    	.code
00000B4E                    	.debug
00000B4E 2E 00 73 00        		.dw '.stabn 0x44,0,169,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         39 00 2C 00
         00 00 00 00
00000B62 BA 00 00 00        		.dd LM56-_main
00000B64 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6CE                    	.code
                            	LM56:
                            	LBB6:
                            	L49:
00000B66                    	.debug
00000B66 2E 00 73 00        		.dw '.stabn 0x44,0,170,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         30 00 2C 00
         00 00 00 00
00000B7A BA 00 00 00        		.dd LM57-_main
00000B7C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6CE                    	.code
                            	LM57:
0000B6CE 05 93              		R1=BP	// QImode move
0000B6CF 0D 05 02 00        		R2=BP+2
0000B6D1 09 93 F1 04        		R1=_gTriggerRespond	// QImode move
0000B6D3 02 97              		R3=R2	// QImode move
0000B6D4 C3 94              		R2=[R3]	// QImode move
0000B6D5 02 03              		R1 = R1 + R2	//addqi3
0000B6D6 01 99              		R4=R1	// QImode move
0000B6D7 C4 94              		R2=[R4]	// QImode move
0000B6D8 C8 D4              		[SP--]=R2	// QImode move
0000B6D9 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B6DB 41 00              		SP = SP + 1	//SP
00000B7E                    	.debug
00000B7E 2E 00 73 00        		.dw '.stabn 0x44,0,171,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         31 00 2C 00
         00 00 00 00
00000B92 C8 00 00 00        		.dd LM58-_main
00000B94 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6DC                    	.code
                            	LM58:
0000B6DC 0F 9F 00 B7        		pc=L48	// Indirect jump
                            	L50:
00000B96                    	.debug
00000B96 2E 00 73 00        		.dw '.stabn 0x44,0,173,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         33 00 2C 00
         00 00 00 00
00000BAA CA 00 00 00        		.dd LM59-_main
00000BAC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6DE                    	.code
                            	LM59:
0000B6DE 41 92              		R1=1	// QImode move
0000B6DF 19 D3 F7 04        		[_PlayFlag]=R1	// QImode move
00000BAE                    	.debug
00000BAE 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
00000BC2 CD 00 00 00        		.dd LM60-_main
00000BC4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6E1                    	.code
                            	LM60:
0000B6E1 40 F0 70 B7        		call _LED_RED_ON	// call with return value
00000BC6                    	.debug
00000BC6 2E 00 73 00        		.dw '.stabn 0x44,0,175,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         35 00 2C 00
         00 00 00 00
00000BDA CF 00 00 00        		.dd LM61-_main
00000BDC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6E3                    	.code
                            	LM61:
0000B6E3 40 92              		R1=0	// QImode move
0000B6E4 19 D3 F7 04        		[_PlayFlag]=R1	// QImode move
00000BDE                    	.debug
00000BDE 2E 00 73 00        		.dw '.stabn 0x44,0,176,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         36 00 2C 00
         00 00 00 00
00000BF2 D2 00 00 00        		.dd LM62-_main
00000BF4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6E6                    	.code
                            	LM62:
0000B6E6 40 92              		R1=0	// QImode move
0000B6E7 19 D3 F0 04        		[_gActivated]=R1	// QImode move
00000BF6                    	.debug
00000BF6 2E 00 73 00        		.dw '.stabn 0x44,0,177,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         37 00 2C 00
         00 00 00 00
00000C0A D5 00 00 00        		.dd LM63-_main
00000C0C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6E9                    	.code
                            	LM63:
0000B6E9 0F 9F 00 B7        		pc=L48	// Indirect jump
                            	L51:
00000C0E                    	.debug
00000C0E 2E 00 73 00        		.dw '.stabn 0x44,0,179,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         39 00 2C 00
         00 00 00 00
00000C22 D7 00 00 00        		.dd LM64-_main
00000C24 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6EB                    	.code
                            	LM64:
0000B6EB 40 F0 77 B7        		call _LED_RED_OFF	// call with return value
00000C26                    	.debug
00000C26 2E 00 73 00        		.dw '.stabn 0x44,0,180,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         30 00 2C 00
         00 00 00 00
00000C3A D9 00 00 00        		.dd LM65-_main
00000C3C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6ED                    	.code
                            	LM65:
0000B6ED 40 92              		R1=0	// QImode move
0000B6EE 19 D3 F0 04        		[_gActivated]=R1	// QImode move
00000C3E                    	.debug
00000C3E 2E 00 73 00        		.dw '.stabn 0x44,0,181,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         31 00 2C 00
         00 00 00 00
00000C52 DC 00 00 00        		.dd LM66-_main
00000C54 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6F0                    	.code
                            	LM66:
0000B6F0 0F 9F 00 B7        		pc=L48	// Indirect jump
                            	L52:
00000C56                    	.debug
00000C56 2E 00 73 00        		.dw '.stabn 0x44,0,183,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         33 00 2C 00
         00 00 00 00
00000C6A DE 00 00 00        		.dd LM67-_main
00000C6C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6F2                    	.code
                            	LM67:
0000B6F2 40 F0 7E B7        		call _LED_GRE_ON	// call with return value
00000C6E                    	.debug
00000C6E 2E 00 73 00        		.dw '.stabn 0x44,0,184,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         34 00 2C 00
         00 00 00 00
00000C82 E0 00 00 00        		.dd LM68-_main
00000C84 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6F4                    	.code
                            	LM68:
0000B6F4 40 92              		R1=0	// QImode move
0000B6F5 19 D3 F0 04        		[_gActivated]=R1	// QImode move
00000C86                    	.debug
00000C86 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
00000C9A E3 00 00 00        		.dd LM69-_main
00000C9C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6F7                    	.code
                            	LM69:
0000B6F7 0F 9F 00 B7        		pc=L48	// Indirect jump
                            	L53:
00000C9E                    	.debug
00000C9E 2E 00 73 00        		.dw '.stabn 0x44,0,188,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         38 00 2C 00
         00 00 00 00
00000CB2 E5 00 00 00        		.dd LM70-_main
00000CB4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6F9                    	.code
                            	LM70:
0000B6F9 40 F0 85 B7        		call _LED_GRE_OFF	// call with return value
00000CB6                    	.debug
00000CB6 2E 00 73 00        		.dw '.stabn 0x44,0,189,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         39 00 2C 00
         00 00 00 00
00000CCA E7 00 00 00        		.dd LM71-_main
00000CCC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6FB                    	.code
                            	LM71:
0000B6FB 40 92              		R1=0	// QImode move
0000B6FC 19 D3 F0 04        		[_gActivated]=R1	// QImode move
00000CCE                    	.debug
00000CCE 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
00000CE2 EA 00 00 00        		.dd LM72-_main
00000CE4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B6FE                    	.code
                            	LM72:
0000B6FE 0F 9F 00 B7        		pc=L48	// Indirect jump
00000CE6                    	.debug
00000CE6 2E 00 73 00        		.dw '.stabn 0x44,0,193,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         33 00 2C 00
         00 00 00 00
00000CFA EC 00 00 00        		.dd LM73-_main
00000CFC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B700                    	.code
                            	LM73:
                            	LBE6:
                            	L55:
                            	L48:
00000CFE                    	.debug
00000CFE 2E 00 73 00        		.dw '.stabn 0x44,0,194,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         34 00 2C 00
         00 00 00 00
00000D12 EC 00 00 00        		.dd LM74-_main
00000D14 0D 00 0A 00        		.dw 0x0d,0x0a
0000B700                    	.code
                            	LM74:
0000B700 0F 9F 1F B7        		pc=L56	// Indirect jump
                            	L47:
00000D16                    	.debug
00000D16 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
00000D2A EE 00 00 00        		.dd LM75-_main
00000D2C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B702                    	.code
                            	LM75:
0000B702 C5 92              		R1=[BP]	// QImode move
0000B703 09 43 00 01        		CMP R1,256	// QImode compare
0000B705 19 4E 01 EE        		NSJNZ L56	//QImode NE
         00 EE      
00000D2E                    	.debug
00000D2E 2E 00 73 00        		.dw '.stabn 0x44,0,199,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         39 00 2C 00
         00 00 00 00
00000D42 F4 00 00 00        		.dd LM76-_main
00000D44 0D 00 0A 00        		.dw 0x0d,0x0a
0000B708                    	.code
                            	LM76:
0000B708 05 93              		R1=BP	// QImode move
0000B709 0D 05 02 00        		R2=BP+2
0000B70B 09 93 F1 04        		R1=_gTriggerRespond	// QImode move
0000B70D 02 97              		R3=R2	// QImode move
0000B70E C3 94              		R2=[R3]	// QImode move
0000B70F 02 03              		R1 = R1 + R2	//addqi3
0000B710 01 99              		R4=R1	// QImode move
0000B711 C4 94              		R2=[R4]	// QImode move
0000B712 C8 D4              		[SP--]=R2	// QImode move
0000B713 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B715 41 00              		SP = SP + 1	//SP
00000D46                    	.debug
00000D46 2E 00 73 00        		.dw '.stabn 0x44,0,200,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         30 00 2C 00
         00 00 00 00
00000D5A 02 01 00 00        		.dd LM77-_main
00000D5C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B716                    	.code
                            	LM77:
0000B716 41 92              		R1=1	// QImode move
0000B717 19 D3 F0 04        		[_gActivated]=R1	// QImode move
00000D5E                    	.debug
00000D5E 2E 00 73 00        		.dw '.stabn 0x44,0,201,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         31 00 2C 00
         00 00 00 00
00000D72 05 01 00 00        		.dd LM78-_main
00000D74 0D 00 0A 00        		.dw 0x0d,0x0a
0000B719                    	.code
                            	LM78:
0000B719 05 93              		R1=BP	// QImode move
0000B71A 0D 05 01 00        		R2=BP+1
0000B71C 40 92              		R1=0	// QImode move
0000B71D 02 97              		R3=R2	// QImode move
0000B71E C3 D2              		[R3]=R1	// QImode move
                            	L57:
                            	L56:
00000D76                    	.debug
00000D76 2E 00 73 00        		.dw '.stabn 0x44,0,204,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         34 00 2C 00
         00 00 00 00
00000D8A 0B 01 00 00        		.dd LM79-_main
00000D8C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B71F                    	.code
                            	LM79:
0000B71F 0F 9F 4A B7        		pc=L58	// Indirect jump
                            	L46:
00000D8E                    	.debug
00000D8E 2E 00 73 00        		.dw '.stabn 0x44,0,205,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         35 00 2C 00
         00 00 00 00
00000DA2 0D 01 00 00        		.dd LM80-_main
00000DA4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B721                    	.code
                            	LM80:
0000B721 11 93 F0 04        		R1=[_gActivated]	// QImode move
0000B723 40 42              		CMP R1,0	// QImode test
0000B724 25 5E 01 EE        		NSJZ L58	//QImode EQ
         00 EE      
00000DA6                    	.debug
00000DA6 2E 00 73 00        		.dw '.stabn 0x44,0,207,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         37 00 2C 00
         00 00 00 00
00000DBA 13 01 00 00        		.dd LM81-_main
00000DBC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B727                    	.code
                            	LM81:
0000B727 05 93              		R1=BP	// QImode move
0000B728 0D 05 01 00        		R2=BP+1
0000B72A 05 97              		R3=BP	// QImode move
0000B72B 0D 03 01 00        		R1=BP+1
0000B72D 05 95              		R2=BP	// QImode move
0000B72E 0D 07 01 00        		R3=BP+1
0000B730 03 95              		R2=R3	// QImode move
0000B731 C2 98              		R4=[R2]	// QImode move
0000B732 0C 05 01 00        		R2=R4+1
0000B734 02 97              		R3=R2	// QImode move
0000B735 01 99              		R4=R1	// QImode move
0000B736 C4 D6              		[R4]=R3	// QImode move
0000B737 0B 47 C2 01        		CMP R3,450	// QImode compare
0000B739 10 AE 01 EE        		NSJNG L58	//QImode LE
         00 EE      
00000DBE                    	.debug
00000DBE 2E 00 73 00        		.dw '.stabn 0x44,0,209,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         39 00 2C 00
         00 00 00 00
00000DD2 28 01 00 00        		.dd LM82-_main
00000DD4 0D 00 0A 00        		.dw 0x0d,0x0a
0000B73C                    	.code
                            	LM82:
0000B73C 44 92              		R1=4	// QImode move
0000B73D C8 D2              		[SP--]=R1	// QImode move
0000B73E 40 F0 72 B5        		call _PlayRespond	// call without return value
0000B740 41 00              		SP = SP + 1	//SP
00000DD6                    	.debug
00000DD6 2E 00 73 00        		.dw '.stabn 0x44,0,210,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         30 00 2C 00
         00 00 00 00
00000DEA 2D 01 00 00        		.dd LM83-_main
00000DEC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B741                    	.code
                            	LM83:
0000B741 40 92              		R1=0	// QImode move
0000B742 19 D3 F0 04        		[_gActivated]=R1	// QImode move
00000DEE                    	.debug
00000DEE 2E 00 73 00        		.dw '.stabn 0x44,0,211,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         31 00 2C 00
         00 00 00 00
00000E02 30 01 00 00        		.dd LM84-_main
00000E04 0D 00 0A 00        		.dw 0x0d,0x0a
0000B744                    	.code
                            	LM84:
0000B744 05 93              		R1=BP	// QImode move
0000B745 0D 05 01 00        		R2=BP+1
0000B747 40 92              		R1=0	// QImode move
0000B748 02 97              		R3=R2	// QImode move
0000B749 C3 D2              		[R3]=R1	// QImode move
                            	L60:
                            	L59:
                            	L58:
00000E06                    	.debug
00000E06 2E 00 73 00        		.dw '.stabn 0x44,0,214,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         34 00 2C 00
         00 00 00 00
00000E1A 36 01 00 00        		.dd LM85-_main
00000E1C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74A                    	.code
                            	LM85:
0000B74A 0F 9F 8A B6        		pc=L42	// Indirect jump
                            	L43:
00000E1E                    	.debug
00000E1E 2E 00 73 00        		.dw '.stabn 0x44,0,215,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         35 00 2C 00
         00 00 00 00
00000E32 38 01 00 00        		.dd LM86-_main
00000E34 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74C                    	.code
                            	LM86:
                            	LBE5:
00000E36                    	.debug
00000E36 2E 00 73 00        		.dw '.stabn 0x44,0,215,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 31 00
         35 00 2C 00
         00 00 00 00
00000E4A 38 01 00 00        		.dd LM87-_main
00000E4C 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74C                    	.code
                            	LM87:
                            	L26:
                            	
0000B74C 44 00              		sp+=4
0000B74D 88 98              		pop bp from [sp]
0000B74E 90 9A              		retf
                            		.endp	// end of main
                            	
00000E4E                    	.debug
00000E4E 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E60 07 00 00 00        		.dd LBB5-_main
00000E62 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74F                    	.code
00000E64                    	.debug
00000E64 2E 00 73 00        		.dw '.stabs "res:1",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 65 00
         73 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
0000B74F                    	.CODE
00000E7E                    	.debug
00000E7E 2E 00 73 00        		.dw '.stabs "timeCnt:1",128,0,0,1',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         74 00 69 00
         6D 00 65 00
         43 00 6E 00
         74 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 31 00
         0D 00 0A 00
0000B74F                    	.CODE
00000E9C                    	.debug
00000E9C 2E 00 73 00        		.dw '.stabs "random_no:1",128,0,0,2',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         72 00 61 00
         6E 00 64 00
         6F 00 6D 00
         5F 00 6E 00
         6F 00 3A 00
         31 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 32 00
         0D 00 0A 00
0000B74F                    	.CODE
00000EBC                    	.debug
00000EBC 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000ECE BA 00 00 00        		.dd LBB6-_main
00000ED0 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74F                    	.code
00000ED2                    	.debug
00000ED2 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000EE4 EC 00 00 00        		.dd LBE6-_main
00000EE6 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74F                    	.code
00000EE8                    	.debug
00000EE8 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000EFA 38 01 00 00        		.dd LBE5-_main
00000EFC 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74F                    	.code
00000EFE                    	.debug
00000EFE 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000F07 3B 01 00 00        		.dd LME3-_main
00000F09 0D 00 0A 00        		.dw 0x0d,0x0a
0000B74F                    	.code
                            	LME3:
                            	.external _LED_GRE_OFF
                            	.external _LED_GRE_ON
                            	.external _LED_RED_OFF
                            	.external _LED_RED_ON
                            	.external _BSR_GetResult
                            	.external _BSR_DeleteSDGroup
                            	.external _InitIO
                            	.external _BSR_Train
                            	.external _BSR_EnableCPUIndicator
                            	.external _BSR_InitRecognizer
                            	.external _SACM_S480_Stop
                            	.external _ClearWatchDog
                            	.external _SACM_S480_ServiceLoop
                            	.external _SACM_S480_Status
                            	.external _SACM_S480_Play
                            	.external _SACM_S480_Initial
                            	.external _BSR_StopRecognizer
                            		.end
0 error(s), 0 warning(s).

