Sunplus u'nSP Assembler - Ver. 1.14.3.1
              Listing File Has Been Relocated
                            	// GCC for SUNPLUS u'nSP version 1.0.21-3
                            	// Command: D:\PROGRA~1\Sunplus\UNSPID~1.0\cc1.exe C:\DOCUME~1\ZHANGZ~1.YSU\LOCALS~1\Temp\ccGEaaaa.i -fkeep-inline-functions -quiet -dumpbase main.c -mglobal-var-iram -gstabs -o .\Debug/main.asm
                            		.external __sn_func_ptr_sec
                            	
                            	// gcc2_compiled.:
                            	
00000000                    	.debug
00000000 2E 00 73 00        		.dw '.stabs "F:/abc/fudu3/",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 61 00
         62 00 63 00
         2F 00 66 00
         75 00 64 00
         75 00 33 00
         2F 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00009A8C                    	.code
00000026                    	.debug
00000026 2E 00 73 00        		.dw '.stabs "F:/abc/fudu3/main.c",0x64,0,3,',0,0,offset Ltext0,seg Ltext0,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         46 00 3A 00
         2F 00 61 00
         62 00 63 00
         2F 00 66 00
         75 00 64 00
         75 00 33 00
         2F 00 6D 00
         61 00 69 00
         6E 00 2E 00
         63 00 22 00
         2C 00 30 00
         78 00 36 00
         34 00 2C 00
         30 00 2C 00
         33 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00009A8C                    	.code
00009A8C                    	.code
                            	Ltext0:
00000052                    	.debug
00000052 2E 00 73 00        		.dw '.stabs "int:t1=r1;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         3D 00 72 00
         31 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
0000007E                    	.debug
0000007E 2E 00 73 00        		.dw '.stabs "char:t2=r2;0;127;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 68 00
         61 00 72 00
         3A 00 74 00
         32 00 3D 00
         72 00 32 00
         3B 00 30 00
         3B 00 31 00
         32 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
000000A4                    	.debug
000000A4 2E 00 73 00        		.dw '.stabs "long int:t3=r3;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         33 00 3D 00
         72 00 33 00
         3B 00 2D 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 38 00
         3B 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         37 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009A8C                    	.CODE
000000DF                    	.debug
000000DF 2E 00 73 00        		.dw '.stabs "unsigned int:t4=r4;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         34 00 3D 00
         72 00 34 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
0000010F                    	.debug
0000010F 2E 00 73 00        		.dw '.stabs "long unsigned int:t5=r5;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 75 00
         6E 00 73 00
         69 00 67 00
         6E 00 65 00
         64 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 35 00
         3D 00 72 00
         35 00 3B 00
         30 00 3B 00
         34 00 32 00
         39 00 34 00
         39 00 36 00
         37 00 32 00
         39 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
00000149                    	.debug
00000149 2E 00 73 00        		.dw '.stabs "long long int:t6=r6;-2147483648;2147483647;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 36 00
         3D 00 72 00
         36 00 3B 00
         2D 00 32 00
         31 00 34 00
         37 00 34 00
         38 00 33 00
         36 00 34 00
         38 00 3B 00
         32 00 31 00
         34 00 37 00
         34 00 38 00
         33 00 36 00
         34 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
00000189                    	.debug
00000189 2E 00 73 00        		.dw '.stabs "long long unsigned int:t7=r7;0;4294967295;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 6C 00
         6F 00 6E 00
         67 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         37 00 3D 00
         72 00 37 00
         3B 00 30 00
         3B 00 34 00
         32 00 39 00
         34 00 39 00
         36 00 37 00
         32 00 39 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009A8C                    	.CODE
000001C8                    	.debug
000001C8 2E 00 73 00        		.dw '.stabs "short int:t8=r8;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 38 00
         3D 00 72 00
         38 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
000001FA                    	.debug
000001FA 2E 00 73 00        		.dw '.stabs "short unsigned int:t9=r9;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 68 00
         6F 00 72 00
         74 00 20 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 69 00
         6E 00 74 00
         3A 00 74 00
         39 00 3D 00
         72 00 39 00
         3B 00 30 00
         3B 00 36 00
         35 00 35 00
         33 00 35 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
00000230                    	.debug
00000230 2E 00 73 00        		.dw '.stabs "signed char:t10=r10;-32768;32767;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         30 00 3D 00
         72 00 31 00
         30 00 3B 00
         2D 00 33 00
         32 00 37 00
         36 00 38 00
         3B 00 33 00
         32 00 37 00
         36 00 37 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
00000266                    	.debug
00000266 2E 00 73 00        		.dw '.stabs "unsigned char:t11=r11;0;65535;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         75 00 6E 00
         73 00 69 00
         67 00 6E 00
         65 00 64 00
         20 00 63 00
         68 00 61 00
         72 00 3A 00
         74 00 31 00
         31 00 3D 00
         72 00 31 00
         31 00 3B 00
         30 00 3B 00
         36 00 35 00
         35 00 33 00
         35 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009A8C                    	.CODE
00000299                    	.debug
00000299 2E 00 73 00        		.dw '.stabs "float:t12=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         32 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
000002BF                    	.debug
000002BF 2E 00 73 00        		.dw '.stabs "double:t13=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 33 00
         3D 00 72 00
         31 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009A8C                    	.CODE
000002E6                    	.debug
000002E6 2E 00 73 00        		.dw '.stabs "long double:t14=r1;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         34 00 3D 00
         72 00 31 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
00000312                    	.debug
00000312 2E 00 73 00        		.dw '.stabs "complex int:t15=s2real:1,0,16;imag:1,16,16;;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         69 00 6E 00
         74 00 3A 00
         74 00 31 00
         35 00 3D 00
         73 00 32 00
         72 00 65 00
         61 00 6C 00
         3A 00 31 00
         2C 00 30 00
         2C 00 31 00
         36 00 3B 00
         69 00 6D 00
         61 00 67 00
         3A 00 31 00
         2C 00 31 00
         36 00 2C 00
         31 00 36 00
         3B 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009A8C                    	.CODE
00000353                    	.debug
00000353 2E 00 73 00        		.dw '.stabs "complex float:t16=r16;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         66 00 6C 00
         6F 00 61 00
         74 00 3A 00
         74 00 31 00
         36 00 3D 00
         72 00 31 00
         36 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009A8C                    	.CODE
00000382                    	.debug
00000382 2E 00 73 00        		.dw '.stabs "complex double:t17=r17;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         64 00 6F 00
         75 00 62 00
         6C 00 65 00
         3A 00 74 00
         31 00 37 00
         3D 00 72 00
         31 00 37 00
         3B 00 32 00
         3B 00 30 00
         3B 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
000003B2                    	.debug
000003B2 2E 00 73 00        		.dw '.stabs "complex long double:t18=r18;2;0;",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         63 00 6F 00
         6D 00 70 00
         6C 00 65 00
         78 00 20 00
         6C 00 6F 00
         6E 00 67 00
         20 00 64 00
         6F 00 75 00
         62 00 6C 00
         65 00 3A 00
         74 00 31 00
         38 00 3D 00
         72 00 31 00
         38 00 3B 00
         32 00 3B 00
         30 00 3B 00
         22 00 2C 00
         31 00 32 00
         38 00 2C 00
         30 00 2C 00
         30 00 2C 00
         30 00 0D 00
         0A 00      
00009A8C                    	.CODE
000003E7                    	.debug
000003E7 2E 00 73 00        		.dw '.stabs "void:t19=19",128,0,0,0',0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         76 00 6F 00
         69 00 64 00
         3A 00 74 00
         31 00 39 00
         3D 00 31 00
         39 00 22 00
         2C 00 31 00
         32 00 38 00
         2C 00 30 00
         2C 00 30 00
         2C 00 30 00
         0D 00 0A 00
00009A8C                    	.CODE
00000407                    	.debug
00000407 2E 00 73 00        		.dw '.stabs "Status:G4",32,0,0,',0,0,offset _Status,seg _Status,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 74 00
         61 00 74 00
         75 00 73 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00009A8C                    	.CODE
00000427                    	.debug
00000427 2E 00 73 00        		.dw '.stabs "Ret:G4",32,0,0,',0,0,offset _Ret,seg _Ret,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         52 00 65 00
         74 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 01 00
         00 00 0D 00
         0A 00      
00009A8C                    	.CODE
00000444                    	.debug
00000444 2E 00 73 00        		.dw '.stabs "Key:G4",32,0,0,',0,0,offset _Key,seg _Key,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         4B 00 65 00
         79 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 02 00
         00 00 0D 00
         0A 00      
00009A8C                    	.CODE
00000461                    	.debug
00000461 2E 00 73 00        		.dw '.stabs "Addr:G4",32,0,0,',0,0,offset _Addr,seg _Addr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         41 00 64 00
         64 00 72 00
         3A 00 47 00
         34 00 22 00
         2C 00 33 00
         32 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         03 00 00 00
         0D 00 0A 00
00009A8C                    	.CODE
0000047F                    	.debug
0000047F 2E 00 73 00        		.dw '.stabs "Save_Addr:G4",32,0,0,',0,0,offset _Save_Addr,seg _Save_Addr,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         53 00 61 00
         76 00 65 00
         5F 00 41 00
         64 00 64 00
         72 00 3A 00
         47 00 34 00
         22 00 2C 00
         33 00 32 00
         2C 00 30 00
         2C 00 30 00
         2C 00 00 00
         00 00 04 00
         00 00 0D 00
         0A 00      
00009A8C                    	.CODE
00009A8C                    	.code
000004A2                    	.debug
000004A2 2E 00 73 00        		.dw '.stabs "main:F1",36,0,0,',0,0,offset _main,seg _main,0x0d,0x0a
         74 00 61 00
         62 00 73 00
         20 00 22 00
         6D 00 61 00
         69 00 6E 00
         3A 00 46 00
         31 00 22 00
         2C 00 33 00
         36 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
         00 00 00 00
         0D 00 0A 00
00009A8C                    	.CODE
                            	.public _main
                            	_main:	.proc
000004C0                    	.debug
000004C0 2E 00 73 00        		.dw '.stabn 0x44,0,65,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 35 00
         2C 00 00 00
         00 00      
000004D3 00 00 00 00        		.dd LM1-_main
000004D5 0D 00 0A 00        		.dw 0x0d,0x0a
00009A8C                    	.code
                            	LM1:
                            		// total=1, vars=1
                            		// frame_pointer_needed: 1
00009A8C 88 DA              		push bp to [sp]
00009A8D 41 20              		sp-=1
00009A8E 08 0B 01 00        		bp=sp+1
                            	
00009A90 0D 03 04 00        		R1=BP+4
00009A92 C5 D2              		[BP]=R1	// QImode move
000004D7                    	.debug
000004D7 2E 00 73 00        		.dw '.stabn 0x44,0,66,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 36 00
         2C 00 00 00
         00 00      
000004EA 07 00 00 00        		.dd LM2-_main
000004EC 0D 00 0A 00        		.dw 0x0d,0x0a
00009A93                    	.code
                            	LM2:
                            	LBB2:
00009A93 40 F0 79 9C        		call _System_Initial	// call with return value
000004EE                    	.debug
000004EE 2E 00 73 00        		.dw '.stabn 0x44,0,67,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 37 00
         2C 00 00 00
         00 00      
00000501 09 00 00 00        		.dd LM3-_main
00000503 0D 00 0A 00        		.dw 0x0d,0x0a
00009A95                    	.code
                            	LM3:
00009A95 40 92              		R1=0	// QImode move
00009A96 C8 D2              		[SP--]=R1	// QImode move
00009A97 40 F0 2F 80        		call _SACM_DVR_Initial	// call with return value
00009A99 41 00              		SP = SP + 1	//SP
00000505                    	.debug
00000505 2E 00 73 00        		.dw '.stabn 0x44,0,68,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 38 00
         2C 00 00 00
         00 00      
00000518 0E 00 00 00        		.dd LM4-_main
0000051A 0D 00 0A 00        		.dw 0x0d,0x0a
00009A9A                    	.code
                            	LM4:
00009A9A 40 92              		R1=0	// QImode move
00009A9B 19 D3 A7 06        		[_Status]=R1	// QImode move
0000051C                    	.debug
0000051C 2E 00 73 00        		.dw '.stabn 0x44,0,69,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         36 00 39 00
         2C 00 00 00
         00 00      
0000052F 11 00 00 00        		.dd LM5-_main
00000531 0D 00 0A 00        		.dw 0x0d,0x0a
00009A9D                    	.code
                            	LM5:
                            	L3:
00009A9D 0F 9F A1 9A        		pc=L5	// Indirect jump
00009A9F 0F 9F FC 9B        		pc=L4	// Indirect jump
                            	L5:
00000533                    	.debug
00000533 2E 00 73 00        		.dw '.stabn 0x44,0,71,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 31 00
         2C 00 00 00
         00 00      
00000546 15 00 00 00        		.dd LM6-_main
00000548 0D 00 0A 00        		.dw 0x0d,0x0a
00009AA1                    	.code
                            	LM6:
                            	LBB3:
00009AA1 40 F0 37 9C        		call _SP_GetCh	// call with return value
00009AA3 19 D3 A9 06        		[_Key]=R1	// QImode move
0000054A                    	.debug
0000054A 2E 00 73 00        		.dw '.stabn 0x44,0,72,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 32 00
         2C 00 00 00
         00 00      
0000055D 19 00 00 00        		.dd LM7-_main
0000055F 0D 00 0A 00        		.dw 0x0d,0x0a
00009AA5                    	.code
                            	LM7:
00009AA5 11 93 A9 06        		R1=[_Key]	// QImode move
00009AA7 42 42              		CMP R1,2	// QImode compare
00009AA8 3F 5E 01 EE        		NSJZ L12	//QImode EQ
         00 EE      
00009AAB 42 42              		CMP R1,2	// QImode compare
00009AAC 08 9E 01 EE        		NSJA L31	//QImode GTU
         00 EE      
00009AAF 41 42              		CMP R1,1	// QImode compare
00009AB0 0A 5E 01 EE        		NSJZ L7	//QImode EQ
         00 EE      
00009AB3 0F 9F 70 9B        		pc=L29	// Indirect jump
                            	L31:
00009AB5 44 42              		CMP R1,4	// QImode compare
00009AB6 02 4E 0F 9F        		NSJZ L21	//QImode EQ
         1F 9B      
00009AB9 0F 9F 70 9B        		pc=L29	// Indirect jump
                            	L7:
00000561                    	.debug
00000561 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
00000574 2F 00 00 00        		.dd LM8-_main
00000576 0D 00 0A 00        		.dw 0x0d,0x0a
00009ABB                    	.code
                            	LM8:
00009ABB 09 63 00 60        		R1=(-24576)	// QImode move
00009ABD 19 D3 AA 06        		[_Addr]=R1	// QImode move
                            	L8:
00009ABF 11 93 AA 06        		R1=[_Addr]	// QImode move
00009AC1 09 43 FF EF        		CMP R1,(-4097)	// QImode compare
00009AC3 04 8E 01 EE        		NSJNA L11	//QImode LEU
         00 EE      
00009AC6 0F 9F D8 9A        		pc=L9	// Indirect jump
                            	L11:
00000578                    	.debug
00000578 2E 00 73 00        		.dw '.stabn 0x44,0,79,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 39 00
         2C 00 00 00
         00 00      
0000058B 3C 00 00 00        		.dd LM9-_main
0000058D 0D 00 0A 00        		.dw 0x0d,0x0a
00009AC8                    	.code
                            	LM9:
                            	LBB4:
00009AC8 40 F0 8F 9C        		call _Clear_WatchDog	// call with return value
0000058F                    	.debug
0000058F 2E 00 73 00        		.dw '.stabn 0x44,0,80,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 30 00
         2C 00 00 00
         00 00      
000005A2 3E 00 00 00        		.dd LM10-_main
000005A4 0D 00 0A 00        		.dw 0x0d,0x0a
00009ACA                    	.code
                            	LM10:
00009ACA 11 93 AA 06        		R1=[_Addr]	// QImode move
00009ACC C8 D2              		[SP--]=R1	// QImode move
00009ACD 40 F0 63 9C        		call _F_FlashErase	// call with return value
00009ACF 41 00              		SP = SP + 1	//SP
000005A6                    	.debug
000005A6 2E 00 73 00        		.dw '.stabn 0x44,0,81,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 31 00
         2C 00 00 00
         00 00      
000005B9 44 00 00 00        		.dd LM11-_main
000005BB 0D 00 0A 00        		.dw 0x0d,0x0a
00009AD0                    	.code
                            	LM11:
                            	LBE4:
000005BD                    	.debug
000005BD 2E 00 73 00        		.dw '.stabn 0x44,0,77,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         37 00 37 00
         2C 00 00 00
         00 00      
000005D0 44 00 00 00        		.dd LM12-_main
000005D2 0D 00 0A 00        		.dw 0x0d,0x0a
00009AD0                    	.code
                            	LM12:
                            	L10:
00009AD0 11 93 AA 06        		R1=[_Addr]	// QImode move
00009AD2 0A 95 00 01        		R2=256	// QImode move
00009AD4 19 05 AA 06        		[_Addr]=R1+R2  //addqi3_Qrr
00009AD6 0F 9F BF 9A        		pc=L8	// Indirect jump
                            	L9:
000005D4                    	.debug
000005D4 2E 00 73 00        		.dw '.stabn 0x44,0,82,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 32 00
         2C 00 00 00
         00 00      
000005E7 4C 00 00 00        		.dd LM13-_main
000005E9 0D 00 0A 00        		.dw 0x0d,0x0a
00009AD8                    	.code
                            	LM13:
00009AD8 41 92              		R1=1	// QImode move
00009AD9 19 D3 A7 06        		[_Status]=R1	// QImode move
000005EB                    	.debug
000005EB 2E 00 73 00        		.dw '.stabn 0x44,0,83,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 33 00
         2C 00 00 00
         00 00      
000005FE 4F 00 00 00        		.dd LM14-_main
00000600 0D 00 0A 00        		.dw 0x0d,0x0a
00009ADB                    	.code
                            	LM14:
00009ADB 09 63 00 60        		R1=(-24576)	// QImode move
00009ADD 19 D3 AA 06        		[_Addr]=R1	// QImode move
00000602                    	.debug
00000602 2E 00 73 00        		.dw '.stabn 0x44,0,85,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 35 00
         2C 00 00 00
         00 00      
00000615 53 00 00 00        		.dd LM15-_main
00000617 0D 00 0A 00        		.dw 0x0d,0x0a
00009ADF                    	.code
                            	LM15:
00009ADF 40 F0 00 81        		call _SACM_DVR_InitQueue	// call without return value
00000619                    	.debug
00000619 2E 00 73 00        		.dw '.stabn 0x44,0,86,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 36 00
         2C 00 00 00
         00 00      
0000062C 55 00 00 00        		.dd LM16-_main
0000062E 0D 00 0A 00        		.dw 0x0d,0x0a
00009AE1                    	.code
                            	LM16:
00009AE1 41 92              		R1=1	// QImode move
00009AE2 C8 D2              		[SP--]=R1	// QImode move
00009AE3 40 F0 96 80        		call _SACM_DVR_InitEncoder	// call without return value
00009AE5 41 00              		SP = SP + 1	//SP
00000630                    	.debug
00000630 2E 00 73 00        		.dw '.stabn 0x44,0,87,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         38 00 37 00
         2C 00 00 00
         00 00      
00000643 5A 00 00 00        		.dd LM17-_main
00000645 0D 00 0A 00        		.dw 0x0d,0x0a
00009AE6                    	.code
                            	LM17:
00009AE6 0F 9F 72 9B        		pc=L6	// Indirect jump
                            	L12:
00000647                    	.debug
00000647 2E 00 73 00        		.dw '.stabn 0x44,0,92,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 32 00
         2C 00 00 00
         00 00      
0000065A 5C 00 00 00        		.dd LM18-_main
0000065C 0D 00 0A 00        		.dw 0x0d,0x0a
00009AE8                    	.code
                            	LM18:
00009AE8 11 93 A7 06        		R1=[_Status]	// QImode move
00009AEA 41 42              		CMP R1,1	// QImode compare
00009AEB 08 5E 01 EE        		NSJZ L14	//QImode EQ
         00 EE      
00009AEE 42 42              		CMP R1,2	// QImode compare
00009AEF 24 5E 01 EE        		NSJZ L18	//QImode EQ
         00 EE      
00009AF2 0F 9F 18 9B        		pc=L19	// Indirect jump
                            	L14:
0000065E                    	.debug
0000065E 2E 00 73 00        		.dw '.stabn 0x44,0,95,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 35 00
         2C 00 00 00
         00 00      
00000671 68 00 00 00        		.dd LM19-_main
00000673 0D 00 0A 00        		.dw 0x0d,0x0a
00009AF4                    	.code
                            	LM19:
00009AF4 40 F0 EC 80        		call _SACM_DVR_Stop	// call without return value
00000675                    	.debug
00000675 2E 00 73 00        		.dw '.stabn 0x44,0,96,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 36 00
         2C 00 00 00
         00 00      
00000688 6A 00 00 00        		.dd LM20-_main
0000068A 0D 00 0A 00        		.dw 0x0d,0x0a
00009AF6                    	.code
                            	LM20:
                            	L15:
00009AF6 40 F0 19 81        		call _SACM_DVR_TestQueue	// call with return value
00009AF8 42 42              		CMP R1,2	// QImode compare
00009AF9 04 4E 01 EE        		NSJNZ L17	//QImode NE
         00 EE      
00009AFC 0F 9F 12 9B        		pc=L16	// Indirect jump
                            	L17:
0000068C                    	.debug
0000068C 2E 00 73 00        		.dw '.stabn 0x44,0,98,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 38 00
         2C 00 00 00
         00 00      
0000069F 72 00 00 00        		.dd LM21-_main
000006A1 0D 00 0A 00        		.dw 0x0d,0x0a
00009AFE                    	.code
                            	LM21:
                            	LBB5:
00009AFE 40 F0 05 81        		call _SACM_DVR_FetchQueue	// call with return value
00009B00 19 D3 A8 06        		[_Ret]=R1	// QImode move
000006A3                    	.debug
000006A3 2E 00 73 00        		.dw '.stabn 0x44,0,99,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         39 00 39 00
         2C 00 00 00
         00 00      
000006B6 76 00 00 00        		.dd LM22-_main
000006B8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B02                    	.code
                            	LM22:
00009B02 11 93 A8 06        		R1=[_Ret]	// QImode move
00009B04 C8 D2              		[SP--]=R1	// QImode move
00009B05 11 93 AA 06        		R1=[_Addr]	// QImode move
00009B07 C8 D2              		[SP--]=R1	// QImode move
00009B08 40 F0 3D 9C        		call _F_FlashWrite1Word	// call with return value
00009B0A 42 00              		SP = SP + 2	//SP
000006BA                    	.debug
000006BA 2E 00 73 00        		.dw '.stabn 0x44,0,100,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         30 00 2C 00
         00 00 00 00
000006CE 7F 00 00 00        		.dd LM23-_main
000006D0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B0B                    	.code
                            	LM23:
00009B0B 11 93 AA 06        		R1=[_Addr]	// QImode move
00009B0D 41 94              		R2=1	// QImode move
00009B0E 19 05 AA 06        		[_Addr]=R1+R2  //addqi3_Qrr
000006D2                    	.debug
000006D2 2E 00 73 00        		.dw '.stabn 0x44,0,101,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         31 00 2C 00
         00 00 00 00
000006E6 84 00 00 00        		.dd LM24-_main
000006E8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B10                    	.code
                            	LM24:
                            	LBE5:
00009B10 0F 9F F6 9A        		pc=L15	// Indirect jump
                            	L16:
000006EA                    	.debug
000006EA 2E 00 73 00        		.dw '.stabn 0x44,0,102,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         32 00 2C 00
         00 00 00 00
000006FE 86 00 00 00        		.dd LM25-_main
00000700 0D 00 0A 00        		.dw 0x0d,0x0a
00009B12                    	.code
                            	LM25:
00009B12 0F 9F 1A 9B        		pc=L13	// Indirect jump
                            	L18:
00000702                    	.debug
00000702 2E 00 73 00        		.dw '.stabn 0x44,0,104,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         34 00 2C 00
         00 00 00 00
00000716 88 00 00 00        		.dd LM26-_main
00000718 0D 00 0A 00        		.dw 0x0d,0x0a
00009B14                    	.code
                            	LM26:
00009B14 40 F0 EC 80        		call _SACM_DVR_Stop	// call without return value
0000071A                    	.debug
0000071A 2E 00 73 00        		.dw '.stabn 0x44,0,105,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         35 00 2C 00
         00 00 00 00
0000072E 8A 00 00 00        		.dd LM27-_main
00000730 0D 00 0A 00        		.dw 0x0d,0x0a
00009B16                    	.code
                            	LM27:
00009B16 0F 9F 1A 9B        		pc=L13	// Indirect jump
                            	L19:
00000732                    	.debug
00000732 2E 00 73 00        		.dw '.stabn 0x44,0,107,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         37 00 2C 00
         00 00 00 00
00000746 8C 00 00 00        		.dd LM28-_main
00000748 0D 00 0A 00        		.dw 0x0d,0x0a
00009B18                    	.code
                            	LM28:
00009B18 0F 9F 1A 9B        		pc=L13	// Indirect jump
                            	L13:
0000074A                    	.debug
0000074A 2E 00 73 00        		.dw '.stabn 0x44,0,109,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 30 00
         39 00 2C 00
         00 00 00 00
0000075E 8E 00 00 00        		.dd LM29-_main
00000760 0D 00 0A 00        		.dw 0x0d,0x0a
00009B1A                    	.code
                            	LM29:
00009B1A 40 92              		R1=0	// QImode move
00009B1B 19 D3 A7 06        		[_Status]=R1	// QImode move
00000762                    	.debug
00000762 2E 00 73 00        		.dw '.stabn 0x44,0,110,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         30 00 2C 00
         00 00 00 00
00000776 91 00 00 00        		.dd LM30-_main
00000778 0D 00 0A 00        		.dw 0x0d,0x0a
00009B1D                    	.code
                            	LM30:
00009B1D 0F 9F 72 9B        		pc=L6	// Indirect jump
                            	L21:
0000077A                    	.debug
0000077A 2E 00 73 00        		.dw '.stabn 0x44,0,115,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         35 00 2C 00
         00 00 00 00
0000078E 93 00 00 00        		.dd LM31-_main
00000790 0D 00 0A 00        		.dw 0x0d,0x0a
00009B1F                    	.code
                            	LM31:
00009B1F 40 F0 EC 80        		call _SACM_DVR_Stop	// call without return value
00000792                    	.debug
00000792 2E 00 73 00        		.dw '.stabn 0x44,0,116,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         36 00 2C 00
         00 00 00 00
000007A6 95 00 00 00        		.dd LM32-_main
000007A8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B21                    	.code
                            	LM32:
00009B21 11 93 A7 06        		R1=[_Status]	// QImode move
00009B23 41 42              		CMP R1,1	// QImode compare
00009B24 1E 4E 01 EE        		NSJNZ L22	//QImode NE
         00 EE      
000007AA                    	.debug
000007AA 2E 00 73 00        		.dw '.stabn 0x44,0,118,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 31 00
         38 00 2C 00
         00 00 00 00
000007BE 9B 00 00 00        		.dd LM33-_main
000007C0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B27                    	.code
                            	LM33:
                            	L23:
00009B27 40 F0 19 81        		call _SACM_DVR_TestQueue	// call with return value
00009B29 42 42              		CMP R1,2	// QImode compare
00009B2A 04 4E 01 EE        		NSJNZ L25	//QImode NE
         00 EE      
00009B2D 0F 9F 43 9B        		pc=L22	// Indirect jump
                            	L25:
000007C2                    	.debug
000007C2 2E 00 73 00        		.dw '.stabn 0x44,0,120,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         30 00 2C 00
         00 00 00 00
000007D6 A3 00 00 00        		.dd LM34-_main
000007D8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B2F                    	.code
                            	LM34:
                            	LBB6:
00009B2F 40 F0 05 81        		call _SACM_DVR_FetchQueue	// call with return value
00009B31 19 D3 A8 06        		[_Ret]=R1	// QImode move
000007DA                    	.debug
000007DA 2E 00 73 00        		.dw '.stabn 0x44,0,121,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         31 00 2C 00
         00 00 00 00
000007EE A7 00 00 00        		.dd LM35-_main
000007F0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B33                    	.code
                            	LM35:
00009B33 11 93 A8 06        		R1=[_Ret]	// QImode move
00009B35 C8 D2              		[SP--]=R1	// QImode move
00009B36 11 93 AA 06        		R1=[_Addr]	// QImode move
00009B38 C8 D2              		[SP--]=R1	// QImode move
00009B39 40 F0 3D 9C        		call _F_FlashWrite1Word	// call with return value
00009B3B 42 00              		SP = SP + 2	//SP
000007F2                    	.debug
000007F2 2E 00 73 00        		.dw '.stabn 0x44,0,122,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         32 00 2C 00
         00 00 00 00
00000806 B0 00 00 00        		.dd LM36-_main
00000808 0D 00 0A 00        		.dw 0x0d,0x0a
00009B3C                    	.code
                            	LM36:
00009B3C 11 93 AA 06        		R1=[_Addr]	// QImode move
00009B3E 41 94              		R2=1	// QImode move
00009B3F 19 05 AA 06        		[_Addr]=R1+R2  //addqi3_Qrr
0000080A                    	.debug
0000080A 2E 00 73 00        		.dw '.stabn 0x44,0,123,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         33 00 2C 00
         00 00 00 00
0000081E B5 00 00 00        		.dd LM37-_main
00000820 0D 00 0A 00        		.dw 0x0d,0x0a
00009B41                    	.code
                            	LM37:
                            	LBE6:
00009B41 0F 9F 27 9B        		pc=L23	// Indirect jump
                            	L24:
                            	L22:
00000822                    	.debug
00000822 2E 00 73 00        		.dw '.stabn 0x44,0,126,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         36 00 2C 00
         00 00 00 00
00000836 B7 00 00 00        		.dd LM38-_main
00000838 0D 00 0A 00        		.dw 0x0d,0x0a
00009B43                    	.code
                            	LM38:
00009B43 42 92              		R1=2	// QImode move
00009B44 19 D3 A7 06        		[_Status]=R1	// QImode move
0000083A                    	.debug
0000083A 2E 00 73 00        		.dw '.stabn 0x44,0,127,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         37 00 2C 00
         00 00 00 00
0000084E BA 00 00 00        		.dd LM39-_main
00000850 0D 00 0A 00        		.dw 0x0d,0x0a
00009B46                    	.code
                            	LM39:
00009B46 09 63 00 60        		R1=(-24576)	// QImode move
00009B48 19 D3 AA 06        		[_Addr]=R1	// QImode move
00000852                    	.debug
00000852 2E 00 73 00        		.dw '.stabn 0x44,0,128,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         38 00 2C 00
         00 00 00 00
00000866 BE 00 00 00        		.dd LM40-_main
00000868 0D 00 0A 00        		.dw 0x0d,0x0a
00009B4A                    	.code
                            	LM40:
00009B4A 40 F0 00 81        		call _SACM_DVR_InitQueue	// call without return value
0000086A                    	.debug
0000086A 2E 00 73 00        		.dw '.stabn 0x44,0,129,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 32 00
         39 00 2C 00
         00 00 00 00
0000087E C0 00 00 00        		.dd LM41-_main
00000880 0D 00 0A 00        		.dw 0x0d,0x0a
00009B4C                    	.code
                            	LM41:
                            	L26:
00009B4C 40 F0 19 81        		call _SACM_DVR_TestQueue	// call with return value
00009B4E 41 42              		CMP R1,1	// QImode compare
00009B4F 04 4E 01 EE        		NSJNZ L28	//QImode NE
         00 EE      
00009B52 0F 9F 69 9B        		pc=L27	// Indirect jump
                            	L28:
00000882                    	.debug
00000882 2E 00 73 00        		.dw '.stabn 0x44,0,131,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         31 00 2C 00
         00 00 00 00
00000896 C8 00 00 00        		.dd LM42-_main
00000898 0D 00 0A 00        		.dw 0x0d,0x0a
00009B54                    	.code
                            	LM42:
                            	LBB7:
00009B54 11 93 AA 06        		R1=[_Addr]	// QImode move
00009B56 C8 D2              		[SP--]=R1	// QImode move
00009B57 40 F0 72 9C        		call _F_FlashRead	// call with return value
00009B59 41 00              		SP = SP + 1	//SP
00009B5A 19 D3 A8 06        		[_Ret]=R1	// QImode move
0000089A                    	.debug
0000089A 2E 00 73 00        		.dw '.stabn 0x44,0,132,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         32 00 2C 00
         00 00 00 00
000008AE D0 00 00 00        		.dd LM43-_main
000008B0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B5C                    	.code
                            	LM43:
00009B5C 11 93 A8 06        		R1=[_Ret]	// QImode move
00009B5E C8 D2              		[SP--]=R1	// QImode move
00009B5F 40 F0 0F 81        		call _SACM_DVR_FillQueue	// call without return value
00009B61 41 00              		SP = SP + 1	//SP
000008B2                    	.debug
000008B2 2E 00 73 00        		.dw '.stabn 0x44,0,133,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         33 00 2C 00
         00 00 00 00
000008C6 D6 00 00 00        		.dd LM44-_main
000008C8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B62                    	.code
                            	LM44:
00009B62 11 93 AA 06        		R1=[_Addr]	// QImode move
00009B64 41 94              		R2=1	// QImode move
00009B65 19 05 AA 06        		[_Addr]=R1+R2  //addqi3_Qrr
000008CA                    	.debug
000008CA 2E 00 73 00        		.dw '.stabn 0x44,0,134,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         34 00 2C 00
         00 00 00 00
000008DE DB 00 00 00        		.dd LM45-_main
000008E0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B67                    	.code
                            	LM45:
                            	LBE7:
00009B67 0F 9F 4C 9B        		pc=L26	// Indirect jump
                            	L27:
000008E2                    	.debug
000008E2 2E 00 73 00        		.dw '.stabn 0x44,0,135,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         35 00 2C 00
         00 00 00 00
000008F6 DD 00 00 00        		.dd LM46-_main
000008F8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B69                    	.code
                            	LM46:
00009B69 43 92              		R1=3	// QImode move
00009B6A C8 D2              		[SP--]=R1	// QImode move
00009B6B 40 F0 B1 80        		call _SACM_DVR_InitDecoder	// call without return value
00009B6D 41 00              		SP = SP + 1	//SP
000008FA                    	.debug
000008FA 2E 00 73 00        		.dw '.stabn 0x44,0,136,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         36 00 2C 00
         00 00 00 00
0000090E E2 00 00 00        		.dd LM47-_main
00000910 0D 00 0A 00        		.dw 0x0d,0x0a
00009B6E                    	.code
                            	LM47:
00009B6E 0F 9F 72 9B        		pc=L6	// Indirect jump
                            	L29:
00000912                    	.debug
00000912 2E 00 73 00        		.dw '.stabn 0x44,0,138,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 33 00
         38 00 2C 00
         00 00 00 00
00000926 E4 00 00 00        		.dd LM48-_main
00000928 0D 00 0A 00        		.dw 0x0d,0x0a
00009B70                    	.code
                            	LM48:
00009B70 0F 9F 72 9B        		pc=L6	// Indirect jump
                            	L6:
0000092A                    	.debug
0000092A 2E 00 73 00        		.dw '.stabn 0x44,0,142,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         32 00 2C 00
         00 00 00 00
0000093E E6 00 00 00        		.dd LM49-_main
00000940 0D 00 0A 00        		.dw 0x0d,0x0a
00009B72                    	.code
                            	LM49:
00009B72 11 93 A7 06        		R1=[_Status]	// QImode move
00009B74 41 42              		CMP R1,1	// QImode compare
00009B75 0C 5E 01 EE        		NSJZ L33	//QImode EQ
         00 EE      
00009B78 41 42              		CMP R1,1	// QImode compare
00009B79 02 1E 0F 9F        		NSJB L44	//QImode LTU
         F4 9B      
00009B7C 42 42              		CMP R1,2	// QImode compare
00009B7D 02 4E 0F 9F        		NSJZ L40	//QImode EQ
         C8 9B      
00009B80 0F 9F F6 9B        		pc=L45	// Indirect jump
00000942                    	.debug
00000942 2E 00 73 00        		.dw '.stabn 0x44,0,144,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         34 00 2C 00
         00 00 00 00
00000956 F6 00 00 00        		.dd LM50-_main
00000958 0D 00 0A 00        		.dw 0x0d,0x0a
00009B82                    	.code
                            	LM50:
                            	LBB8:
                            	L33:
0000095A                    	.debug
0000095A 2E 00 73 00        		.dw '.stabn 0x44,0,147,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         37 00 2C 00
         00 00 00 00
0000096E F6 00 00 00        		.dd LM51-_main
00000970 0D 00 0A 00        		.dw 0x0d,0x0a
00009B82                    	.code
                            	LM51:
00009B82 11 93 AA 06        		R1=[_Addr]	// QImode move
00009B84 09 43 FF EF        		CMP R1,(-4097)	// QImode compare
00009B86 1E 9E 01 EE        		NSJA L34	//QImode GTU
         00 EE      
00000972                    	.debug
00000972 2E 00 73 00        		.dw '.stabn 0x44,0,149,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 34 00
         39 00 2C 00
         00 00 00 00
00000986 FD 00 00 00        		.dd LM52-_main
00000988 0D 00 0A 00        		.dw 0x0d,0x0a
00009B89                    	.code
                            	LM52:
                            	LBB9:
00009B89 40 F0 8F 80        		call _SACM_DVR_Encode	// call with return value
0000098A                    	.debug
0000098A 2E 00 73 00        		.dw '.stabn 0x44,0,150,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         30 00 2C 00
         00 00 00 00
0000099E FF 00 00 00        		.dd LM53-_main
000009A0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B8B                    	.code
                            	LM53:
00009B8B 40 F0 19 81        		call _SACM_DVR_TestQueue	// call with return value
00009B8D 42 42              		CMP R1,2	// QImode compare
00009B8E 14 5E 01 EE        		NSJZ L35	//QImode EQ
         00 EE      
000009A2                    	.debug
000009A2 2E 00 73 00        		.dw '.stabn 0x44,0,152,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         32 00 2C 00
         00 00 00 00
000009B6 05 01 00 00        		.dd LM54-_main
000009B8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B91                    	.code
                            	LM54:
                            	LBB10:
00009B91 40 F0 05 81        		call _SACM_DVR_FetchQueue	// call with return value
00009B93 19 D3 A8 06        		[_Ret]=R1	// QImode move
000009BA                    	.debug
000009BA 2E 00 73 00        		.dw '.stabn 0x44,0,153,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         33 00 2C 00
         00 00 00 00
000009CE 09 01 00 00        		.dd LM55-_main
000009D0 0D 00 0A 00        		.dw 0x0d,0x0a
00009B95                    	.code
                            	LM55:
00009B95 11 93 A8 06        		R1=[_Ret]	// QImode move
00009B97 C8 D2              		[SP--]=R1	// QImode move
00009B98 11 93 AA 06        		R1=[_Addr]	// QImode move
00009B9A C8 D2              		[SP--]=R1	// QImode move
00009B9B 40 F0 3D 9C        		call _F_FlashWrite1Word	// call with return value
00009B9D 42 00              		SP = SP + 2	//SP
000009D2                    	.debug
000009D2 2E 00 73 00        		.dw '.stabn 0x44,0,155,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         35 00 2C 00
         00 00 00 00
000009E6 12 01 00 00        		.dd LM56-_main
000009E8 0D 00 0A 00        		.dw 0x0d,0x0a
00009B9E                    	.code
                            	LM56:
00009B9E 11 93 AA 06        		R1=[_Addr]	// QImode move
00009BA0 41 94              		R2=1	// QImode move
00009BA1 19 05 AA 06        		[_Addr]=R1+R2  //addqi3_Qrr
000009EA                    	.debug
000009EA 2E 00 73 00        		.dw '.stabn 0x44,0,156,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         36 00 2C 00
         00 00 00 00
000009FE 17 01 00 00        		.dd LM57-_main
00000A00 0D 00 0A 00        		.dw 0x0d,0x0a
00009BA3                    	.code
                            	LM57:
                            	LBE10:
                            	L35:
00000A02                    	.debug
00000A02 2E 00 73 00        		.dw '.stabn 0x44,0,157,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 35 00
         37 00 2C 00
         00 00 00 00
00000A16 17 01 00 00        		.dd LM58-_main
00000A18 0D 00 0A 00        		.dw 0x0d,0x0a
00009BA3                    	.code
                            	LM58:
                            	LBE9:
00009BA3 0F 9F C6 9B        		pc=L36	// Indirect jump
                            	L34:
00000A1A                    	.debug
00000A1A 2E 00 73 00        		.dw '.stabn 0x44,0,160,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         30 00 2C 00
         00 00 00 00
00000A2E 19 01 00 00        		.dd LM59-_main
00000A30 0D 00 0A 00        		.dw 0x0d,0x0a
00009BA5                    	.code
                            	LM59:
00009BA5 40 F0 EC 80        		call _SACM_DVR_Stop	// call without return value
00000A32                    	.debug
00000A32 2E 00 73 00        		.dw '.stabn 0x44,0,161,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         31 00 2C 00
         00 00 00 00
00000A46 1B 01 00 00        		.dd LM60-_main
00000A48 0D 00 0A 00        		.dw 0x0d,0x0a
00009BA7                    	.code
                            	LM60:
                            	L37:
00009BA7 40 F0 19 81        		call _SACM_DVR_TestQueue	// call with return value
00009BA9 42 42              		CMP R1,2	// QImode compare
00009BAA 04 4E 01 EE        		NSJNZ L39	//QImode NE
         00 EE      
00009BAD 0F 9F C3 9B        		pc=L38	// Indirect jump
                            	L39:
00000A4A                    	.debug
00000A4A 2E 00 73 00        		.dw '.stabn 0x44,0,163,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         33 00 2C 00
         00 00 00 00
00000A5E 23 01 00 00        		.dd LM61-_main
00000A60 0D 00 0A 00        		.dw 0x0d,0x0a
00009BAF                    	.code
                            	LM61:
                            	LBB11:
00009BAF 40 F0 05 81        		call _SACM_DVR_FetchQueue	// call with return value
00009BB1 19 D3 A8 06        		[_Ret]=R1	// QImode move
00000A62                    	.debug
00000A62 2E 00 73 00        		.dw '.stabn 0x44,0,164,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         34 00 2C 00
         00 00 00 00
00000A76 27 01 00 00        		.dd LM62-_main
00000A78 0D 00 0A 00        		.dw 0x0d,0x0a
00009BB3                    	.code
                            	LM62:
00009BB3 11 93 A8 06        		R1=[_Ret]	// QImode move
00009BB5 C8 D2              		[SP--]=R1	// QImode move
00009BB6 11 93 AA 06        		R1=[_Addr]	// QImode move
00009BB8 C8 D2              		[SP--]=R1	// QImode move
00009BB9 40 F0 3D 9C        		call _F_FlashWrite1Word	// call with return value
00009BBB 42 00              		SP = SP + 2	//SP
00000A7A                    	.debug
00000A7A 2E 00 73 00        		.dw '.stabn 0x44,0,165,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         35 00 2C 00
         00 00 00 00
00000A8E 30 01 00 00        		.dd LM63-_main
00000A90 0D 00 0A 00        		.dw 0x0d,0x0a
00009BBC                    	.code
                            	LM63:
00009BBC 11 93 AA 06        		R1=[_Addr]	// QImode move
00009BBE 41 94              		R2=1	// QImode move
00009BBF 19 05 AA 06        		[_Addr]=R1+R2  //addqi3_Qrr
00000A92                    	.debug
00000A92 2E 00 73 00        		.dw '.stabn 0x44,0,166,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         36 00 2C 00
         00 00 00 00
00000AA6 35 01 00 00        		.dd LM64-_main
00000AA8 0D 00 0A 00        		.dw 0x0d,0x0a
00009BC1                    	.code
                            	LM64:
                            	LBE11:
00009BC1 0F 9F A7 9B        		pc=L37	// Indirect jump
                            	L38:
00000AAA                    	.debug
00000AAA 2E 00 73 00        		.dw '.stabn 0x44,0,167,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         37 00 2C 00
         00 00 00 00
00000ABE 37 01 00 00        		.dd LM65-_main
00000AC0 0D 00 0A 00        		.dw 0x0d,0x0a
00009BC3                    	.code
                            	LM65:
00009BC3 40 92              		R1=0	// QImode move
00009BC4 19 D3 A7 06        		[_Status]=R1	// QImode move
                            	L36:
00000AC2                    	.debug
00000AC2 2E 00 73 00        		.dw '.stabn 0x44,0,169,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 36 00
         39 00 2C 00
         00 00 00 00
00000AD6 3A 01 00 00        		.dd LM66-_main
00000AD8 0D 00 0A 00        		.dw 0x0d,0x0a
00009BC6                    	.code
                            	LM66:
00009BC6 0F 9F F8 9B        		pc=L32	// Indirect jump
                            	L40:
00000ADA                    	.debug
00000ADA 2E 00 73 00        		.dw '.stabn 0x44,0,174,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         34 00 2C 00
         00 00 00 00
00000AEE 3C 01 00 00        		.dd LM67-_main
00000AF0 0D 00 0A 00        		.dw 0x0d,0x0a
00009BC8                    	.code
                            	LM67:
00009BC8 40 F0 FD 80        		call _SACM_DVR_Status	// call with return value
00009BCA 09 B5 01 00        		R2=R1&1
00009BCC 40 44              		CMP R2,0	// QImode test
00009BCD 1D 5E 01 EE        		NSJZ L41	//QImode EQ
         00 EE      
00000AF2                    	.debug
00000AF2 2E 00 73 00        		.dw '.stabn 0x44,0,176,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         36 00 2C 00
         00 00 00 00
00000B06 44 01 00 00        		.dd LM68-_main
00000B08 0D 00 0A 00        		.dw 0x0d,0x0a
00009BD0                    	.code
                            	LM68:
00009BD0 40 F0 19 81        		call _SACM_DVR_TestQueue	// call with return value
00009BD2 41 42              		CMP R1,1	// QImode compare
00009BD3 15 5E 01 EE        		NSJZ L42	//QImode EQ
         00 EE      
00000B0A                    	.debug
00000B0A 2E 00 73 00        		.dw '.stabn 0x44,0,178,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         38 00 2C 00
         00 00 00 00
00000B1E 4A 01 00 00        		.dd LM69-_main
00000B20 0D 00 0A 00        		.dw 0x0d,0x0a
00009BD6                    	.code
                            	LM69:
                            	LBB12:
00009BD6 11 93 AA 06        		R1=[_Addr]	// QImode move
00009BD8 C8 D2              		[SP--]=R1	// QImode move
00009BD9 40 F0 72 9C        		call _F_FlashRead	// call with return value
00009BDB 41 00              		SP = SP + 1	//SP
00009BDC 19 D3 A8 06        		[_Ret]=R1	// QImode move
00000B22                    	.debug
00000B22 2E 00 73 00        		.dw '.stabn 0x44,0,179,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 37 00
         39 00 2C 00
         00 00 00 00
00000B36 52 01 00 00        		.dd LM70-_main
00000B38 0D 00 0A 00        		.dw 0x0d,0x0a
00009BDE                    	.code
                            	LM70:
00009BDE 11 93 A8 06        		R1=[_Ret]	// QImode move
00009BE0 C8 D2              		[SP--]=R1	// QImode move
00009BE1 40 F0 0F 81        		call _SACM_DVR_FillQueue	// call without return value
00009BE3 41 00              		SP = SP + 1	//SP
00000B3A                    	.debug
00000B3A 2E 00 73 00        		.dw '.stabn 0x44,0,180,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         30 00 2C 00
         00 00 00 00
00000B4E 58 01 00 00        		.dd LM71-_main
00000B50 0D 00 0A 00        		.dw 0x0d,0x0a
00009BE4                    	.code
                            	LM71:
00009BE4 11 93 AA 06        		R1=[_Addr]	// QImode move
00009BE6 41 94              		R2=1	// QImode move
00009BE7 19 05 AA 06        		[_Addr]=R1+R2  //addqi3_Qrr
00000B52                    	.debug
00000B52 2E 00 73 00        		.dw '.stabn 0x44,0,181,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         31 00 2C 00
         00 00 00 00
00000B66 5D 01 00 00        		.dd LM72-_main
00000B68 0D 00 0A 00        		.dw 0x0d,0x0a
00009BE9                    	.code
                            	LM72:
                            	LBE12:
                            	L42:
00000B6A                    	.debug
00000B6A 2E 00 73 00        		.dw '.stabn 0x44,0,182,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         32 00 2C 00
         00 00 00 00
00000B7E 5D 01 00 00        		.dd LM73-_main
00000B80 0D 00 0A 00        		.dw 0x0d,0x0a
00009BE9                    	.code
                            	LM73:
00009BE9 0F 9F F0 9B        		pc=L43	// Indirect jump
                            	L41:
00000B82                    	.debug
00000B82 2E 00 73 00        		.dw '.stabn 0x44,0,185,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         35 00 2C 00
         00 00 00 00
00000B96 5F 01 00 00        		.dd LM74-_main
00000B98 0D 00 0A 00        		.dw 0x0d,0x0a
00009BEB                    	.code
                            	LM74:
00009BEB 40 F0 EC 80        		call _SACM_DVR_Stop	// call without return value
00000B9A                    	.debug
00000B9A 2E 00 73 00        		.dw '.stabn 0x44,0,186,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 38 00
         36 00 2C 00
         00 00 00 00
00000BAE 61 01 00 00        		.dd LM75-_main
00000BB0 0D 00 0A 00        		.dw 0x0d,0x0a
00009BED                    	.code
                            	LM75:
00009BED 40 92              		R1=0	// QImode move
00009BEE 19 D3 A7 06        		[_Status]=R1	// QImode move
                            	L43:
00000BB2                    	.debug
00000BB2 2E 00 73 00        		.dw '.stabn 0x44,0,190,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         30 00 2C 00
         00 00 00 00
00000BC6 64 01 00 00        		.dd LM76-_main
00000BC8 0D 00 0A 00        		.dw 0x0d,0x0a
00009BF0                    	.code
                            	LM76:
00009BF0 40 F0 8A 80        		call _SACM_DVR_Decode	// call with return value
00000BCA                    	.debug
00000BCA 2E 00 73 00        		.dw '.stabn 0x44,0,191,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         31 00 2C 00
         00 00 00 00
00000BDE 66 01 00 00        		.dd LM77-_main
00000BE0 0D 00 0A 00        		.dw 0x0d,0x0a
00009BF2                    	.code
                            	LM77:
00009BF2 0F 9F F8 9B        		pc=L32	// Indirect jump
                            	L44:
00000BE2                    	.debug
00000BE2 2E 00 73 00        		.dw '.stabn 0x44,0,194,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         34 00 2C 00
         00 00 00 00
00000BF6 68 01 00 00        		.dd LM78-_main
00000BF8 0D 00 0A 00        		.dw 0x0d,0x0a
00009BF4                    	.code
                            	LM78:
00009BF4 0F 9F F8 9B        		pc=L32	// Indirect jump
                            	L45:
00000BFA                    	.debug
00000BFA 2E 00 73 00        		.dw '.stabn 0x44,0,196,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         36 00 2C 00
         00 00 00 00
00000C0E 6A 01 00 00        		.dd LM79-_main
00000C10 0D 00 0A 00        		.dw 0x0d,0x0a
00009BF6                    	.code
                            	LM79:
00009BF6 0F 9F F8 9B        		pc=L32	// Indirect jump
00000C12                    	.debug
00000C12 2E 00 73 00        		.dw '.stabn 0x44,0,197,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         37 00 2C 00
         00 00 00 00
00000C26 6C 01 00 00        		.dd LM80-_main
00000C28 0D 00 0A 00        		.dw 0x0d,0x0a
00009BF8                    	.code
                            	LM80:
                            	LBE8:
                            	L32:
00000C2A                    	.debug
00000C2A 2E 00 73 00        		.dw '.stabn 0x44,0,198,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         38 00 2C 00
         00 00 00 00
00000C3E 6C 01 00 00        		.dd LM81-_main
00000C40 0D 00 0A 00        		.dw 0x0d,0x0a
00009BF8                    	.code
                            	LM81:
00009BF8 40 F0 87 9C        		call _System_ServiceLoop	// call with return value
00000C42                    	.debug
00000C42 2E 00 73 00        		.dw '.stabn 0x44,0,199,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         31 00 39 00
         39 00 2C 00
         00 00 00 00
00000C56 6E 01 00 00        		.dd LM82-_main
00000C58 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFA                    	.code
                            	LM82:
                            	LBE3:
00009BFA 0F 9F 9D 9A        		pc=L3	// Indirect jump
                            	L4:
00000C5A                    	.debug
00000C5A 2E 00 73 00        		.dw '.stabn 0x44,0,200,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         30 00 2C 00
         00 00 00 00
00000C6E 70 01 00 00        		.dd LM83-_main
00000C70 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFC                    	.code
                            	LM83:
                            	LBE2:
00000C72                    	.debug
00000C72 2E 00 73 00        		.dw '.stabn 0x44,0,200,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 34 00
         34 00 2C 00
         30 00 2C 00
         32 00 30 00
         30 00 2C 00
         00 00 00 00
00000C86 70 01 00 00        		.dd LM84-_main
00000C88 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFC                    	.code
                            	LM84:
                            	L2:
                            	
00009BFC 41 00              		sp+=1
00009BFD 88 98              		pop bp from [sp]
00009BFE 90 9A              		retf
                            		.endp	// end of main
                            	
00000C8A                    	.debug
00000C8A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000C9C 07 00 00 00        		.dd LBB2-_main
00000C9E 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000CA0                    	.debug
00000CA0 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000CB2 15 00 00 00        		.dd LBB3-_main
00000CB4 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000CB6                    	.debug
00000CB6 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000CC8 3C 00 00 00        		.dd LBB4-_main
00000CCA 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000CCC                    	.debug
00000CCC 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000CDE 44 00 00 00        		.dd LBE4-_main
00000CE0 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000CE2                    	.debug
00000CE2 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000CF4 72 00 00 00        		.dd LBB5-_main
00000CF6 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000CF8                    	.debug
00000CF8 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000D0A 84 00 00 00        		.dd LBE5-_main
00000D0C 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000D0E                    	.debug
00000D0E 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000D20 A3 00 00 00        		.dd LBB6-_main
00000D22 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000D24                    	.debug
00000D24 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000D36 B5 00 00 00        		.dd LBE6-_main
00000D38 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000D3A                    	.debug
00000D3A 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000D4C C8 00 00 00        		.dd LBB7-_main
00000D4E 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000D50                    	.debug
00000D50 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000D62 DB 00 00 00        		.dd LBE7-_main
00000D64 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000D66                    	.debug
00000D66 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000D78 F6 00 00 00        		.dd LBB8-_main
00000D7A 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000D7C                    	.debug
00000D7C 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000D8E FD 00 00 00        		.dd LBB9-_main
00000D90 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000D92                    	.debug
00000D92 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000DA4 05 01 00 00        		.dd LBB10-_main
00000DA6 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000DA8                    	.debug
00000DA8 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000DBA 17 01 00 00        		.dd LBE10-_main
00000DBC 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000DBE                    	.debug
00000DBE 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000DD0 17 01 00 00        		.dd LBE9-_main
00000DD2 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000DD4                    	.debug
00000DD4 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000DE6 23 01 00 00        		.dd LBB11-_main
00000DE8 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000DEA                    	.debug
00000DEA 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000DFC 35 01 00 00        		.dd LBE11-_main
00000DFE 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000E00                    	.debug
00000E00 2E 00 73 00        		.dw '.stabn 0xc0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 63 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E12 4A 01 00 00        		.dd LBB12-_main
00000E14 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000E16                    	.debug
00000E16 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E28 5D 01 00 00        		.dd LBE12-_main
00000E2A 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000E2C                    	.debug
00000E2C 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E3E 6C 01 00 00        		.dd LBE8-_main
00000E40 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000E42                    	.debug
00000E42 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E54 6E 01 00 00        		.dd LBE3-_main
00000E56 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000E58                    	.debug
00000E58 2E 00 73 00        		.dw '.stabn 0xe0,0,0,',0,0
         74 00 61 00
         62 00 6E 00
         20 00 30 00
         78 00 65 00
         30 00 2C 00
         30 00 2C 00
         30 00 2C 00
         00 00 00 00
00000E6A 70 01 00 00        		.dd LBE2-_main
00000E6C 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
00000E6E                    	.debug
00000E6E 2E 00 73 00        		.dw '.stabf ',0,0
         74 00 61 00
         62 00 66 00
         20 00 00 00
         00 00      
00000E77 73 01 00 00        		.dd LME1-_main
00000E79 0D 00 0A 00        		.dw 0x0d,0x0a
00009BFF                    	.code
                            	LME1:
000006A7                    	.iram
                            	.public _Status
                            	_Status:
000006A7 00 00              		.dw 0
000006A8                    	.iram
                            	.public _Ret
                            	_Ret:
000006A8 00 00              		.dw 0
000006A9                    	.iram
                            	.public _Key
                            	_Key:
000006A9 00 00              		.dw 0
000006AA                    	.iram
                            	.public _Addr
                            	_Addr:
000006AA 00 00              		.dw 0
000006AB                    	.iram
                            	.public _Save_Addr
                            	_Save_Addr:
000006AB 00 00              		.dw 0
                            	.external _System_ServiceLoop
                            	.external _SACM_DVR_Decode
                            	.external _F_FlashRead
                            	.external _SACM_DVR_Status
                            	.external _F_FlashWrite1Word
                            	.external _SACM_DVR_Encode
                            	.external _SACM_DVR_InitDecoder
                            	.external _SACM_DVR_FillQueue
                            	.external _SACM_DVR_FetchQueue
                            	.external _SACM_DVR_TestQueue
                            	.external _SACM_DVR_Stop
                            	.external _SACM_DVR_InitEncoder
                            	.external _SACM_DVR_InitQueue
                            	.external _F_FlashErase
                            	.external _Clear_WatchDog
                            	.external _SP_GetCh
                            	.external _SACM_DVR_Initial
                            	.external _System_Initial
                            		.end
0 error(s), 0 warning(s).

